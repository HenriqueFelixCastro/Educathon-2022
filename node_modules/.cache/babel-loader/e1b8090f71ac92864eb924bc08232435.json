{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport KalturaPlayerAPI from '@carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer';\nimport LightboxMediaViewer from '../LightboxMediaViewer/LightboxMediaViewer';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport uniqueid from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/uniqueid/uniqueid';\nimport VideoImageOverlay from './VideoImageOverlay';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * VideoPlayer component.\n */\n\nvar VideoPlayer = function VideoPlayer(_ref) {\n  var showCaption = _ref.showCaption,\n      videoId = _ref.videoId,\n      customClassName = _ref.customClassName,\n      autoPlay = _ref.autoPlay,\n      aspectRatio = _ref.aspectRatio,\n      playingMode = _ref.playingMode,\n      caption = _ref.caption,\n      thumbnail = _ref.thumbnail;\n\n  var _useState = useState({\n    description: '',\n    name: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoData = _useState2[0],\n      setVideoData = _useState2[1]; // embedVideo is set to true when overlay thumbnail is clicked\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      embedVideo = _useState4[0],\n      setEmbedVideo = _useState4[1];\n\n  var videoPlayerId = uniqueid(\"video-player__video-\".concat(videoId, \"-\"));\n  var videoDuration = KalturaPlayerAPI.getMediaDuration(videoData.msDuration, true);\n  useEffect(function () {\n    var stale = false;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newVideoData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(autoPlay || embedVideo)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return KalturaPlayerAPI.embedMedia(videoId, \"\".concat(prefix, \"--\").concat(videoPlayerId));\n\n            case 3:\n              if (!stale) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              _context.next = 7;\n              return KalturaPlayerAPI.api(videoId);\n\n            case 7:\n              newVideoData = _context.sent;\n\n              if (!stale) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 10:\n              setVideoData(newVideoData);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      stale = true;\n    };\n  }, [autoPlay, videoId, videoPlayerId, embedVideo]);\n  var classnames = cx(\"\".concat(prefix, \"--video-player\"), customClassName);\n  var aspectRatioClass = cx(_defineProperty({}, \"\".concat(prefix, \"--video-player__aspect-ratio--\").concat(aspectRatio), aspectRatio));\n  var renderInLightbox = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video\")\n  }, /*#__PURE__*/React.createElement(VideoImageOverlay, {\n    videoId: videoId,\n    videoData: videoData,\n    embedVideo: setEmbedVideo,\n    playingMode: playingMode,\n    onClick: function onClick() {\n      return setEmbedVideo(true);\n    },\n    thumbnail: thumbnail\n  })), /*#__PURE__*/React.createElement(LightboxMediaViewer, {\n    open: embedVideo,\n    media: {\n      type: 'video',\n      src: videoId\n    },\n    onClose: function onClose() {\n      return setEmbedVideo(false);\n    }\n  }));\n  var renderInline = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video\"),\n    id: \"\".concat(prefix, \"--\").concat(videoPlayerId)\n  }, !autoPlay && /*#__PURE__*/React.createElement(VideoImageOverlay, {\n    videoId: videoId,\n    videoData: videoData,\n    embedVideo: setEmbedVideo,\n    playingMode: playingMode,\n    thumbnail: thumbnail\n  }));\n  var videoCaption = \"\".concat(caption || videoData.name, \" \").concat(videoDuration);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": videoCaption,\n    className: classnames\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video-container \").concat(aspectRatioClass),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--video-player__video-\").concat(videoId)\n  }, playingMode === 'lightbox' ? renderInLightbox : renderInline), showCaption && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video-caption\")\n  }, videoCaption));\n};\n\nVideoPlayer.propTypes = {\n  /**\n   * `true` to autoplay the video on load\n   */\n  autoPlay: PropTypes.bool,\n\n  /**\n   * Override default aspect ratio of `16x9`.\n   * Available aspect ratios:\n   *\n   * `16x9`, `9x16`, `2x1`, `1x2`, `4x3`, `3x4`, `1x1`\n   */\n  aspectRatio: PropTypes.string,\n\n  /**\n   * The CSS class name to apply.\n   */\n  customClassName: PropTypes.string,\n\n  /**\n   * Video ID from Kaltura video platform.\n   */\n  videoId: PropTypes.string.isRequired,\n\n  /**\n   * `true` to show the description.\n   */\n  showCaption: PropTypes.bool,\n\n  /**\n   * Optional custom video caption\n   */\n  caption: PropTypes.string,\n\n  /**\n   * Choose whether the video will be rendered inline or using the `LightboxMediaViewer`.\n   */\n  playingMode: PropTypes.oneOf(['inline', 'lightbox']),\n\n  /**\n   * Optional custom video thumbnail\n   */\n  thumbnail: PropTypes.string\n};\nVideoPlayer.defaultProps = {\n  autoPlay: false,\n  playingMode: 'inline'\n};\nexport default VideoPlayer;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/VideoPlayer/VideoPlayer.js"],"names":["_defineProperty","_regeneratorRuntime","_asyncToGenerator","_slicedToArray","React","useEffect","useState","cx","ddsSettings","KalturaPlayerAPI","LightboxMediaViewer","PropTypes","settings","uniqueid","VideoImageOverlay","stablePrefix","prefix","VideoPlayer","_ref","showCaption","videoId","customClassName","autoPlay","aspectRatio","playingMode","caption","thumbnail","_useState","description","name","_useState2","videoData","setVideoData","_useState3","_useState4","embedVideo","setEmbedVideo","videoPlayerId","concat","videoDuration","getMediaDuration","msDuration","stale","mark","_callee","newVideoData","wrap","_callee$","_context","prev","next","embedMedia","abrupt","api","sent","stop","classnames","aspectRatioClass","renderInLightbox","createElement","Fragment","className","onClick","open","media","type","src","onClose","renderInline","id","videoCaption","propTypes","bool","string","isRequired","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport KalturaPlayerAPI from '@carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer';\nimport LightboxMediaViewer from '../LightboxMediaViewer/LightboxMediaViewer';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport uniqueid from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/uniqueid/uniqueid';\nimport VideoImageOverlay from './VideoImageOverlay';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * VideoPlayer component.\n */\n\nvar VideoPlayer = function VideoPlayer(_ref) {\n  var showCaption = _ref.showCaption,\n      videoId = _ref.videoId,\n      customClassName = _ref.customClassName,\n      autoPlay = _ref.autoPlay,\n      aspectRatio = _ref.aspectRatio,\n      playingMode = _ref.playingMode,\n      caption = _ref.caption,\n      thumbnail = _ref.thumbnail;\n\n  var _useState = useState({\n    description: '',\n    name: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoData = _useState2[0],\n      setVideoData = _useState2[1]; // embedVideo is set to true when overlay thumbnail is clicked\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      embedVideo = _useState4[0],\n      setEmbedVideo = _useState4[1];\n\n  var videoPlayerId = uniqueid(\"video-player__video-\".concat(videoId, \"-\"));\n  var videoDuration = KalturaPlayerAPI.getMediaDuration(videoData.msDuration, true);\n  useEffect(function () {\n    var stale = false;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newVideoData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(autoPlay || embedVideo)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return KalturaPlayerAPI.embedMedia(videoId, \"\".concat(prefix, \"--\").concat(videoPlayerId));\n\n            case 3:\n              if (!stale) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              _context.next = 7;\n              return KalturaPlayerAPI.api(videoId);\n\n            case 7:\n              newVideoData = _context.sent;\n\n              if (!stale) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 10:\n              setVideoData(newVideoData);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      stale = true;\n    };\n  }, [autoPlay, videoId, videoPlayerId, embedVideo]);\n  var classnames = cx(\"\".concat(prefix, \"--video-player\"), customClassName);\n  var aspectRatioClass = cx(_defineProperty({}, \"\".concat(prefix, \"--video-player__aspect-ratio--\").concat(aspectRatio), aspectRatio));\n  var renderInLightbox = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video\")\n  }, /*#__PURE__*/React.createElement(VideoImageOverlay, {\n    videoId: videoId,\n    videoData: videoData,\n    embedVideo: setEmbedVideo,\n    playingMode: playingMode,\n    onClick: function onClick() {\n      return setEmbedVideo(true);\n    },\n    thumbnail: thumbnail\n  })), /*#__PURE__*/React.createElement(LightboxMediaViewer, {\n    open: embedVideo,\n    media: {\n      type: 'video',\n      src: videoId\n    },\n    onClose: function onClose() {\n      return setEmbedVideo(false);\n    }\n  }));\n  var renderInline = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video\"),\n    id: \"\".concat(prefix, \"--\").concat(videoPlayerId)\n  }, !autoPlay && /*#__PURE__*/React.createElement(VideoImageOverlay, {\n    videoId: videoId,\n    videoData: videoData,\n    embedVideo: setEmbedVideo,\n    playingMode: playingMode,\n    thumbnail: thumbnail\n  }));\n  var videoCaption = \"\".concat(caption || videoData.name, \" \").concat(videoDuration);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": videoCaption,\n    className: classnames\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video-container \").concat(aspectRatioClass),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--video-player__video-\").concat(videoId)\n  }, playingMode === 'lightbox' ? renderInLightbox : renderInline), showCaption && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--video-player__video-caption\")\n  }, videoCaption));\n};\n\nVideoPlayer.propTypes = {\n  /**\n   * `true` to autoplay the video on load\n   */\n  autoPlay: PropTypes.bool,\n\n  /**\n   * Override default aspect ratio of `16x9`.\n   * Available aspect ratios:\n   *\n   * `16x9`, `9x16`, `2x1`, `1x2`, `4x3`, `3x4`, `1x1`\n   */\n  aspectRatio: PropTypes.string,\n\n  /**\n   * The CSS class name to apply.\n   */\n  customClassName: PropTypes.string,\n\n  /**\n   * Video ID from Kaltura video platform.\n   */\n  videoId: PropTypes.string.isRequired,\n\n  /**\n   * `true` to show the description.\n   */\n  showCaption: PropTypes.bool,\n\n  /**\n   * Optional custom video caption\n   */\n  caption: PropTypes.string,\n\n  /**\n   * Choose whether the video will be rendered inline or using the `LightboxMediaViewer`.\n   */\n  playingMode: PropTypes.oneOf(['inline', 'lightbox']),\n\n  /**\n   * Optional custom video thumbnail\n   */\n  thumbnail: PropTypes.string\n};\nVideoPlayer.defaultProps = {\n  autoPlay: false,\n  playingMode: 'inline'\n};\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}