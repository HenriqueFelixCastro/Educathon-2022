{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"active\", \"children\", \"className\", \"hideLabel\", \"label\", \"multiselect\", \"onSelect\", \"selected\", \"size\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { keys, match, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nimport * as FeatureFlags from '@carbon/feature-flags';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function TreeView(_ref) {\n  var prespecifiedActive = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      label = _ref.label,\n      multiselect = _ref.multiselect,\n      onSelect = _ref.onSelect,\n      _ref$selected = _ref.selected,\n      preselected = _ref$selected === void 0 ? [] : _ref$selected,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? FeatureFlags.enabled('enable-v11-release') ? 'sm' : 'default' : _ref$size,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      treeId = _useRef.current;\n\n  var prefix = usePrefix();\n  var treeClasses = classNames(className, \"\".concat(prefix, \"--tree\"), _defineProperty({}, \"\".concat(prefix, \"--tree--\").concat(size), size !== 'default'));\n  var treeRootRef = useRef(null);\n  var treeWalker = useRef(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current);\n\n  var _useState = useState(preselected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(prespecifiedActive),\n      _useState4 = _slicedToArray(_useState3, 2),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  function resetNodeTabIndices() {\n    var _treeRootRef$current$, _treeRootRef$current;\n\n    Array.prototype.forEach.call((_treeRootRef$current$ = treeRootRef === null || treeRootRef === void 0 ? void 0 : (_treeRootRef$current = treeRootRef.current) === null || _treeRootRef$current === void 0 ? void 0 : _treeRootRef$current.querySelectorAll('[tabIndex=\"0\"]')) !== null && _treeRootRef$current$ !== void 0 ? _treeRootRef$current$ : [], function (item) {\n      item.tabIndex = -1;\n    });\n  }\n\n  function handleTreeSelect(event) {\n    var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodeId = node.id;\n\n    if (multiselect && (event.metaKey || event.ctrlKey)) {\n      if (!selected.includes(nodeId)) {\n        setSelected(selected.concat(nodeId));\n      } else {\n        setSelected(selected.filter(function (selectedId) {\n          return selectedId !== nodeId;\n        }));\n      }\n    } else {\n      setSelected([nodeId]);\n      setActive(nodeId);\n    }\n\n    if (onSelect) {\n      onSelect(event, node);\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _treeRootRef$current2;\n\n      var currentFocusedNode = event.relatedTarget,\n          prevFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current2 = treeRootRef.current) !== null && _treeRootRef$current2 !== void 0 && _treeRootRef$current2.contains(currentFocusedNode)) {\n        prevFocusedNode.tabIndex = -1;\n      }\n    }\n\n    if (event.type === 'focus') {\n      var _treeRootRef$current3;\n\n      resetNodeTabIndices();\n      var _prevFocusedNode = event.relatedTarget,\n          _currentFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current3 = treeRootRef.current) !== null && _treeRootRef$current3 !== void 0 && _treeRootRef$current3.contains(_prevFocusedNode)) {\n        _prevFocusedNode.tabIndex = -1;\n      }\n\n      _currentFocusedNode.tabIndex = 0;\n    }\n  }\n\n  var focusTarget = false;\n  var nodesWithProps = React.Children.map(children, function (node) {\n    var sharedNodeProps = {\n      active: active,\n      depth: 0,\n      onNodeFocusEvent: handleFocusEvent,\n      onTreeSelect: handleTreeSelect,\n      selected: selected,\n      tabIndex: !node.props.disabled && -1 || null\n    };\n\n    if (!focusTarget && !node.props.disabled) {\n      sharedNodeProps.tabIndex = 0;\n      focusTarget = true;\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node, sharedNodeProps);\n    }\n  });\n\n  function handleKeyDown(event) {\n    event.stopPropagation();\n\n    if (matches(event, [keys.ArrowUp, keys.ArrowDown])) {\n      event.preventDefault();\n    }\n\n    treeWalker.current.currentNode = event.target;\n    var nextFocusNode;\n\n    if (match(event, keys.ArrowUp)) {\n      nextFocusNode = treeWalker.current.previousNode();\n    }\n\n    if (match(event, keys.ArrowDown)) {\n      nextFocusNode = treeWalker.current.nextNode();\n    }\n\n    if (nextFocusNode && nextFocusNode !== event.target) {\n      resetNodeTabIndices();\n      nextFocusNode.tabIndex = 0;\n      nextFocusNode.focus();\n    }\n\n    if (rest.onKeyDown) {\n      rest.onKeyDown(event);\n    }\n  }\n\n  useEffect(function () {\n    var _treeWalker$current;\n\n    treeWalker.current = (_treeWalker$current = treeWalker.current) !== null && _treeWalker$current !== void 0 ? _treeWalker$current : document.createTreeWalker(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: function acceptNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-node--disabled\"))) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if (node.matches(\"li.\".concat(prefix, \"--tree-node\"))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    });\n  }, [prefix]);\n  useEffect(function () {\n    if (preselected.length) {\n      setSelected(preselected);\n    }\n\n    if (prespecifiedActive) {\n      setActive(prespecifiedActive);\n    }\n  }, [preselected, prespecifiedActive]);\n  var labelId = \"\".concat(treeId, \"__label\");\n\n  var TreeLabel = function TreeLabel() {\n    return !hideLabel && /*#__PURE__*/React.createElement(\"label\", {\n      id: labelId,\n      className: \"\".concat(prefix, \"--label\")\n    }, label);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TreeLabel, null), /*#__PURE__*/React.createElement(\"ul\", _extends({}, rest, {\n    \"aria-label\": hideLabel ? label : null,\n    \"aria-labelledby\": !hideLabel ? labelId : null,\n    \"aria-multiselectable\": multiselect || null,\n    className: treeClasses,\n    onKeyDown: handleKeyDown,\n    ref: treeRootRef,\n    role: \"tree\"\n  }), nodesWithProps));\n}\nTreeView.propTypes = {\n  /**\n   * Mark the active node in the tree, represented by its value\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeView\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeView\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Specify the selection mode of the tree.\n   * If `multiselect` is `false` then only one node can be selected at a time\n   */\n  multiselect: PropTypes.bool,\n\n  /**\n   * Callback function that is called when any node is selected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Array representing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  size: FeatureFlags.enabled('enable-v11-release') ? PropTypes.oneOf(['xs', 'sm']) : PropTypes.oneOf(['default', 'compact'])\n};","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/TreeView/TreeView.js"],"names":["_extends","_slicedToArray","_defineProperty","_objectWithoutProperties","_excluded","React","useEffect","useRef","useState","PropTypes","classNames","keys","match","matches","uniqueId","FeatureFlags","usePrefix","TreeView","_ref","prespecifiedActive","active","children","className","_ref$hideLabel","hideLabel","label","multiselect","onSelect","_ref$selected","selected","preselected","_ref$size","size","enabled","rest","_useRef","id","treeId","current","prefix","treeClasses","concat","treeRootRef","treeWalker","_useState","_useState2","setSelected","_useState3","_useState4","setActive","resetNodeTabIndices","_treeRootRef$current$","_treeRootRef$current","Array","prototype","forEach","call","querySelectorAll","item","tabIndex","handleTreeSelect","event","node","arguments","length","undefined","nodeId","metaKey","ctrlKey","includes","filter","selectedId","handleFocusEvent","type","_treeRootRef$current2","currentFocusedNode","relatedTarget","prevFocusedNode","target","contains","_treeRootRef$current3","_prevFocusedNode","_currentFocusedNode","focusTarget","nodesWithProps","Children","map","sharedNodeProps","depth","onNodeFocusEvent","onTreeSelect","props","disabled","isValidElement","cloneElement","handleKeyDown","stopPropagation","ArrowUp","ArrowDown","preventDefault","currentNode","nextFocusNode","previousNode","nextNode","focus","onKeyDown","_treeWalker$current","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","classList","FILTER_REJECT","FILTER_ACCEPT","FILTER_SKIP","labelId","TreeLabel","createElement","Fragment","ref","role","propTypes","oneOfType","string","number","bool","isRequired","func","arrayOf","oneOf"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,WAAvB,EAAoC,WAApC,EAAiD,OAAjD,EAA0D,aAA1D,EAAyE,UAAzE,EAAqF,UAArF,EAAiG,MAAjG,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,QAAqC,yBAArC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,YAAZ,MAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,kBAAkB,GAAGD,IAAI,CAACE,MAA9B;AAAA,MACIC,QAAQ,GAAGH,IAAI,CAACG,QADpB;AAAA,MAEIC,SAAS,GAAGJ,IAAI,CAACI,SAFrB;AAAA,MAGIC,cAAc,GAAGL,IAAI,CAACM,SAH1B;AAAA,MAIIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,KAA5B,GAAoCA,cAJpD;AAAA,MAKIE,KAAK,GAAGP,IAAI,CAACO,KALjB;AAAA,MAMIC,WAAW,GAAGR,IAAI,CAACQ,WANvB;AAAA,MAOIC,QAAQ,GAAGT,IAAI,CAACS,QAPpB;AAAA,MAQIC,aAAa,GAAGV,IAAI,CAACW,QARzB;AAAA,MASIC,WAAW,GAAGF,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aATlD;AAAA,MAUIG,SAAS,GAAGb,IAAI,CAACc,IAVrB;AAAA,MAWIA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuBhB,YAAY,CAACkB,OAAb,CAAqB,oBAArB,IAA6C,IAA7C,GAAoD,SAA3E,GAAuFF,SAXlG;AAAA,MAYIG,IAAI,GAAG/B,wBAAwB,CAACe,IAAD,EAAOd,SAAP,CAZnC;;AAcA,MAAI+B,OAAO,GAAG5B,MAAM,CAAC2B,IAAI,CAACE,EAAL,IAAWtB,QAAQ,EAApB,CAApB;AAAA,MACIuB,MAAM,GAAGF,OAAO,CAACG,OADrB;;AAGA,MAAIC,MAAM,GAAGvB,SAAS,EAAtB;AACA,MAAIwB,WAAW,GAAG9B,UAAU,CAACY,SAAD,EAAY,GAAGmB,MAAH,CAAUF,MAAV,EAAkB,QAAlB,CAAZ,EAAyCrC,eAAe,CAAC,EAAD,EAAK,GAAGuC,MAAH,CAAUF,MAAV,EAAkB,UAAlB,EAA8BE,MAA9B,CAAqCT,IAArC,CAAL,EAAiDA,IAAI,KAAK,SAA1D,CAAxD,CAA5B;AACA,MAAIU,WAAW,GAAGnC,MAAM,CAAC,IAAD,CAAxB;AACA,MAAIoC,UAAU,GAAGpC,MAAM,CAACmC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACJ,OAAvE,CAAvB;;AAEA,MAAIM,SAAS,GAAGpC,QAAQ,CAACsB,WAAD,CAAxB;AAAA,MACIe,UAAU,GAAG5C,cAAc,CAAC2C,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIf,QAAQ,GAAGgB,UAAU,CAAC,CAAD,CAFzB;AAAA,MAGIC,WAAW,GAAGD,UAAU,CAAC,CAAD,CAH5B;;AAKA,MAAIE,UAAU,GAAGvC,QAAQ,CAACW,kBAAD,CAAzB;AAAA,MACI6B,UAAU,GAAG/C,cAAc,CAAC8C,UAAD,EAAa,CAAb,CAD/B;AAAA,MAEI3B,MAAM,GAAG4B,UAAU,CAAC,CAAD,CAFvB;AAAA,MAGIC,SAAS,GAAGD,UAAU,CAAC,CAAD,CAH1B;;AAKA,WAASE,mBAAT,GAA+B;AAC7B,QAAIC,qBAAJ,EAA2BC,oBAA3B;;AAEAC,IAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6B,CAACL,qBAAqB,GAAGT,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0D,CAACU,oBAAoB,GAAGV,WAAW,CAACJ,OAApC,MAAiD,IAAjD,IAAyDc,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACK,gBAArB,CAAsC,gBAAtC,CAAvL,MAAoP,IAApP,IAA4PN,qBAAqB,KAAK,KAAK,CAA3R,GAA+RA,qBAA/R,GAAuT,EAApV,EAAwV,UAAUO,IAAV,EAAgB;AACtWA,MAAAA,IAAI,CAACC,QAAL,GAAgB,CAAC,CAAjB;AACD,KAFD;AAGD;;AAED,WAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACA,QAAIG,MAAM,GAAGJ,IAAI,CAAC1B,EAAlB;;AAEA,QAAIV,WAAW,KAAKmC,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACO,OAA5B,CAAf,EAAqD;AACnD,UAAI,CAACvC,QAAQ,CAACwC,QAAT,CAAkBH,MAAlB,CAAL,EAAgC;AAC9BpB,QAAAA,WAAW,CAACjB,QAAQ,CAACY,MAAT,CAAgByB,MAAhB,CAAD,CAAX;AACD,OAFD,MAEO;AACLpB,QAAAA,WAAW,CAACjB,QAAQ,CAACyC,MAAT,CAAgB,UAAUC,UAAV,EAAsB;AAChD,iBAAOA,UAAU,KAAKL,MAAtB;AACD,SAFW,CAAD,CAAX;AAGD;AACF,KARD,MAQO;AACLpB,MAAAA,WAAW,CAAC,CAACoB,MAAD,CAAD,CAAX;AACAjB,MAAAA,SAAS,CAACiB,MAAD,CAAT;AACD;;AAED,QAAIvC,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACkC,KAAD,EAAQC,IAAR,CAAR;AACD;AACF;;AAED,WAASU,gBAAT,CAA0BX,KAA1B,EAAiC;AAC/B,QAAIA,KAAK,CAACY,IAAN,KAAe,MAAnB,EAA2B;AACzB,UAAIC,qBAAJ;;AAEA,UAAIC,kBAAkB,GAAGd,KAAK,CAACe,aAA/B;AAAA,UACIC,eAAe,GAAGhB,KAAK,CAACiB,MAD5B;;AAGA,UAAIpC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,IAAkD,CAACgC,qBAAqB,GAAGhC,WAAW,CAACJ,OAArC,MAAkD,IAApG,IAA4GoC,qBAAqB,KAAK,KAAK,CAA3I,IAAgJA,qBAAqB,CAACK,QAAtB,CAA+BJ,kBAA/B,CAApJ,EAAwM;AACtME,QAAAA,eAAe,CAAClB,QAAhB,GAA2B,CAAC,CAA5B;AACD;AACF;;AAED,QAAIE,KAAK,CAACY,IAAN,KAAe,OAAnB,EAA4B;AAC1B,UAAIO,qBAAJ;;AAEA9B,MAAAA,mBAAmB;AACnB,UAAI+B,gBAAgB,GAAGpB,KAAK,CAACe,aAA7B;AAAA,UACIM,mBAAmB,GAAGrB,KAAK,CAACiB,MADhC;;AAGA,UAAIpC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,IAAkD,CAACsC,qBAAqB,GAAGtC,WAAW,CAACJ,OAArC,MAAkD,IAApG,IAA4G0C,qBAAqB,KAAK,KAAK,CAA3I,IAAgJA,qBAAqB,CAACD,QAAtB,CAA+BE,gBAA/B,CAApJ,EAAsM;AACpMA,QAAAA,gBAAgB,CAACtB,QAAjB,GAA4B,CAAC,CAA7B;AACD;;AAEDuB,MAAAA,mBAAmB,CAACvB,QAApB,GAA+B,CAA/B;AACD;AACF;;AAED,MAAIwB,WAAW,GAAG,KAAlB;AACA,MAAIC,cAAc,GAAG/E,KAAK,CAACgF,QAAN,CAAeC,GAAf,CAAmBjE,QAAnB,EAA6B,UAAUyC,IAAV,EAAgB;AAChE,QAAIyB,eAAe,GAAG;AACpBnE,MAAAA,MAAM,EAAEA,MADY;AAEpBoE,MAAAA,KAAK,EAAE,CAFa;AAGpBC,MAAAA,gBAAgB,EAAEjB,gBAHE;AAIpBkB,MAAAA,YAAY,EAAE9B,gBAJM;AAKpB/B,MAAAA,QAAQ,EAAEA,QALU;AAMpB8B,MAAAA,QAAQ,EAAE,CAACG,IAAI,CAAC6B,KAAL,CAAWC,QAAZ,IAAwB,CAAC,CAAzB,IAA8B;AANpB,KAAtB;;AASA,QAAI,CAACT,WAAD,IAAgB,CAACrB,IAAI,CAAC6B,KAAL,CAAWC,QAAhC,EAA0C;AACxCL,MAAAA,eAAe,CAAC5B,QAAhB,GAA2B,CAA3B;AACAwB,MAAAA,WAAW,GAAG,IAAd;AACD;;AAED,SAAK,aAAa9E,KAAK,CAACwF,cAAN,CAAqB/B,IAArB,CAAlB,EAA8C;AAC5C,aAAO,aAAazD,KAAK,CAACyF,YAAN,CAAmBhC,IAAnB,EAAyByB,eAAzB,CAApB;AACD;AACF,GAlBoB,CAArB;;AAoBA,WAASQ,aAAT,CAAuBlC,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACmC,eAAN;;AAEA,QAAInF,OAAO,CAACgD,KAAD,EAAQ,CAAClD,IAAI,CAACsF,OAAN,EAAetF,IAAI,CAACuF,SAApB,CAAR,CAAX,EAAoD;AAClDrC,MAAAA,KAAK,CAACsC,cAAN;AACD;;AAEDxD,IAAAA,UAAU,CAACL,OAAX,CAAmB8D,WAAnB,GAAiCvC,KAAK,CAACiB,MAAvC;AACA,QAAIuB,aAAJ;;AAEA,QAAIzF,KAAK,CAACiD,KAAD,EAAQlD,IAAI,CAACsF,OAAb,CAAT,EAAgC;AAC9BI,MAAAA,aAAa,GAAG1D,UAAU,CAACL,OAAX,CAAmBgE,YAAnB,EAAhB;AACD;;AAED,QAAI1F,KAAK,CAACiD,KAAD,EAAQlD,IAAI,CAACuF,SAAb,CAAT,EAAkC;AAChCG,MAAAA,aAAa,GAAG1D,UAAU,CAACL,OAAX,CAAmBiE,QAAnB,EAAhB;AACD;;AAED,QAAIF,aAAa,IAAIA,aAAa,KAAKxC,KAAK,CAACiB,MAA7C,EAAqD;AACnD5B,MAAAA,mBAAmB;AACnBmD,MAAAA,aAAa,CAAC1C,QAAd,GAAyB,CAAzB;AACA0C,MAAAA,aAAa,CAACG,KAAd;AACD;;AAED,QAAItE,IAAI,CAACuE,SAAT,EAAoB;AAClBvE,MAAAA,IAAI,CAACuE,SAAL,CAAe5C,KAAf;AACD;AACF;;AAEDvD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIoG,mBAAJ;;AAEA/D,IAAAA,UAAU,CAACL,OAAX,GAAqB,CAACoE,mBAAmB,GAAG/D,UAAU,CAACL,OAAlC,MAA+C,IAA/C,IAAuDoE,mBAAmB,KAAK,KAAK,CAApF,GAAwFA,mBAAxF,GAA8GC,QAAQ,CAACC,gBAAT,CAA0BlE,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACJ,OAAhG,EAAyGuE,UAAU,CAACC,YAApH,EAAkI;AACnQC,MAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBjD,IAApB,EAA0B;AACpC,YAAIA,IAAI,CAACkD,SAAL,CAAejC,QAAf,CAAwB,GAAGtC,MAAH,CAAUF,MAAV,EAAkB,uBAAlB,CAAxB,CAAJ,EAAyE;AACvE,iBAAOsE,UAAU,CAACI,aAAlB;AACD;;AAED,YAAInD,IAAI,CAACjD,OAAL,CAAa,MAAM4B,MAAN,CAAaF,MAAb,EAAqB,aAArB,CAAb,CAAJ,EAAuD;AACrD,iBAAOsE,UAAU,CAACK,aAAlB;AACD;;AAED,eAAOL,UAAU,CAACM,WAAlB;AACD;AAXkQ,KAAlI,CAAnI;AAaD,GAhBQ,EAgBN,CAAC5E,MAAD,CAhBM,CAAT;AAiBAjC,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIwB,WAAW,CAACkC,MAAhB,EAAwB;AACtBlB,MAAAA,WAAW,CAAChB,WAAD,CAAX;AACD;;AAED,QAAIX,kBAAJ,EAAwB;AACtB8B,MAAAA,SAAS,CAAC9B,kBAAD,CAAT;AACD;AACF,GARQ,EAQN,CAACW,WAAD,EAAcX,kBAAd,CARM,CAAT;AASA,MAAIiG,OAAO,GAAG,GAAG3E,MAAH,CAAUJ,MAAV,EAAkB,SAAlB,CAAd;;AAEA,MAAIgF,SAAS,GAAG,SAASA,SAAT,GAAqB;AACnC,WAAO,CAAC7F,SAAD,IAAc,aAAanB,KAAK,CAACiH,aAAN,CAAoB,OAApB,EAA6B;AAC7DlF,MAAAA,EAAE,EAAEgF,OADyD;AAE7D9F,MAAAA,SAAS,EAAE,GAAGmB,MAAH,CAAUF,MAAV,EAAkB,SAAlB;AAFkD,KAA7B,EAG/Bd,KAH+B,CAAlC;AAID,GALD;;AAOA,SAAO,aAAapB,KAAK,CAACiH,aAAN,CAAoBjH,KAAK,CAACkH,QAA1B,EAAoC,IAApC,EAA0C,aAAalH,KAAK,CAACiH,aAAN,CAAoBD,SAApB,EAA+B,IAA/B,CAAvD,EAA6F,aAAahH,KAAK,CAACiH,aAAN,CAAoB,IAApB,EAA0BtH,QAAQ,CAAC,EAAD,EAAKkC,IAAL,EAAW;AACzK,kBAAcV,SAAS,GAAGC,KAAH,GAAW,IADuI;AAEzK,uBAAmB,CAACD,SAAD,GAAa4F,OAAb,GAAuB,IAF+H;AAGzK,4BAAwB1F,WAAW,IAAI,IAHkI;AAIzKJ,IAAAA,SAAS,EAAEkB,WAJ8J;AAKzKiE,IAAAA,SAAS,EAAEV,aAL8J;AAMzKyB,IAAAA,GAAG,EAAE9E,WANoK;AAOzK+E,IAAAA,IAAI,EAAE;AAPmK,GAAX,CAAlC,EAQ1HrC,cAR0H,CAA1G,CAApB;AASD;AACDnE,QAAQ,CAACyG,SAAT,GAAqB;AACnB;AACF;AACA;AACEtG,EAAAA,MAAM,EAAEX,SAAS,CAACkH,SAAV,CAAoB,CAAClH,SAAS,CAACmH,MAAX,EAAmBnH,SAAS,CAACoH,MAA7B,CAApB,CAJW;;AAMnB;AACF;AACA;AACExG,EAAAA,QAAQ,EAAEZ,SAAS,CAACqD,IATD;;AAWnB;AACF;AACA;AACExC,EAAAA,SAAS,EAAEb,SAAS,CAACmH,MAdF;;AAgBnB;AACF;AACA;AACEpG,EAAAA,SAAS,EAAEf,SAAS,CAACqH,IAnBF;;AAqBnB;AACF;AACA;AACErG,EAAAA,KAAK,EAAEhB,SAAS,CAACmH,MAAV,CAAiBG,UAxBL;;AA0BnB;AACF;AACA;AACA;AACErG,EAAAA,WAAW,EAAEjB,SAAS,CAACqH,IA9BJ;;AAgCnB;AACF;AACA;AACEnG,EAAAA,QAAQ,EAAElB,SAAS,CAACuH,IAnCD;;AAqCnB;AACF;AACA;AACEnG,EAAAA,QAAQ,EAAEpB,SAAS,CAACwH,OAAV,CAAkBxH,SAAS,CAACkH,SAAV,CAAoB,CAAClH,SAAS,CAACmH,MAAX,EAAmBnH,SAAS,CAACoH,MAA7B,CAApB,CAAlB,CAxCS;;AA0CnB;AACF;AACA;AACE7F,EAAAA,IAAI,EAAEjB,YAAY,CAACkB,OAAb,CAAqB,oBAArB,IAA6CxB,SAAS,CAACyH,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,CAAhB,CAA7C,GAA6EzH,SAAS,CAACyH,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB;AA7ChE,CAArB","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"active\", \"children\", \"className\", \"hideLabel\", \"label\", \"multiselect\", \"onSelect\", \"selected\", \"size\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { keys, match, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nimport * as FeatureFlags from '@carbon/feature-flags';\nimport { usePrefix } from '../../internal/usePrefix';\nexport default function TreeView(_ref) {\n  var prespecifiedActive = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      label = _ref.label,\n      multiselect = _ref.multiselect,\n      onSelect = _ref.onSelect,\n      _ref$selected = _ref.selected,\n      preselected = _ref$selected === void 0 ? [] : _ref$selected,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? FeatureFlags.enabled('enable-v11-release') ? 'sm' : 'default' : _ref$size,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      treeId = _useRef.current;\n\n  var prefix = usePrefix();\n  var treeClasses = classNames(className, \"\".concat(prefix, \"--tree\"), _defineProperty({}, \"\".concat(prefix, \"--tree--\").concat(size), size !== 'default'));\n  var treeRootRef = useRef(null);\n  var treeWalker = useRef(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current);\n\n  var _useState = useState(preselected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(prespecifiedActive),\n      _useState4 = _slicedToArray(_useState3, 2),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  function resetNodeTabIndices() {\n    var _treeRootRef$current$, _treeRootRef$current;\n\n    Array.prototype.forEach.call((_treeRootRef$current$ = treeRootRef === null || treeRootRef === void 0 ? void 0 : (_treeRootRef$current = treeRootRef.current) === null || _treeRootRef$current === void 0 ? void 0 : _treeRootRef$current.querySelectorAll('[tabIndex=\"0\"]')) !== null && _treeRootRef$current$ !== void 0 ? _treeRootRef$current$ : [], function (item) {\n      item.tabIndex = -1;\n    });\n  }\n\n  function handleTreeSelect(event) {\n    var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodeId = node.id;\n\n    if (multiselect && (event.metaKey || event.ctrlKey)) {\n      if (!selected.includes(nodeId)) {\n        setSelected(selected.concat(nodeId));\n      } else {\n        setSelected(selected.filter(function (selectedId) {\n          return selectedId !== nodeId;\n        }));\n      }\n    } else {\n      setSelected([nodeId]);\n      setActive(nodeId);\n    }\n\n    if (onSelect) {\n      onSelect(event, node);\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _treeRootRef$current2;\n\n      var currentFocusedNode = event.relatedTarget,\n          prevFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current2 = treeRootRef.current) !== null && _treeRootRef$current2 !== void 0 && _treeRootRef$current2.contains(currentFocusedNode)) {\n        prevFocusedNode.tabIndex = -1;\n      }\n    }\n\n    if (event.type === 'focus') {\n      var _treeRootRef$current3;\n\n      resetNodeTabIndices();\n      var _prevFocusedNode = event.relatedTarget,\n          _currentFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current3 = treeRootRef.current) !== null && _treeRootRef$current3 !== void 0 && _treeRootRef$current3.contains(_prevFocusedNode)) {\n        _prevFocusedNode.tabIndex = -1;\n      }\n\n      _currentFocusedNode.tabIndex = 0;\n    }\n  }\n\n  var focusTarget = false;\n  var nodesWithProps = React.Children.map(children, function (node) {\n    var sharedNodeProps = {\n      active: active,\n      depth: 0,\n      onNodeFocusEvent: handleFocusEvent,\n      onTreeSelect: handleTreeSelect,\n      selected: selected,\n      tabIndex: !node.props.disabled && -1 || null\n    };\n\n    if (!focusTarget && !node.props.disabled) {\n      sharedNodeProps.tabIndex = 0;\n      focusTarget = true;\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node, sharedNodeProps);\n    }\n  });\n\n  function handleKeyDown(event) {\n    event.stopPropagation();\n\n    if (matches(event, [keys.ArrowUp, keys.ArrowDown])) {\n      event.preventDefault();\n    }\n\n    treeWalker.current.currentNode = event.target;\n    var nextFocusNode;\n\n    if (match(event, keys.ArrowUp)) {\n      nextFocusNode = treeWalker.current.previousNode();\n    }\n\n    if (match(event, keys.ArrowDown)) {\n      nextFocusNode = treeWalker.current.nextNode();\n    }\n\n    if (nextFocusNode && nextFocusNode !== event.target) {\n      resetNodeTabIndices();\n      nextFocusNode.tabIndex = 0;\n      nextFocusNode.focus();\n    }\n\n    if (rest.onKeyDown) {\n      rest.onKeyDown(event);\n    }\n  }\n\n  useEffect(function () {\n    var _treeWalker$current;\n\n    treeWalker.current = (_treeWalker$current = treeWalker.current) !== null && _treeWalker$current !== void 0 ? _treeWalker$current : document.createTreeWalker(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: function acceptNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-node--disabled\"))) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if (node.matches(\"li.\".concat(prefix, \"--tree-node\"))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    });\n  }, [prefix]);\n  useEffect(function () {\n    if (preselected.length) {\n      setSelected(preselected);\n    }\n\n    if (prespecifiedActive) {\n      setActive(prespecifiedActive);\n    }\n  }, [preselected, prespecifiedActive]);\n  var labelId = \"\".concat(treeId, \"__label\");\n\n  var TreeLabel = function TreeLabel() {\n    return !hideLabel && /*#__PURE__*/React.createElement(\"label\", {\n      id: labelId,\n      className: \"\".concat(prefix, \"--label\")\n    }, label);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TreeLabel, null), /*#__PURE__*/React.createElement(\"ul\", _extends({}, rest, {\n    \"aria-label\": hideLabel ? label : null,\n    \"aria-labelledby\": !hideLabel ? labelId : null,\n    \"aria-multiselectable\": multiselect || null,\n    className: treeClasses,\n    onKeyDown: handleKeyDown,\n    ref: treeRootRef,\n    role: \"tree\"\n  }), nodesWithProps));\n}\nTreeView.propTypes = {\n  /**\n   * Mark the active node in the tree, represented by its value\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeView\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeView\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Specify the selection mode of the tree.\n   * If `multiselect` is `false` then only one node can be selected at a time\n   */\n  multiselect: PropTypes.bool,\n\n  /**\n   * Callback function that is called when any node is selected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Array representing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  size: FeatureFlags.enabled('enable-v11-release') ? PropTypes.oneOf(['xs', 'sm']) : PropTypes.oneOf(['default', 'compact'])\n};"]},"metadata":{},"sourceType":"module"}