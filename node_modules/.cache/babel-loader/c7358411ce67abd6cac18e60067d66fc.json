{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"children\", \"className\", \"iconDescription\", \"open\", \"onHeadingClick\", \"renderExpando\", \"renderToggle\", \"title\", \"disabled\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Text } from '../Text';\nimport { match, keys } from '../../internal/keyboard';\nimport { useId } from '../../internal/useId';\nimport deprecate from '../../prop-types/deprecate';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar defaultRenderToggle = function defaultRenderToggle(props) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\"\n  }, props));\n};\n\nfunction AccordionItem(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      iconDescription = _ref.iconDescription,\n      _ref$open = _ref.open,\n      open = _ref$open === void 0 ? false : _ref$open,\n      onHeadingClick = _ref.onHeadingClick,\n      _ref$renderExpando = _ref.renderExpando,\n      renderExpando = _ref$renderExpando === void 0 ? defaultRenderToggle : _ref$renderExpando,\n      renderToggle = _ref.renderToggle,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'title' : _ref$title,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(open),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevIsOpen = _useState4[0],\n      setPrevIsOpen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animation = _useState6[0],\n      setAnimation = _useState6[1];\n\n  var id = useId('accordion-item');\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--active\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--\").concat(animation), animation), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--disabled\"), disabled), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  var Toggle = renderToggle || renderExpando; // remove renderExpando in next major release\n\n  if (open !== prevIsOpen) {\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(open);\n    setPrevIsOpen(open);\n  } // When the AccordionItem heading is clicked, toggle the open state of the\n  // panel\n\n\n  function onClick(event) {\n    var nextValue = !isOpen;\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(nextValue);\n\n    if (onHeadingClick) {\n      // TODO: normalize signature, potentially:\n      // onHeadingClick :: (event: Event, state: { isOpen: Boolean }) => any\n      onHeadingClick({\n        isOpen: nextValue,\n        event: event\n      });\n    }\n  } // If the AccordionItem is open, and the user hits the ESC key, then close it\n\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, keys.Escape)) {\n      setIsOpen(false);\n    }\n  }\n\n  function handleAnimationEnd(event) {\n    if (rest.handleAnimationEnd) {\n      rest.handleAnimationEnd(event);\n    }\n\n    setAnimation('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: className\n  }, rest, {\n    onAnimationEnd: handleAnimationEnd\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    disabled: disabled,\n    \"aria-controls\": id,\n    \"aria-expanded\": isOpen,\n    className: \"\".concat(prefix, \"--accordion__heading\"),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--accordion__title\")\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, children));\n}\n\nAccordionItem.propTypes = {\n  /**\n   * Provide the contents of your AccordionItem\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an individual AccordionItem should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The description of the expand icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop has been deprecated as it is no longer ' + 'required. Feel free to remove this prop from <AccordionItem>. This ' + 'prop will be removed in the next major release of ' + '`carbon-components-react`'),\n\n  /**\n   * The handler of the massaged `click` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The handler of the massaged `click` event on the heading.\n   */\n  onHeadingClick: PropTypes.func,\n\n  /**\n   * `true` to open the expand.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderExpando: deprecate(PropTypes.func, 'The `renderExpando` prop has been deprecated and will be removed in the next major release of Carbon. Use the `renderToggle` prop instead.'),\n\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderToggle: PropTypes.func,\n\n  /**\n   * The accordion title.\n   */\n  title: PropTypes.node\n};\nexport default AccordionItem;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Accordion/AccordionItem.js"],"names":["_defineProperty","_slicedToArray","_objectWithoutProperties","_extends","_excluded","ChevronRight16","cx","PropTypes","React","useState","Text","match","keys","useId","deprecate","usePrefix","defaultRenderToggle","props","createElement","type","AccordionItem","_ref","_cx","children","customClassName","className","iconDescription","_ref$open","open","onHeadingClick","_ref$renderExpando","renderExpando","renderToggle","_ref$title","title","disabled","rest","_useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","prevIsOpen","setPrevIsOpen","_useState5","_useState6","animation","setAnimation","id","prefix","concat","Toggle","onClick","event","nextValue","onKeyDown","Escape","handleAnimationEnd","onAnimationEnd","as","propTypes","node","string","bool","func"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _excluded = [\"children\", \"className\", \"iconDescription\", \"open\", \"onHeadingClick\", \"renderExpando\", \"renderToggle\", \"title\", \"disabled\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Text } from '../Text';\nimport { match, keys } from '../../internal/keyboard';\nimport { useId } from '../../internal/useId';\nimport deprecate from '../../prop-types/deprecate';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar defaultRenderToggle = function defaultRenderToggle(props) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\"\n  }, props));\n};\n\nfunction AccordionItem(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      iconDescription = _ref.iconDescription,\n      _ref$open = _ref.open,\n      open = _ref$open === void 0 ? false : _ref$open,\n      onHeadingClick = _ref.onHeadingClick,\n      _ref$renderExpando = _ref.renderExpando,\n      renderExpando = _ref$renderExpando === void 0 ? defaultRenderToggle : _ref$renderExpando,\n      renderToggle = _ref.renderToggle,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'title' : _ref$title,\n      disabled = _ref.disabled,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(open),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevIsOpen = _useState4[0],\n      setPrevIsOpen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animation = _useState6[0],\n      setAnimation = _useState6[1];\n\n  var id = useId('accordion-item');\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--active\"), isOpen), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--\").concat(animation), animation), _defineProperty(_cx, \"\".concat(prefix, \"--accordion__item--disabled\"), disabled), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  var Toggle = renderToggle || renderExpando; // remove renderExpando in next major release\n\n  if (open !== prevIsOpen) {\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(open);\n    setPrevIsOpen(open);\n  } // When the AccordionItem heading is clicked, toggle the open state of the\n  // panel\n\n\n  function onClick(event) {\n    var nextValue = !isOpen;\n    setAnimation(isOpen ? 'collapsing' : 'expanding');\n    setIsOpen(nextValue);\n\n    if (onHeadingClick) {\n      // TODO: normalize signature, potentially:\n      // onHeadingClick :: (event: Event, state: { isOpen: Boolean }) => any\n      onHeadingClick({\n        isOpen: nextValue,\n        event: event\n      });\n    }\n  } // If the AccordionItem is open, and the user hits the ESC key, then close it\n\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, keys.Escape)) {\n      setIsOpen(false);\n    }\n  }\n\n  function handleAnimationEnd(event) {\n    if (rest.handleAnimationEnd) {\n      rest.handleAnimationEnd(event);\n    }\n\n    setAnimation('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: className\n  }, rest, {\n    onAnimationEnd: handleAnimationEnd\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    disabled: disabled,\n    \"aria-controls\": id,\n    \"aria-expanded\": isOpen,\n    className: \"\".concat(prefix, \"--accordion__heading\"),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--accordion__arrow\")\n  }), /*#__PURE__*/React.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--accordion__title\")\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--accordion__content\")\n  }, children));\n}\n\nAccordionItem.propTypes = {\n  /**\n   * Provide the contents of your AccordionItem\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an individual AccordionItem should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The description of the expand icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop has been deprecated as it is no longer ' + 'required. Feel free to remove this prop from <AccordionItem>. This ' + 'prop will be removed in the next major release of ' + '`carbon-components-react`'),\n\n  /**\n   * The handler of the massaged `click` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The handler of the massaged `click` event on the heading.\n   */\n  onHeadingClick: PropTypes.func,\n\n  /**\n   * `true` to open the expand.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderExpando: deprecate(PropTypes.func, 'The `renderExpando` prop has been deprecated and will be removed in the next major release of Carbon. Use the `renderToggle` prop instead.'),\n\n  /**\n   * The callback function to render the expand button.\n   * Can be a React component class.\n   */\n  renderToggle: PropTypes.func,\n\n  /**\n   * The accordion title.\n   */\n  title: PropTypes.node\n};\nexport default AccordionItem;"]},"metadata":{},"sourceType":"module"}