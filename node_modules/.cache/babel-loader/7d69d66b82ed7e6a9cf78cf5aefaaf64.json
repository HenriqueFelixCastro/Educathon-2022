{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport classNames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * The rendered suggestion in the suggestion list.\n */\n\nvar MastheadSearchSuggestion = function MastheadSearchSuggestion(_ref) {\n  var suggestion = _ref.suggestion,\n      query = _ref.query,\n      isHighlighted = _ref.isHighlighted,\n      getSuggestionValue = _ref.getSuggestionValue;\n  var suggestionValue = getSuggestionValue(suggestion);\n  var matches = match(suggestionValue, query);\n  var parts = parse(suggestionValue, matches);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"\".concat(prefix, \"--container-class\"), _defineProperty({}, \"\".concat(prefix, \"--container-highlight-class\"), isHighlighted)),\n    tabIndex: \"-1\",\n    \"data-autoid\": \"\".concat(stablePrefix, \"--masthead__searchresults--suggestion\")\n  }, suggestion.href ? {\n    'data-href': suggestion.href\n  } : {}), parts.map(function (part, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      style: {\n        // TODO: switch to final styles\n        fontWeight: part.highlight ? 600 : 400\n      }\n    }, part.text.replace(' ', \"\\xA0\"));\n  }));\n};\n\nMastheadSearchSuggestion.propTypes = {\n  /**\n   * The individual object from the data.\n   */\n  suggestion: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object]),\n\n  /**\n   * The query being searched for.\n   */\n  query: PropTypes.string,\n\n  /**\n   * `true` to make the suggestion currently highlighted by the user.\n   */\n  isHighlighted: PropTypes.bool,\n\n  /**\n   * A funciton ot get the suggestion value.\n   */\n  getSuggestionValue: PropTypes.func\n};\nMastheadSearchSuggestion.defaultProps = {\n  suggestion: [],\n  query: '',\n  isHighlighted: false,\n  getSuggestionValue: function getSuggestionValue() {}\n};\nexport default MastheadSearchSuggestion;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/Masthead/MastheadSearchSuggestion.js"],"names":["_extends","_defineProperty","classNames","ddsSettings","match","parse","PropTypes","React","settings","stablePrefix","prefix","MastheadSearchSuggestion","_ref","suggestion","query","isHighlighted","getSuggestionValue","suggestionValue","matches","parts","createElement","className","concat","tabIndex","href","map","part","index","key","style","fontWeight","highlight","text","replace","propTypes","oneOfType","arrayOf","string","object","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport classNames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * The rendered suggestion in the suggestion list.\n */\n\nvar MastheadSearchSuggestion = function MastheadSearchSuggestion(_ref) {\n  var suggestion = _ref.suggestion,\n      query = _ref.query,\n      isHighlighted = _ref.isHighlighted,\n      getSuggestionValue = _ref.getSuggestionValue;\n  var suggestionValue = getSuggestionValue(suggestion);\n  var matches = match(suggestionValue, query);\n  var parts = parse(suggestionValue, matches);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"\".concat(prefix, \"--container-class\"), _defineProperty({}, \"\".concat(prefix, \"--container-highlight-class\"), isHighlighted)),\n    tabIndex: \"-1\",\n    \"data-autoid\": \"\".concat(stablePrefix, \"--masthead__searchresults--suggestion\")\n  }, suggestion.href ? {\n    'data-href': suggestion.href\n  } : {}), parts.map(function (part, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      style: {\n        // TODO: switch to final styles\n        fontWeight: part.highlight ? 600 : 400\n      }\n    }, part.text.replace(' ', \"\\xA0\"));\n  }));\n};\n\nMastheadSearchSuggestion.propTypes = {\n  /**\n   * The individual object from the data.\n   */\n  suggestion: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object]),\n\n  /**\n   * The query being searched for.\n   */\n  query: PropTypes.string,\n\n  /**\n   * `true` to make the suggestion currently highlighted by the user.\n   */\n  isHighlighted: PropTypes.bool,\n\n  /**\n   * A funciton ot get the suggestion value.\n   */\n  getSuggestionValue: PropTypes.func\n};\nMastheadSearchSuggestion.defaultProps = {\n  suggestion: [],\n  query: '',\n  isHighlighted: false,\n  getSuggestionValue: function getSuggestionValue() {}\n};\nexport default MastheadSearchSuggestion;"]},"metadata":{},"sourceType":"module"}