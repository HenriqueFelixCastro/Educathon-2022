{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useEffect, useRef, useState } from 'react';\nexport function usePressable(ref) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      onPress = _ref.onPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      onLongPress = _ref.onLongPress,\n      _ref$delayLongPressMs = _ref.delayLongPressMs,\n      delayLongPressMs = _ref$delayLongPressMs === void 0 ? 500 : _ref$delayLongPressMs;\n\n  var savedOnPress = useRef(onPress);\n  var savedOnPressIn = useRef(onPressIn);\n  var savedOnPressOut = useRef(onPressOut);\n  var savedOnLongPress = useRef(onLongPress);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      pendingLongPress = _useState2[0],\n      setPendingLongPress = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      longPress = _useState4[0],\n      setLongPress = _useState4[1];\n\n  var state = useRef({\n    longPress: false\n  });\n  useEffect(function () {\n    savedOnPress.current = onPress;\n  }, [onPress]);\n  useEffect(function () {\n    savedOnPressIn.current = onPressIn;\n  }, [onPressIn]);\n  useEffect(function () {\n    savedOnPressOut.current = onPressOut;\n  }, [onPressOut]);\n  useEffect(function () {\n    savedOnLongPress.current = onLongPress;\n  }, [onLongPress]);\n  useEffect(function () {\n    var element = ref.current; // Fired when a pointer becomes active buttons state.\n\n    function onPointerDown() {\n      var _savedOnPressIn$curre;\n\n      setPendingLongPress(true);\n      (_savedOnPressIn$curre = savedOnPressIn.current) === null || _savedOnPressIn$curre === void 0 ? void 0 : _savedOnPressIn$curre.call(savedOnPressIn);\n    } // Fired when a pointer is no longer active buttons state.\n\n\n    function onPointerUp() {\n      var _savedOnPressOut$curr;\n\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr = savedOnPressOut.current) === null || _savedOnPressOut$curr === void 0 ? void 0 : _savedOnPressOut$curr.call(savedOnPressOut, state.current);\n    } // A browser fires this event if it concludes the pointer\n    // will no longer be able to generate events (for example\n    // the related device is deactivated).\n\n\n    function onPointerCancel() {\n      var _savedOnPressOut$curr2;\n\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr2 = savedOnPressOut.current) === null || _savedOnPressOut$curr2 === void 0 ? void 0 : _savedOnPressOut$curr2.call(savedOnPressOut);\n      state.current.longPress = false;\n    } // Fired when a pointer is moved out of the hit test\n    // boundaries of an element. For pen devices, this event\n    // is fired when the stylus leaves the hover range\n    // detectable by the digitizer.\n\n\n    function onPointerLeave() {\n      var _savedOnPressOut$curr3;\n\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr3 = savedOnPressOut.current) === null || _savedOnPressOut$curr3 === void 0 ? void 0 : _savedOnPressOut$curr3.call(savedOnPressOut);\n      state.current.longPress = false;\n    }\n\n    function onClick() {\n      var _savedOnPress$current;\n\n      setLongPress(false);\n      setPendingLongPress(false);\n      (_savedOnPress$current = savedOnPress.current) === null || _savedOnPress$current === void 0 ? void 0 : _savedOnPress$current.call(savedOnPress, state.current);\n      state.current.longPress = false;\n    }\n\n    function onTouchStart(event) {\n      // We prevent the default event on touchstart so that text selection is\n      // disabled on iOS  Safari when interacting with a \"pressable\" element\n      event.preventDefault();\n    }\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('pointerdown', onPointerDown);\n    element.addEventListener('pointerup', onPointerUp);\n    element.addEventListener('pointercancel', onPointerCancel);\n    element.addEventListener('pointerleave', onPointerLeave);\n    element.addEventListener('click', onClick);\n    return function () {\n      element.removeEventListener('touchstart', onTouchStart);\n      element.removeEventListener('pointerdown', onPointerDown);\n      element.removeEventListener('pointerup', onPointerUp);\n      element.removeEventListener('pointercancel', onPointerCancel);\n      element.removeEventListener('pointerleave', onPointerLeave);\n      element.removeEventListener('click', onClick);\n    };\n  }, [ref]);\n  useEffect(function () {\n    if (pendingLongPress) {\n      var timeoutId = setTimeout(function () {\n        setPendingLongPress(false);\n        setLongPress(true);\n      }, delayLongPressMs);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [pendingLongPress, delayLongPressMs]);\n  useEffect(function () {\n    if (longPress) {\n      var _savedOnLongPress$cur;\n\n      state.current.longPress = true;\n      return (_savedOnLongPress$cur = savedOnLongPress.current) === null || _savedOnLongPress$cur === void 0 ? void 0 : _savedOnLongPress$cur.call(savedOnLongPress);\n    }\n  }, [longPress]);\n}","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Tabs/next/usePressable.js"],"names":["_slicedToArray","useEffect","useRef","useState","usePressable","ref","_ref","arguments","length","undefined","onPress","onPressIn","onPressOut","onLongPress","_ref$delayLongPressMs","delayLongPressMs","savedOnPress","savedOnPressIn","savedOnPressOut","savedOnLongPress","_useState","_useState2","pendingLongPress","setPendingLongPress","_useState3","_useState4","longPress","setLongPress","state","current","element","onPointerDown","_savedOnPressIn$curre","call","onPointerUp","_savedOnPressOut$curr","onPointerCancel","_savedOnPressOut$curr2","onPointerLeave","_savedOnPressOut$curr3","onClick","_savedOnPress$current","onTouchStart","event","preventDefault","addEventListener","removeEventListener","timeoutId","setTimeout","clearTimeout","_savedOnLongPress$cur"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useEffect, useRef, useState } from 'react';\nexport function usePressable(ref) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      onPress = _ref.onPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      onLongPress = _ref.onLongPress,\n      _ref$delayLongPressMs = _ref.delayLongPressMs,\n      delayLongPressMs = _ref$delayLongPressMs === void 0 ? 500 : _ref$delayLongPressMs;\n\n  var savedOnPress = useRef(onPress);\n  var savedOnPressIn = useRef(onPressIn);\n  var savedOnPressOut = useRef(onPressOut);\n  var savedOnLongPress = useRef(onLongPress);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      pendingLongPress = _useState2[0],\n      setPendingLongPress = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      longPress = _useState4[0],\n      setLongPress = _useState4[1];\n\n  var state = useRef({\n    longPress: false\n  });\n  useEffect(function () {\n    savedOnPress.current = onPress;\n  }, [onPress]);\n  useEffect(function () {\n    savedOnPressIn.current = onPressIn;\n  }, [onPressIn]);\n  useEffect(function () {\n    savedOnPressOut.current = onPressOut;\n  }, [onPressOut]);\n  useEffect(function () {\n    savedOnLongPress.current = onLongPress;\n  }, [onLongPress]);\n  useEffect(function () {\n    var element = ref.current; // Fired when a pointer becomes active buttons state.\n\n    function onPointerDown() {\n      var _savedOnPressIn$curre;\n\n      setPendingLongPress(true);\n      (_savedOnPressIn$curre = savedOnPressIn.current) === null || _savedOnPressIn$curre === void 0 ? void 0 : _savedOnPressIn$curre.call(savedOnPressIn);\n    } // Fired when a pointer is no longer active buttons state.\n\n\n    function onPointerUp() {\n      var _savedOnPressOut$curr;\n\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr = savedOnPressOut.current) === null || _savedOnPressOut$curr === void 0 ? void 0 : _savedOnPressOut$curr.call(savedOnPressOut, state.current);\n    } // A browser fires this event if it concludes the pointer\n    // will no longer be able to generate events (for example\n    // the related device is deactivated).\n\n\n    function onPointerCancel() {\n      var _savedOnPressOut$curr2;\n\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr2 = savedOnPressOut.current) === null || _savedOnPressOut$curr2 === void 0 ? void 0 : _savedOnPressOut$curr2.call(savedOnPressOut);\n      state.current.longPress = false;\n    } // Fired when a pointer is moved out of the hit test\n    // boundaries of an element. For pen devices, this event\n    // is fired when the stylus leaves the hover range\n    // detectable by the digitizer.\n\n\n    function onPointerLeave() {\n      var _savedOnPressOut$curr3;\n\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr3 = savedOnPressOut.current) === null || _savedOnPressOut$curr3 === void 0 ? void 0 : _savedOnPressOut$curr3.call(savedOnPressOut);\n      state.current.longPress = false;\n    }\n\n    function onClick() {\n      var _savedOnPress$current;\n\n      setLongPress(false);\n      setPendingLongPress(false);\n      (_savedOnPress$current = savedOnPress.current) === null || _savedOnPress$current === void 0 ? void 0 : _savedOnPress$current.call(savedOnPress, state.current);\n      state.current.longPress = false;\n    }\n\n    function onTouchStart(event) {\n      // We prevent the default event on touchstart so that text selection is\n      // disabled on iOS  Safari when interacting with a \"pressable\" element\n      event.preventDefault();\n    }\n\n    element.addEventListener('touchstart', onTouchStart);\n    element.addEventListener('pointerdown', onPointerDown);\n    element.addEventListener('pointerup', onPointerUp);\n    element.addEventListener('pointercancel', onPointerCancel);\n    element.addEventListener('pointerleave', onPointerLeave);\n    element.addEventListener('click', onClick);\n    return function () {\n      element.removeEventListener('touchstart', onTouchStart);\n      element.removeEventListener('pointerdown', onPointerDown);\n      element.removeEventListener('pointerup', onPointerUp);\n      element.removeEventListener('pointercancel', onPointerCancel);\n      element.removeEventListener('pointerleave', onPointerLeave);\n      element.removeEventListener('click', onClick);\n    };\n  }, [ref]);\n  useEffect(function () {\n    if (pendingLongPress) {\n      var timeoutId = setTimeout(function () {\n        setPendingLongPress(false);\n        setLongPress(true);\n      }, delayLongPressMs);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [pendingLongPress, delayLongPressMs]);\n  useEffect(function () {\n    if (longPress) {\n      var _savedOnLongPress$cur;\n\n      state.current.longPress = true;\n      return (_savedOnLongPress$cur = savedOnLongPress.current) === null || _savedOnLongPress$cur === void 0 ? void 0 : _savedOnLongPress$cur.call(savedOnLongPress);\n    }\n  }, [longPress]);\n}"]},"metadata":{},"sourceType":"module"}