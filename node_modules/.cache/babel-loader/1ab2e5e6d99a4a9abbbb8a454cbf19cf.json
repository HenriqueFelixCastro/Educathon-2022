{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport AudioPlayerDisabledButton from './AudioPlayerDisabledButton';\nimport ClosedCaptionFilled32 from '@carbon/icons-react/es/closed-caption--filled/20';\nimport { DDS_AUDIO_PLAYER } from '../../internal/FeatureFlags';\nimport OverflowMenu from '../../internal/vendor/carbon-components-react/components/OverflowMenu';\nimport OverflowMenuItem from '../../internal/vendor/carbon-components-react/components/OverflowMenuItem';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar prefix = settings.prefix;\n\nvar AudioPlayerCaptionsMenu = function AudioPlayerCaptionsMenu(_ref) {\n  var kalturaDigitalPlayer = _ref.kalturaDigitalPlayer,\n      availableCaptions = _ref.availableCaptions,\n      audioCaption = _ref.audioCaption,\n      setAudioCaption = _ref.setAudioCaption,\n      setDisplayVolumeControl = _ref.setDisplayVolumeControl;\n\n  var hasCaptions = function hasCaptions() {\n    return Object.keys(availableCaptions).length > 0;\n  };\n\n  var handleAudioCaptions = function handleAudioCaptions() {\n    var caption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    setAudioCaption(caption);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !kalturaDigitalPlayer || !hasCaptions() ? /*#__PURE__*/React.createElement(AudioPlayerDisabledButton, {\n    icon: ClosedCaptionFilled32\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__overflow-menu-container\")\n  }, /*#__PURE__*/React.createElement(OverflowMenu, {\n    renderIcon: ClosedCaptionFilled32,\n    direction: \"top\",\n    flipped: true,\n    iconDescription: \"Closed Captions\",\n    selectorPrimaryFocus: \".\".concat(prefix, \"--audio-player__button-for-closed-caption-\").concat(audioCaption.toLowerCase()),\n    onOpen: function onOpen() {\n      return setDisplayVolumeControl(false);\n    }\n  }, /*#__PURE__*/React.createElement(OverflowMenuItem, {\n    className: \"\".concat(prefix, \"--audio-player__button-for-closed-caption-\"),\n    itemText: \"Off\",\n    hasDivider: true,\n    onClick: function onClick() {\n      return handleAudioCaptions();\n    },\n    disabled: !kalturaDigitalPlayer || !hasCaptions()\n  }), Object.keys(availableCaptions).map(function (captionLabel, captionIndex) {\n    return /*#__PURE__*/React.createElement(OverflowMenuItem, {\n      className: \"\".concat(prefix, \"--audio-player__button-for-closed-caption-\").concat(captionLabel.toLowerCase()),\n      key: captionIndex,\n      itemText: captionLabel,\n      hasDivider: true,\n      onClick: function onClick() {\n        return handleAudioCaptions(captionLabel.toString());\n      },\n      disabled: !kalturaDigitalPlayer || !hasCaptions()\n    });\n  }))));\n};\n\nAudioPlayerCaptionsMenu.propTypes = {\n  /**\n   * The kaltura digital player (KDP) object\n   * It starts as false and gets morphed into the html element\n   *  of the target player id reference during the kaltura player\n   *  embeding process as soon as the kaltura ready callback triggers\n   */\n  kalturaDigitalPlayer: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]).isRequired,\n\n  /**\n   * An object containing all captions.\n   * Each key of the object is the caption language label\n   *  and contain an array of entries.\n   * Each entry of this array is an object containing:\n   *  start -> Number - The first second of the audio where\n   *          the caption should be displayed\n   *  end -> Number - The last second of the audio where\n   *          the caption should be displayed\n   *  content -> String - The html content of the caption\n   */\n  availableCaptions: PropTypes.object.isRequired,\n\n  /**\n   * The state getter for the current selected caption language\n   */\n  audioCaption: PropTypes.string.isRequired,\n\n  /**\n   * The state setter for the current selected caption language\n   */\n  setAudioCaption: PropTypes.func.isRequired,\n\n  /**\n   * The state setter that show/hide the custom volume menu\n   */\n  setDisplayVolumeControl: PropTypes.func.isRequired\n};\nAudioPlayerCaptionsMenu.defaultProps = {\n  kalturaDigitalPlayer: false,\n  availableCaptions: [],\n  audioCaption: ''\n};\nexport default !DDS_AUDIO_PLAYER ? undefined : AudioPlayerCaptionsMenu;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/AudioPlayer/AudioPlayerCaptionsMenu.js"],"names":["AudioPlayerDisabledButton","ClosedCaptionFilled32","DDS_AUDIO_PLAYER","OverflowMenu","OverflowMenuItem","PropTypes","React","settings","prefix","AudioPlayerCaptionsMenu","_ref","kalturaDigitalPlayer","availableCaptions","audioCaption","setAudioCaption","setDisplayVolumeControl","hasCaptions","Object","keys","length","handleAudioCaptions","caption","arguments","undefined","createElement","Fragment","icon","className","concat","renderIcon","direction","flipped","iconDescription","selectorPrimaryFocus","toLowerCase","onOpen","itemText","hasDivider","onClick","disabled","map","captionLabel","captionIndex","key","toString","propTypes","oneOfType","object","bool","isRequired","string","func","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport AudioPlayerDisabledButton from './AudioPlayerDisabledButton';\nimport ClosedCaptionFilled32 from '@carbon/icons-react/es/closed-caption--filled/20';\nimport { DDS_AUDIO_PLAYER } from '../../internal/FeatureFlags';\nimport OverflowMenu from '../../internal/vendor/carbon-components-react/components/OverflowMenu';\nimport OverflowMenuItem from '../../internal/vendor/carbon-components-react/components/OverflowMenuItem';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar prefix = settings.prefix;\n\nvar AudioPlayerCaptionsMenu = function AudioPlayerCaptionsMenu(_ref) {\n  var kalturaDigitalPlayer = _ref.kalturaDigitalPlayer,\n      availableCaptions = _ref.availableCaptions,\n      audioCaption = _ref.audioCaption,\n      setAudioCaption = _ref.setAudioCaption,\n      setDisplayVolumeControl = _ref.setDisplayVolumeControl;\n\n  var hasCaptions = function hasCaptions() {\n    return Object.keys(availableCaptions).length > 0;\n  };\n\n  var handleAudioCaptions = function handleAudioCaptions() {\n    var caption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    setAudioCaption(caption);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !kalturaDigitalPlayer || !hasCaptions() ? /*#__PURE__*/React.createElement(AudioPlayerDisabledButton, {\n    icon: ClosedCaptionFilled32\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__overflow-menu-container\")\n  }, /*#__PURE__*/React.createElement(OverflowMenu, {\n    renderIcon: ClosedCaptionFilled32,\n    direction: \"top\",\n    flipped: true,\n    iconDescription: \"Closed Captions\",\n    selectorPrimaryFocus: \".\".concat(prefix, \"--audio-player__button-for-closed-caption-\").concat(audioCaption.toLowerCase()),\n    onOpen: function onOpen() {\n      return setDisplayVolumeControl(false);\n    }\n  }, /*#__PURE__*/React.createElement(OverflowMenuItem, {\n    className: \"\".concat(prefix, \"--audio-player__button-for-closed-caption-\"),\n    itemText: \"Off\",\n    hasDivider: true,\n    onClick: function onClick() {\n      return handleAudioCaptions();\n    },\n    disabled: !kalturaDigitalPlayer || !hasCaptions()\n  }), Object.keys(availableCaptions).map(function (captionLabel, captionIndex) {\n    return /*#__PURE__*/React.createElement(OverflowMenuItem, {\n      className: \"\".concat(prefix, \"--audio-player__button-for-closed-caption-\").concat(captionLabel.toLowerCase()),\n      key: captionIndex,\n      itemText: captionLabel,\n      hasDivider: true,\n      onClick: function onClick() {\n        return handleAudioCaptions(captionLabel.toString());\n      },\n      disabled: !kalturaDigitalPlayer || !hasCaptions()\n    });\n  }))));\n};\n\nAudioPlayerCaptionsMenu.propTypes = {\n  /**\n   * The kaltura digital player (KDP) object\n   * It starts as false and gets morphed into the html element\n   *  of the target player id reference during the kaltura player\n   *  embeding process as soon as the kaltura ready callback triggers\n   */\n  kalturaDigitalPlayer: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]).isRequired,\n\n  /**\n   * An object containing all captions.\n   * Each key of the object is the caption language label\n   *  and contain an array of entries.\n   * Each entry of this array is an object containing:\n   *  start -> Number - The first second of the audio where\n   *          the caption should be displayed\n   *  end -> Number - The last second of the audio where\n   *          the caption should be displayed\n   *  content -> String - The html content of the caption\n   */\n  availableCaptions: PropTypes.object.isRequired,\n\n  /**\n   * The state getter for the current selected caption language\n   */\n  audioCaption: PropTypes.string.isRequired,\n\n  /**\n   * The state setter for the current selected caption language\n   */\n  setAudioCaption: PropTypes.func.isRequired,\n\n  /**\n   * The state setter that show/hide the custom volume menu\n   */\n  setDisplayVolumeControl: PropTypes.func.isRequired\n};\nAudioPlayerCaptionsMenu.defaultProps = {\n  kalturaDigitalPlayer: false,\n  availableCaptions: [],\n  audioCaption: ''\n};\nexport default !DDS_AUDIO_PLAYER ? undefined : AudioPlayerCaptionsMenu;"]},"metadata":{},"sourceType":"module"}