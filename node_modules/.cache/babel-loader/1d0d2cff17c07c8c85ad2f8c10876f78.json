{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport axios from 'axios';\n\nvar _endpoint = process && process.env.GEO_API || 'https://api.www.s81c.com/webmaster/dbip/';\n/**\n * Utility to retrieve user's country code based on their IP address\n *\n * @example\n * import { geolocation } from '@carbon/ibmdotcom-utilities';\n *\n * const locationInfo = await geolocation();\n *\n * @returns {string} country cc (cc)\n *\n */\n\n\nfunction geolocation() {\n  return _geolocation.apply(this, arguments);\n}\n\nfunction _geolocation() {\n  _geolocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var location, cc;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(_endpoint, {\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n              }\n            }).then(function (response) {\n              return response.data;\n            });\n\n          case 2:\n            location = _context.sent;\n            cc = location && location.country;\n            return _context.abrupt(\"return\", cc);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _geolocation.apply(this, arguments);\n}\n\nexport default geolocation;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/internal/vendor/@carbon/ibmdotcom-services/internal/vendor/@carbon/ibmdotcom-utilities/utilities/geolocation/geolocation.js"],"names":["_regeneratorRuntime","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","axios","_endpoint","process","env","GEO_API","geolocation","_geolocation","mark","_callee","location","cc","wrap","_callee$","_context","prev","next","get","headers","response","data","sent","country","abrupt","stop"],"mappings":"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","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n/**\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport axios from 'axios';\n\nvar _endpoint = process && process.env.GEO_API || 'https://api.www.s81c.com/webmaster/dbip/';\n/**\n * Utility to retrieve user's country code based on their IP address\n *\n * @example\n * import { geolocation } from '@carbon/ibmdotcom-utilities';\n *\n * const locationInfo = await geolocation();\n *\n * @returns {string} country cc (cc)\n *\n */\n\n\nfunction geolocation() {\n  return _geolocation.apply(this, arguments);\n}\n\nfunction _geolocation() {\n  _geolocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var location, cc;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(_endpoint, {\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n              }\n            }).then(function (response) {\n              return response.data;\n            });\n\n          case 2:\n            location = _context.sent;\n            cc = location && location.country;\n            return _context.abrupt(\"return\", cc);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _geolocation.apply(this, arguments);\n}\n\nexport default geolocation;"]},"metadata":{},"sourceType":"module"}