{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ariaLabel\", \"className\", \"direction\", \"disabled\", \"downshiftProps\", \"helperText\", \"id\", \"initialSelectedItem\", \"invalid\", \"invalidText\", \"items\", \"itemToElement\", \"itemToString\", \"light\", \"onChange\", \"onInputChange\", \"onToggleClick\", \"placeholder\", \"selectedItem\", \"shouldFilterItem\", \"size\", \"titleText\", \"translateWithId\", \"type\", \"warn\", \"warnText\", \"onStateChange\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport cx from 'classnames';\nimport Downshift from 'downshift';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Text } from '../Text';\nimport { Checkmark16, WarningAltFilled16, WarningFilled16 } from '@carbon/icons-react';\nimport ListBox, { PropTypes as ListBoxPropTypes } from '../ListBox';\nimport { ListBoxTrigger, ListBoxSelection } from '../ListBox/next';\nimport { match, keys } from '../../internal/keyboard';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nimport { mapDownshiftProps } from '../../tools/createPropAdapter';\nimport mergeRefs from '../../tools/mergeRefs';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar defaultItemToString = function defaultItemToString(item) {\n  if (typeof item === 'string') {\n    return item;\n  }\n\n  return item && item.label;\n};\n\nvar defaultShouldFilterItem = function defaultShouldFilterItem() {\n  return true;\n};\n\nvar getInputValue = function getInputValue(_ref) {\n  var initialSelectedItem = _ref.initialSelectedItem,\n      inputValue = _ref.inputValue,\n      itemToString = _ref.itemToString,\n      selectedItem = _ref.selectedItem;\n\n  if (selectedItem) {\n    return itemToString(selectedItem);\n  } // TODO: consistent `initialSelectedItem` behavior with other listbox components in v11\n\n\n  if (initialSelectedItem) {\n    return itemToString(initialSelectedItem);\n  }\n\n  return inputValue || '';\n};\n\nvar findHighlightedIndex = function findHighlightedIndex(_ref2, inputValue) {\n  var items = _ref2.items,\n      itemToString = _ref2.itemToString;\n\n  if (!inputValue) {\n    return -1;\n  }\n\n  var searchValue = inputValue.toLowerCase();\n\n  for (var i = 0; i < items.length; i++) {\n    var item = itemToString(items[i]).toLowerCase();\n\n    if (item.indexOf(searchValue) !== -1) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar getInstanceId = setupGetInstanceId();\nvar ComboBox = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _cx;\n\n  var ariaLabel = props.ariaLabel,\n      containerClassName = props.className,\n      direction = props.direction,\n      disabled = props.disabled,\n      downshiftProps = props.downshiftProps,\n      helperText = props.helperText,\n      id = props.id,\n      initialSelectedItem = props.initialSelectedItem,\n      invalid = props.invalid,\n      invalidText = props.invalidText,\n      items = props.items,\n      itemToElement = props.itemToElement,\n      itemToString = props.itemToString,\n      light = props.light,\n      onChange = props.onChange,\n      onInputChange = props.onInputChange,\n      onToggleClick = props.onToggleClick,\n      placeholder = props.placeholder,\n      selectedItem = props.selectedItem,\n      shouldFilterItem = props.shouldFilterItem,\n      size = props.size,\n      titleText = props.titleText,\n      translateWithId = props.translateWithId,\n      type = props.type,\n      warn = props.warn,\n      warnText = props.warnText,\n      onStateChange = props.onStateChange,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n  var textInput = useRef();\n  var comboBoxInstanceId = getInstanceId();\n\n  var _useState = useState(getInputValue({\n    initialSelectedItem: initialSelectedItem,\n    inputValue: '',\n    itemToString: itemToString,\n    selectedItem: selectedItem\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevSelectedItem = _useState4[0],\n      setPrevSelectedItem = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      doneInitialSelectedItem = _useState6[0],\n      setDoneInitialSelectedItem = _useState6[1];\n\n  var savedOnInputChange = useRef(onInputChange);\n\n  if (!doneInitialSelectedItem || prevSelectedItem !== selectedItem) {\n    setDoneInitialSelectedItem(true);\n    setPrevSelectedItem(selectedItem);\n    setInputValue(getInputValue({\n      initialSelectedItem: initialSelectedItem,\n      inputValue: inputValue,\n      itemToString: itemToString,\n      selectedItem: selectedItem\n    }));\n  }\n\n  var filterItems = function filterItems(items, itemToString, inputValue) {\n    return items.filter(function (item) {\n      return shouldFilterItem({\n        item: item,\n        itemToString: itemToString,\n        inputValue: inputValue\n      });\n    });\n  };\n\n  var handleOnChange = function handleOnChange(selectedItem) {\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem\n      });\n    }\n  };\n\n  var handleOnInputValueChange = function handleOnInputValueChange(inputValue) {\n    setInputValue(inputValue || '');\n  };\n\n  useEffect(function () {\n    savedOnInputChange.current = onInputChange;\n  }, [onInputChange]);\n  useEffect(function () {\n    if (savedOnInputChange.current) {\n      savedOnInputChange.current(inputValue);\n    }\n  }, [inputValue]);\n\n  var handleSelectionClear = function handleSelectionClear() {\n    if (textInput !== null && textInput !== void 0 && textInput.current) {\n      textInput.current.focus();\n    }\n  };\n\n  var handleOnStateChange = function handleOnStateChange(newState, _ref3) {\n    var setHighlightedIndex = _ref3.setHighlightedIndex;\n\n    if (Object.prototype.hasOwnProperty.call(newState, 'inputValue')) {\n      var _inputValue = newState.inputValue;\n      var filteredItems = filterItems(items, itemToString, _inputValue);\n      setHighlightedIndex(findHighlightedIndex(_objectSpread(_objectSpread({}, props), {}, {\n        items: filteredItems\n      }), _inputValue));\n    }\n  };\n\n  var handleToggleClick = function handleToggleClick(isOpen) {\n    return function (event) {\n      if (onToggleClick) {\n        onToggleClick(event);\n      }\n\n      if (event.target === textInput.current && isOpen) {\n        event.preventDownshiftDefault = true;\n        event.persist();\n      }\n    };\n  };\n\n  var enabled = useFeatureFlag('enable-v11-release');\n  var showWarning = !invalid && warn;\n  var className = cx(\"\".concat(prefix, \"--combo-box\"), [enabled ? null : containerClassName], (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--list-box--up\"), direction === 'top'), _defineProperty(_cx, \"\".concat(prefix, \"--combo-box--warning\"), showWarning), _cx));\n  var titleClasses = cx(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var comboBoxHelperId = !helperText ? undefined : \"combobox-helper-text-\".concat(comboBoxInstanceId);\n  var helperClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--list-box__wrapper\"), [enabled ? containerClassName : null]);\n  var inputClasses = cx(\"\".concat(prefix, \"--text-input\"), _defineProperty({}, \"\".concat(prefix, \"--text-input--empty\"), !inputValue)); // needs to be Capitalized for react to render it correctly\n\n  var ItemToElement = itemToElement;\n  return /*#__PURE__*/React.createElement(Downshift, _extends({}, mapDownshiftProps(downshiftProps), {\n    onChange: handleOnChange,\n    onInputValueChange: handleOnInputValueChange,\n    onStateChange: function onStateChange() {\n      var _downshiftProps$onSta;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      handleOnStateChange.apply(void 0, args);\n      downshiftProps === null || downshiftProps === void 0 ? void 0 : (_downshiftProps$onSta = downshiftProps.onStateChange) === null || _downshiftProps$onSta === void 0 ? void 0 : _downshiftProps$onSta.call.apply(_downshiftProps$onSta, [downshiftProps].concat(args));\n    },\n    inputValue: inputValue || '',\n    itemToString: itemToString,\n    initialSelectedItem: initialSelectedItem,\n    inputId: id,\n    selectedItem: selectedItem\n  }), function (_ref4) {\n    var _textInput$current;\n\n    var getInputProps = _ref4.getInputProps,\n        getItemProps = _ref4.getItemProps,\n        getLabelProps = _ref4.getLabelProps,\n        getMenuProps = _ref4.getMenuProps,\n        getRootProps = _ref4.getRootProps,\n        getToggleButtonProps = _ref4.getToggleButtonProps,\n        isOpen = _ref4.isOpen,\n        inputValue = _ref4.inputValue,\n        selectedItem = _ref4.selectedItem,\n        highlightedIndex = _ref4.highlightedIndex,\n        clearSelection = _ref4.clearSelection,\n        toggleMenu = _ref4.toggleMenu;\n    var rootProps = getRootProps({}, {\n      suppressRefError: true\n    });\n    var labelProps = getLabelProps();\n    var buttonProps = getToggleButtonProps({\n      disabled: disabled,\n      onClick: handleToggleClick(isOpen),\n      // When we moved the \"root node\" of Downshift to the <input> for\n      // ARIA 1.2 compliance, we unfortunately hit this branch for the\n      // \"mouseup\" event that downshift listens to:\n      // https://github.com/downshift-js/downshift/blob/v5.2.1/src/downshift.js#L1051-L1065\n      //\n      // As a result, it will reset the state of the component and so we\n      // stop the event from propagating to prevent this if the menu is already open.\n      // This allows the toggleMenu behavior for the toggleButton to correctly open and\n      // close the menu.\n      onMouseUp: function onMouseUp(event) {\n        if (isOpen) {\n          event.stopPropagation();\n        }\n      }\n    });\n    var inputProps = getInputProps({\n      // Remove excess aria `aria-labelledby`. HTML <label for> provides this aria information.\n      'aria-labelledby': null,\n      disabled: disabled,\n      placeholder: placeholder,\n      onClick: function onClick() {\n        toggleMenu();\n      },\n      onKeyDown: function onKeyDown(event) {\n        if (match(event, keys.Space)) {\n          event.stopPropagation();\n        }\n\n        if (match(event, keys.Enter) && !inputValue) {\n          toggleMenu();\n        }\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClasses\n    }, titleText && /*#__PURE__*/React.createElement(Text, _extends({\n      as: \"label\",\n      className: titleClasses\n    }, labelProps), titleText), /*#__PURE__*/React.createElement(ListBox, {\n      className: className,\n      disabled: disabled,\n      invalid: invalid,\n      invalidText: invalidText,\n      isOpen: isOpen,\n      light: light,\n      size: size,\n      warn: warn,\n      warnText: warnText\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--list-box__field\")\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({\n      role: \"combobox\",\n      disabled: disabled,\n      className: inputClasses,\n      type: \"text\",\n      tabIndex: \"0\",\n      \"aria-autocomplete\": \"list\",\n      \"aria-expanded\": rootProps['aria-expanded'],\n      \"aria-haspopup\": \"listbox\",\n      \"aria-controls\": inputProps['aria-controls'],\n      title: textInput === null || textInput === void 0 ? void 0 : (_textInput$current = textInput.current) === null || _textInput$current === void 0 ? void 0 : _textInput$current.value\n    }, inputProps, rest, {\n      ref: mergeRefs(textInput, ref)\n    })), invalid && /*#__PURE__*/React.createElement(WarningFilled16, {\n      className: \"\".concat(prefix, \"--list-box__invalid-icon\")\n    }), showWarning && /*#__PURE__*/React.createElement(WarningAltFilled16, {\n      className: \"\".concat(prefix, \"--list-box__invalid-icon \").concat(prefix, \"--list-box__invalid-icon--warning\")\n    }), inputValue && /*#__PURE__*/React.createElement(ListBoxSelection, {\n      clearSelection: clearSelection,\n      translateWithId: translateWithId,\n      disabled: disabled,\n      onClearSelection: handleSelectionClear\n    }), /*#__PURE__*/React.createElement(ListBoxTrigger, _extends({}, buttonProps, {\n      isOpen: isOpen,\n      translateWithId: translateWithId\n    }))), /*#__PURE__*/React.createElement(ListBox.Menu, getMenuProps({\n      'aria-label': ariaLabel\n    }), isOpen ? filterItems(items, itemToString, inputValue).map(function (item, index) {\n      var _getItemProps;\n\n      var itemProps = getItemProps((_getItemProps = {\n        item: item,\n        index: index\n      }, _defineProperty(_getItemProps, 'aria-current', selectedItem === item ? true : null), _defineProperty(_getItemProps, 'aria-selected', highlightedIndex === index ? true : null), _defineProperty(_getItemProps, \"disabled\", item.disabled), _getItemProps));\n      return /*#__PURE__*/React.createElement(ListBox.MenuItem, _extends({\n        key: itemProps.id,\n        isActive: selectedItem === item,\n        tabIndex: \"-1\",\n        isHighlighted: highlightedIndex === index || (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id) && (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id) === item.id || false,\n        title: itemToElement ? item.text : itemToString(item)\n      }, itemProps), itemToElement ? /*#__PURE__*/React.createElement(ItemToElement, _extends({\n        key: itemProps.id\n      }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React.createElement(Checkmark16, {\n        className: \"\".concat(prefix, \"--list-box__menu-item__selected-icon\")\n      }));\n    }) : null)), helperText && !invalid && !warn && /*#__PURE__*/React.createElement(Text, {\n      as: \"div\",\n      id: comboBoxHelperId,\n      className: helperClasses\n    }, helperText));\n  });\n});\nComboBox.displayName = 'ComboBox';\nComboBox.propTypes = {\n  /**\n   * 'aria-label' of the ListBox component.\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * An optional className to add to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the direction of the combobox dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom']),\n\n  /**\n   * Specify if the control should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Additional props passed to Downshift\n   */\n  downshiftProps: PropTypes.shape(Downshift.propTypes),\n\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.string,\n\n  /**\n   * Specify a custom `id` for the input\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Optional function to render items as custom components instead of strings.\n   * Defaults to null and is overridden by a getter\n   */\n  itemToElement: PropTypes.func,\n\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list\n   */\n  itemToString: PropTypes.func,\n\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n\n  /**\n   * should use \"light theme\" (white background)?\n   */\n  light: PropTypes.bool,\n\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component when a specific dropdown item is selected.\n   * @param {{ selectedItem }}\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback function to notify consumer when the text input changes.\n   * This provides support to change available items based on the text.\n   * @param {string} inputText\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Helper function passed to Downshift that allows the user to observe internal\n   * state changes\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * Callback function that fires when the combobox menu toggle is clicked\n   * @param {MouseEvent} event\n   */\n  onToggleClick: PropTypes.func,\n\n  /**\n   * Used to provide a placeholder text node before a user enters any input.\n   * This is only present if the control has no items selected\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * For full control of the selection\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify your own filtering logic by passing in a `shouldFilterItem`\n   * function that takes in the current input and an item and passes back\n   * whether or not the item should be filtered.\n   */\n  shouldFilterItem: PropTypes.func,\n\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `md` or `lg` as an option.\n   */\n  size: ListBoxPropTypes.ListBoxSize,\n\n  /**\n   * Provide text to be used in a `<label>` element that is tied to the\n   * combobox via ARIA attributes.\n   */\n  titleText: PropTypes.node,\n\n  /**\n   * Specify a custom translation function that takes in a message identifier\n   * and returns the localized string for the message\n   */\n  translateWithId: PropTypes.func,\n\n  /**\n   * Currently supports either the default type, or an inline variant\n   */\n  type: ListBoxPropTypes.ListBoxType,\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nComboBox.defaultProps = {\n  disabled: false,\n  itemToString: defaultItemToString,\n  itemToElement: null,\n  shouldFilterItem: defaultShouldFilterItem,\n  type: 'default',\n  ariaLabel: 'Choose an item',\n  light: false,\n  direction: 'bottom'\n};\nexport default ComboBox;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/ComboBox/ComboBox.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","cx","Downshift","PropTypes","React","useEffect","useState","useRef","Text","Checkmark16","WarningAltFilled16","WarningFilled16","ListBox","ListBoxPropTypes","ListBoxTrigger","ListBoxSelection","match","setupGetInstanceId","mapDownshiftProps","mergeRefs","useFeatureFlag","usePrefix","defaultItemToString","item","label","defaultShouldFilterItem","getInputValue","_ref","initialSelectedItem","inputValue","itemToString","selectedItem","findHighlightedIndex","_ref2","items","searchValue","toLowerCase","indexOf","getInstanceId","ComboBox","forwardRef","props","ref","_cx","ariaLabel","containerClassName","className","direction","disabled","downshiftProps","helperText","id","invalid","invalidText","itemToElement","light","onChange","onInputChange","onToggleClick","placeholder","shouldFilterItem","size","titleText","translateWithId","type","warn","warnText","onStateChange","rest","prefix","textInput","comboBoxInstanceId","_useState","_useState2","setInputValue","_useState3","_useState4","prevSelectedItem","setPrevSelectedItem","_useState5","_useState6","doneInitialSelectedItem","setDoneInitialSelectedItem","savedOnInputChange","filterItems","handleOnChange","handleOnInputValueChange","current","handleSelectionClear","focus","handleOnStateChange","newState","_ref3","setHighlightedIndex","prototype","hasOwnProperty","call","_inputValue","filteredItems","handleToggleClick","isOpen","event","preventDownshiftDefault","persist","enabled","showWarning","concat","titleClasses","comboBoxHelperId","undefined","helperClasses","wrapperClasses","inputClasses","ItemToElement","createElement","onInputValueChange","_downshiftProps$onSta","_len","args","Array","_key","inputId","_ref4","_textInput$current","getInputProps","getItemProps","getLabelProps","getMenuProps","getRootProps","getToggleButtonProps","highlightedIndex","clearSelection","toggleMenu","rootProps","suppressRefError","labelProps","buttonProps","onClick","onMouseUp","stopPropagation","inputProps","onKeyDown","Space","Enter","as","role","tabIndex","title","value","onClearSelection","Menu","map","index","_getItemProps","itemProps","MenuItem","isActive","isHighlighted","text","displayName","propTypes","string","oneOf","bool","shape","isRequired","oneOfType","number","node","func","array","ListBoxSize","ListBoxType","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ariaLabel\", \"className\", \"direction\", \"disabled\", \"downshiftProps\", \"helperText\", \"id\", \"initialSelectedItem\", \"invalid\", \"invalidText\", \"items\", \"itemToElement\", \"itemToString\", \"light\", \"onChange\", \"onInputChange\", \"onToggleClick\", \"placeholder\", \"selectedItem\", \"shouldFilterItem\", \"size\", \"titleText\", \"translateWithId\", \"type\", \"warn\", \"warnText\", \"onStateChange\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport Downshift from 'downshift';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Text } from '../Text';\nimport { Checkmark16, WarningAltFilled16, WarningFilled16 } from '@carbon/icons-react';\nimport ListBox, { PropTypes as ListBoxPropTypes } from '../ListBox';\nimport { ListBoxTrigger, ListBoxSelection } from '../ListBox/next';\nimport { match, keys } from '../../internal/keyboard';\nimport setupGetInstanceId from '../../tools/setupGetInstanceId';\nimport { mapDownshiftProps } from '../../tools/createPropAdapter';\nimport mergeRefs from '../../tools/mergeRefs';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar defaultItemToString = function defaultItemToString(item) {\n  if (typeof item === 'string') {\n    return item;\n  }\n\n  return item && item.label;\n};\n\nvar defaultShouldFilterItem = function defaultShouldFilterItem() {\n  return true;\n};\n\nvar getInputValue = function getInputValue(_ref) {\n  var initialSelectedItem = _ref.initialSelectedItem,\n      inputValue = _ref.inputValue,\n      itemToString = _ref.itemToString,\n      selectedItem = _ref.selectedItem;\n\n  if (selectedItem) {\n    return itemToString(selectedItem);\n  } // TODO: consistent `initialSelectedItem` behavior with other listbox components in v11\n\n\n  if (initialSelectedItem) {\n    return itemToString(initialSelectedItem);\n  }\n\n  return inputValue || '';\n};\n\nvar findHighlightedIndex = function findHighlightedIndex(_ref2, inputValue) {\n  var items = _ref2.items,\n      itemToString = _ref2.itemToString;\n\n  if (!inputValue) {\n    return -1;\n  }\n\n  var searchValue = inputValue.toLowerCase();\n\n  for (var i = 0; i < items.length; i++) {\n    var item = itemToString(items[i]).toLowerCase();\n\n    if (item.indexOf(searchValue) !== -1) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar getInstanceId = setupGetInstanceId();\nvar ComboBox = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _cx;\n\n  var ariaLabel = props.ariaLabel,\n      containerClassName = props.className,\n      direction = props.direction,\n      disabled = props.disabled,\n      downshiftProps = props.downshiftProps,\n      helperText = props.helperText,\n      id = props.id,\n      initialSelectedItem = props.initialSelectedItem,\n      invalid = props.invalid,\n      invalidText = props.invalidText,\n      items = props.items,\n      itemToElement = props.itemToElement,\n      itemToString = props.itemToString,\n      light = props.light,\n      onChange = props.onChange,\n      onInputChange = props.onInputChange,\n      onToggleClick = props.onToggleClick,\n      placeholder = props.placeholder,\n      selectedItem = props.selectedItem,\n      shouldFilterItem = props.shouldFilterItem,\n      size = props.size,\n      titleText = props.titleText,\n      translateWithId = props.translateWithId,\n      type = props.type,\n      warn = props.warn,\n      warnText = props.warnText,\n      onStateChange = props.onStateChange,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n  var textInput = useRef();\n  var comboBoxInstanceId = getInstanceId();\n\n  var _useState = useState(getInputValue({\n    initialSelectedItem: initialSelectedItem,\n    inputValue: '',\n    itemToString: itemToString,\n    selectedItem: selectedItem\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevSelectedItem = _useState4[0],\n      setPrevSelectedItem = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      doneInitialSelectedItem = _useState6[0],\n      setDoneInitialSelectedItem = _useState6[1];\n\n  var savedOnInputChange = useRef(onInputChange);\n\n  if (!doneInitialSelectedItem || prevSelectedItem !== selectedItem) {\n    setDoneInitialSelectedItem(true);\n    setPrevSelectedItem(selectedItem);\n    setInputValue(getInputValue({\n      initialSelectedItem: initialSelectedItem,\n      inputValue: inputValue,\n      itemToString: itemToString,\n      selectedItem: selectedItem\n    }));\n  }\n\n  var filterItems = function filterItems(items, itemToString, inputValue) {\n    return items.filter(function (item) {\n      return shouldFilterItem({\n        item: item,\n        itemToString: itemToString,\n        inputValue: inputValue\n      });\n    });\n  };\n\n  var handleOnChange = function handleOnChange(selectedItem) {\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem\n      });\n    }\n  };\n\n  var handleOnInputValueChange = function handleOnInputValueChange(inputValue) {\n    setInputValue(inputValue || '');\n  };\n\n  useEffect(function () {\n    savedOnInputChange.current = onInputChange;\n  }, [onInputChange]);\n  useEffect(function () {\n    if (savedOnInputChange.current) {\n      savedOnInputChange.current(inputValue);\n    }\n  }, [inputValue]);\n\n  var handleSelectionClear = function handleSelectionClear() {\n    if (textInput !== null && textInput !== void 0 && textInput.current) {\n      textInput.current.focus();\n    }\n  };\n\n  var handleOnStateChange = function handleOnStateChange(newState, _ref3) {\n    var setHighlightedIndex = _ref3.setHighlightedIndex;\n\n    if (Object.prototype.hasOwnProperty.call(newState, 'inputValue')) {\n      var _inputValue = newState.inputValue;\n      var filteredItems = filterItems(items, itemToString, _inputValue);\n      setHighlightedIndex(findHighlightedIndex(_objectSpread(_objectSpread({}, props), {}, {\n        items: filteredItems\n      }), _inputValue));\n    }\n  };\n\n  var handleToggleClick = function handleToggleClick(isOpen) {\n    return function (event) {\n      if (onToggleClick) {\n        onToggleClick(event);\n      }\n\n      if (event.target === textInput.current && isOpen) {\n        event.preventDownshiftDefault = true;\n        event.persist();\n      }\n    };\n  };\n\n  var enabled = useFeatureFlag('enable-v11-release');\n  var showWarning = !invalid && warn;\n  var className = cx(\"\".concat(prefix, \"--combo-box\"), [enabled ? null : containerClassName], (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--list-box--up\"), direction === 'top'), _defineProperty(_cx, \"\".concat(prefix, \"--combo-box--warning\"), showWarning), _cx));\n  var titleClasses = cx(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var comboBoxHelperId = !helperText ? undefined : \"combobox-helper-text-\".concat(comboBoxInstanceId);\n  var helperClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled));\n  var wrapperClasses = cx(\"\".concat(prefix, \"--list-box__wrapper\"), [enabled ? containerClassName : null]);\n  var inputClasses = cx(\"\".concat(prefix, \"--text-input\"), _defineProperty({}, \"\".concat(prefix, \"--text-input--empty\"), !inputValue)); // needs to be Capitalized for react to render it correctly\n\n  var ItemToElement = itemToElement;\n  return /*#__PURE__*/React.createElement(Downshift, _extends({}, mapDownshiftProps(downshiftProps), {\n    onChange: handleOnChange,\n    onInputValueChange: handleOnInputValueChange,\n    onStateChange: function onStateChange() {\n      var _downshiftProps$onSta;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      handleOnStateChange.apply(void 0, args);\n      downshiftProps === null || downshiftProps === void 0 ? void 0 : (_downshiftProps$onSta = downshiftProps.onStateChange) === null || _downshiftProps$onSta === void 0 ? void 0 : _downshiftProps$onSta.call.apply(_downshiftProps$onSta, [downshiftProps].concat(args));\n    },\n    inputValue: inputValue || '',\n    itemToString: itemToString,\n    initialSelectedItem: initialSelectedItem,\n    inputId: id,\n    selectedItem: selectedItem\n  }), function (_ref4) {\n    var _textInput$current;\n\n    var getInputProps = _ref4.getInputProps,\n        getItemProps = _ref4.getItemProps,\n        getLabelProps = _ref4.getLabelProps,\n        getMenuProps = _ref4.getMenuProps,\n        getRootProps = _ref4.getRootProps,\n        getToggleButtonProps = _ref4.getToggleButtonProps,\n        isOpen = _ref4.isOpen,\n        inputValue = _ref4.inputValue,\n        selectedItem = _ref4.selectedItem,\n        highlightedIndex = _ref4.highlightedIndex,\n        clearSelection = _ref4.clearSelection,\n        toggleMenu = _ref4.toggleMenu;\n    var rootProps = getRootProps({}, {\n      suppressRefError: true\n    });\n    var labelProps = getLabelProps();\n    var buttonProps = getToggleButtonProps({\n      disabled: disabled,\n      onClick: handleToggleClick(isOpen),\n      // When we moved the \"root node\" of Downshift to the <input> for\n      // ARIA 1.2 compliance, we unfortunately hit this branch for the\n      // \"mouseup\" event that downshift listens to:\n      // https://github.com/downshift-js/downshift/blob/v5.2.1/src/downshift.js#L1051-L1065\n      //\n      // As a result, it will reset the state of the component and so we\n      // stop the event from propagating to prevent this if the menu is already open.\n      // This allows the toggleMenu behavior for the toggleButton to correctly open and\n      // close the menu.\n      onMouseUp: function onMouseUp(event) {\n        if (isOpen) {\n          event.stopPropagation();\n        }\n      }\n    });\n    var inputProps = getInputProps({\n      // Remove excess aria `aria-labelledby`. HTML <label for> provides this aria information.\n      'aria-labelledby': null,\n      disabled: disabled,\n      placeholder: placeholder,\n      onClick: function onClick() {\n        toggleMenu();\n      },\n      onKeyDown: function onKeyDown(event) {\n        if (match(event, keys.Space)) {\n          event.stopPropagation();\n        }\n\n        if (match(event, keys.Enter) && !inputValue) {\n          toggleMenu();\n        }\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClasses\n    }, titleText && /*#__PURE__*/React.createElement(Text, _extends({\n      as: \"label\",\n      className: titleClasses\n    }, labelProps), titleText), /*#__PURE__*/React.createElement(ListBox, {\n      className: className,\n      disabled: disabled,\n      invalid: invalid,\n      invalidText: invalidText,\n      isOpen: isOpen,\n      light: light,\n      size: size,\n      warn: warn,\n      warnText: warnText\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--list-box__field\")\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({\n      role: \"combobox\",\n      disabled: disabled,\n      className: inputClasses,\n      type: \"text\",\n      tabIndex: \"0\",\n      \"aria-autocomplete\": \"list\",\n      \"aria-expanded\": rootProps['aria-expanded'],\n      \"aria-haspopup\": \"listbox\",\n      \"aria-controls\": inputProps['aria-controls'],\n      title: textInput === null || textInput === void 0 ? void 0 : (_textInput$current = textInput.current) === null || _textInput$current === void 0 ? void 0 : _textInput$current.value\n    }, inputProps, rest, {\n      ref: mergeRefs(textInput, ref)\n    })), invalid && /*#__PURE__*/React.createElement(WarningFilled16, {\n      className: \"\".concat(prefix, \"--list-box__invalid-icon\")\n    }), showWarning && /*#__PURE__*/React.createElement(WarningAltFilled16, {\n      className: \"\".concat(prefix, \"--list-box__invalid-icon \").concat(prefix, \"--list-box__invalid-icon--warning\")\n    }), inputValue && /*#__PURE__*/React.createElement(ListBoxSelection, {\n      clearSelection: clearSelection,\n      translateWithId: translateWithId,\n      disabled: disabled,\n      onClearSelection: handleSelectionClear\n    }), /*#__PURE__*/React.createElement(ListBoxTrigger, _extends({}, buttonProps, {\n      isOpen: isOpen,\n      translateWithId: translateWithId\n    }))), /*#__PURE__*/React.createElement(ListBox.Menu, getMenuProps({\n      'aria-label': ariaLabel\n    }), isOpen ? filterItems(items, itemToString, inputValue).map(function (item, index) {\n      var _getItemProps;\n\n      var itemProps = getItemProps((_getItemProps = {\n        item: item,\n        index: index\n      }, _defineProperty(_getItemProps, 'aria-current', selectedItem === item ? true : null), _defineProperty(_getItemProps, 'aria-selected', highlightedIndex === index ? true : null), _defineProperty(_getItemProps, \"disabled\", item.disabled), _getItemProps));\n      return /*#__PURE__*/React.createElement(ListBox.MenuItem, _extends({\n        key: itemProps.id,\n        isActive: selectedItem === item,\n        tabIndex: \"-1\",\n        isHighlighted: highlightedIndex === index || (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id) && (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id) === item.id || false,\n        title: itemToElement ? item.text : itemToString(item)\n      }, itemProps), itemToElement ? /*#__PURE__*/React.createElement(ItemToElement, _extends({\n        key: itemProps.id\n      }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React.createElement(Checkmark16, {\n        className: \"\".concat(prefix, \"--list-box__menu-item__selected-icon\")\n      }));\n    }) : null)), helperText && !invalid && !warn && /*#__PURE__*/React.createElement(Text, {\n      as: \"div\",\n      id: comboBoxHelperId,\n      className: helperClasses\n    }, helperText));\n  });\n});\nComboBox.displayName = 'ComboBox';\nComboBox.propTypes = {\n  /**\n   * 'aria-label' of the ListBox component.\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * An optional className to add to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the direction of the combobox dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom']),\n\n  /**\n   * Specify if the control should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Additional props passed to Downshift\n   */\n  downshiftProps: PropTypes.shape(Downshift.propTypes),\n\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.string,\n\n  /**\n   * Specify a custom `id` for the input\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Optional function to render items as custom components instead of strings.\n   * Defaults to null and is overridden by a getter\n   */\n  itemToElement: PropTypes.func,\n\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list\n   */\n  itemToString: PropTypes.func,\n\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n\n  /**\n   * should use \"light theme\" (white background)?\n   */\n  light: PropTypes.bool,\n\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component when a specific dropdown item is selected.\n   * @param {{ selectedItem }}\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback function to notify consumer when the text input changes.\n   * This provides support to change available items based on the text.\n   * @param {string} inputText\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Helper function passed to Downshift that allows the user to observe internal\n   * state changes\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * Callback function that fires when the combobox menu toggle is clicked\n   * @param {MouseEvent} event\n   */\n  onToggleClick: PropTypes.func,\n\n  /**\n   * Used to provide a placeholder text node before a user enters any input.\n   * This is only present if the control has no items selected\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * For full control of the selection\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify your own filtering logic by passing in a `shouldFilterItem`\n   * function that takes in the current input and an item and passes back\n   * whether or not the item should be filtered.\n   */\n  shouldFilterItem: PropTypes.func,\n\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `md` or `lg` as an option.\n   */\n  size: ListBoxPropTypes.ListBoxSize,\n\n  /**\n   * Provide text to be used in a `<label>` element that is tied to the\n   * combobox via ARIA attributes.\n   */\n  titleText: PropTypes.node,\n\n  /**\n   * Specify a custom translation function that takes in a message identifier\n   * and returns the localized string for the message\n   */\n  translateWithId: PropTypes.func,\n\n  /**\n   * Currently supports either the default type, or an inline variant\n   */\n  type: ListBoxPropTypes.ListBoxType,\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nComboBox.defaultProps = {\n  disabled: false,\n  itemToString: defaultItemToString,\n  itemToElement: null,\n  shouldFilterItem: defaultShouldFilterItem,\n  type: 'default',\n  ariaLabel: 'Choose an item',\n  light: false,\n  direction: 'bottom'\n};\nexport default ComboBox;"]},"metadata":{},"sourceType":"module"}