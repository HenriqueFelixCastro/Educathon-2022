{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport AudioPlayerDisabledButton from './AudioPlayerDisabledButton';\nimport { DDS_AUDIO_PLAYER } from '../../internal/FeatureFlags';\nimport OverflowMenu from '../../internal/vendor/carbon-components-react/components/OverflowMenu';\nimport OverflowMenuItem from '../../internal/vendor/carbon-components-react/components/OverflowMenuItem';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport Time32 from '@carbon/icons-react/es/time/32';\nvar prefix = settings.prefix;\n\nvar AudioPlayerPlaybackRateMenu = function AudioPlayerPlaybackRateMenu(_ref) {\n  var kalturaDigitalPlayer = _ref.kalturaDigitalPlayer,\n      availablePlaybackRates = _ref.availablePlaybackRates,\n      audioPlaybackRate = _ref.audioPlaybackRate,\n      setAudioPlaybackRate = _ref.setAudioPlaybackRate,\n      setDisplayVolumeControl = _ref.setDisplayVolumeControl;\n\n  var handleAudioPlaybackRate = function handleAudioPlaybackRate(velocity) {\n    if (kalturaDigitalPlayer) {\n      setAudioPlaybackRate(velocity);\n      kalturaDigitalPlayer.sendNotification('playbackRateChangeSpeed', velocity.toString());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !kalturaDigitalPlayer ? /*#__PURE__*/React.createElement(AudioPlayerDisabledButton, {\n    icon: Time32\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__overflow-menu-container\")\n  }, /*#__PURE__*/React.createElement(OverflowMenu, {\n    renderIcon: Time32,\n    direction: \"top\",\n    flipped: true,\n    iconDescription: \"Playback Rate Speed\",\n    selectorPrimaryFocus: \".\".concat(prefix, \"--audio-player__button-for-playback-rate-\").concat(audioPlaybackRate.toString().split('.').join('-'), \"x\"),\n    onOpen: function onOpen() {\n      return setDisplayVolumeControl(false);\n    }\n  }, availablePlaybackRates.sort(function (a, b) {\n    return a - b;\n  }).map(function (playbackRateValue, playbackRateIndex) {\n    return /*#__PURE__*/React.createElement(OverflowMenuItem, {\n      className: \"\".concat(prefix, \"--audio-player__button-for-playback-rate-\").concat(playbackRateValue.toString().split('.').join('-'), \"x\"),\n      key: playbackRateIndex,\n      itemText: playbackRateValue.toString() + 'x',\n      hasDivider: true,\n      onClick: function onClick() {\n        return handleAudioPlaybackRate(playbackRateValue);\n      },\n      disabled: !kalturaDigitalPlayer\n    });\n  }))));\n};\n\nAudioPlayerPlaybackRateMenu.propTypes = {\n  /**\n   * The kaltura digital player (KDP) object\n   * It starts as false and gets morphed into the html element\n   *  of the target player id reference during the kaltura player\n   *  embeding process as soon as the kaltura ready callback triggers\n   */\n  kalturaDigitalPlayer: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]).isRequired,\n\n  /**\n   * An array containing the available velocities/rates of the playback\n   * Decimal - Ideally the decimals should be multiples of 0.25\n   * Example & Default Values (inherited from parent):\n   *  [1, 1.5, 2]\n   */\n  availablePlaybackRates: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n  /**\n   * The state getter for the current playback rate\n   */\n  audioPlaybackRate: PropTypes.number.isRequired,\n\n  /**\n   * The state setter for the current playback rate\n   */\n  setAudioPlaybackRate: PropTypes.func.isRequired,\n\n  /**\n   * The state setter that show/hide the custom volume menu\n   */\n  setDisplayVolumeControl: PropTypes.func.isRequired\n};\nAudioPlayerPlaybackRateMenu.defaultProps = {\n  kalturaDigitalPlayer: false\n};\nexport default !DDS_AUDIO_PLAYER ? undefined : AudioPlayerPlaybackRateMenu;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/AudioPlayer/AudioPlayerPlaybackRateMenu.js"],"names":["AudioPlayerDisabledButton","DDS_AUDIO_PLAYER","OverflowMenu","OverflowMenuItem","PropTypes","React","settings","Time32","prefix","AudioPlayerPlaybackRateMenu","_ref","kalturaDigitalPlayer","availablePlaybackRates","audioPlaybackRate","setAudioPlaybackRate","setDisplayVolumeControl","handleAudioPlaybackRate","velocity","sendNotification","toString","createElement","Fragment","icon","className","concat","renderIcon","direction","flipped","iconDescription","selectorPrimaryFocus","split","join","onOpen","sort","a","b","map","playbackRateValue","playbackRateIndex","key","itemText","hasDivider","onClick","disabled","propTypes","oneOfType","object","bool","isRequired","arrayOf","number","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport AudioPlayerDisabledButton from './AudioPlayerDisabledButton';\nimport { DDS_AUDIO_PLAYER } from '../../internal/FeatureFlags';\nimport OverflowMenu from '../../internal/vendor/carbon-components-react/components/OverflowMenu';\nimport OverflowMenuItem from '../../internal/vendor/carbon-components-react/components/OverflowMenuItem';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport Time32 from '@carbon/icons-react/es/time/32';\nvar prefix = settings.prefix;\n\nvar AudioPlayerPlaybackRateMenu = function AudioPlayerPlaybackRateMenu(_ref) {\n  var kalturaDigitalPlayer = _ref.kalturaDigitalPlayer,\n      availablePlaybackRates = _ref.availablePlaybackRates,\n      audioPlaybackRate = _ref.audioPlaybackRate,\n      setAudioPlaybackRate = _ref.setAudioPlaybackRate,\n      setDisplayVolumeControl = _ref.setDisplayVolumeControl;\n\n  var handleAudioPlaybackRate = function handleAudioPlaybackRate(velocity) {\n    if (kalturaDigitalPlayer) {\n      setAudioPlaybackRate(velocity);\n      kalturaDigitalPlayer.sendNotification('playbackRateChangeSpeed', velocity.toString());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !kalturaDigitalPlayer ? /*#__PURE__*/React.createElement(AudioPlayerDisabledButton, {\n    icon: Time32\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__overflow-menu-container\")\n  }, /*#__PURE__*/React.createElement(OverflowMenu, {\n    renderIcon: Time32,\n    direction: \"top\",\n    flipped: true,\n    iconDescription: \"Playback Rate Speed\",\n    selectorPrimaryFocus: \".\".concat(prefix, \"--audio-player__button-for-playback-rate-\").concat(audioPlaybackRate.toString().split('.').join('-'), \"x\"),\n    onOpen: function onOpen() {\n      return setDisplayVolumeControl(false);\n    }\n  }, availablePlaybackRates.sort(function (a, b) {\n    return a - b;\n  }).map(function (playbackRateValue, playbackRateIndex) {\n    return /*#__PURE__*/React.createElement(OverflowMenuItem, {\n      className: \"\".concat(prefix, \"--audio-player__button-for-playback-rate-\").concat(playbackRateValue.toString().split('.').join('-'), \"x\"),\n      key: playbackRateIndex,\n      itemText: playbackRateValue.toString() + 'x',\n      hasDivider: true,\n      onClick: function onClick() {\n        return handleAudioPlaybackRate(playbackRateValue);\n      },\n      disabled: !kalturaDigitalPlayer\n    });\n  }))));\n};\n\nAudioPlayerPlaybackRateMenu.propTypes = {\n  /**\n   * The kaltura digital player (KDP) object\n   * It starts as false and gets morphed into the html element\n   *  of the target player id reference during the kaltura player\n   *  embeding process as soon as the kaltura ready callback triggers\n   */\n  kalturaDigitalPlayer: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]).isRequired,\n\n  /**\n   * An array containing the available velocities/rates of the playback\n   * Decimal - Ideally the decimals should be multiples of 0.25\n   * Example & Default Values (inherited from parent):\n   *  [1, 1.5, 2]\n   */\n  availablePlaybackRates: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n  /**\n   * The state getter for the current playback rate\n   */\n  audioPlaybackRate: PropTypes.number.isRequired,\n\n  /**\n   * The state setter for the current playback rate\n   */\n  setAudioPlaybackRate: PropTypes.func.isRequired,\n\n  /**\n   * The state setter that show/hide the custom volume menu\n   */\n  setDisplayVolumeControl: PropTypes.func.isRequired\n};\nAudioPlayerPlaybackRateMenu.defaultProps = {\n  kalturaDigitalPlayer: false\n};\nexport default !DDS_AUDIO_PLAYER ? undefined : AudioPlayerPlaybackRateMenu;"]},"metadata":{},"sourceType":"module"}