{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useRef } from 'react';\nimport Button from '../../internal/vendor/carbon-components-react/components/Button/Button';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Button group.\n */\n\nvar ButtonGroup = function ButtonGroup(_ref) {\n  var buttons = _ref.buttons;\n  var groupRef = useRef(null);\n  useEffect(function () {\n    if (groupRef.current) {\n      groupRef.current.style.setProperty(\"--\".concat(stablePrefix, \"--button-group--item-count\"), String(buttons.length));\n    }\n  }, [buttons]);\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"\".concat(prefix, \"--buttongroup\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--button-group\"),\n    ref: groupRef\n  }, buttons.map(function (button, key) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      className: \"\".concat(prefix, \"--buttongroup-item\")\n    }, /*#__PURE__*/React.createElement(Button, _extends({\n      \"data-autoid\": \"\".concat(stablePrefix, \"--button-group-\").concat(key),\n      isExpressive: true\n    }, button, {\n      type: \"button\",\n      kind: key === buttons.length - 1 ? 'primary' : 'tertiary'\n    }), button.copy));\n  }));\n};\n\nButtonGroup.propTypes = {\n  /**\n   * Array of button objects to render.\n   * Use the following for each items:\n   *\n   * | Name         | Data Type | Description                                                                                                                    |\n   * | ------------ | --------- | ------------------------------------------------------------------------------------------------------------------------------ |\n   * | `href`       | String    | URL for the button item                                                                                                        |\n   * | `onClick`    | Function  | Function triggered on click of button                                                                                          |\n   * | `copy`       | String    | Button copy                                                                                                                    |\n   * | `renderIcon` | Object    | Provide an optional icon for the CTA from [Carbon's icon library](https://www.carbondesignsystem.com/guidelines/icons/library) |\n   *\n   * Visit the [Button documentation](http://react.carbondesignsystem.com/?path=/story/buttons--default)\n   * from Carbon for a full list of available props.\n   */\n  buttons: PropTypes.arrayOf(PropTypes.shape({\n    copy: PropTypes.string,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n    renderIcon: PropTypes.elementType\n  })).isRequired\n};\nexport default ButtonGroup;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ButtonGroup/ButtonGroup.js"],"names":["_extends","React","useEffect","useRef","Button","ddsSettings","PropTypes","settings","stablePrefix","prefix","ButtonGroup","_ref","buttons","groupRef","current","style","setProperty","concat","String","length","createElement","className","ref","map","button","key","isExpressive","type","kind","copy","propTypes","arrayOf","shape","string","href","onClick","func","renderIcon","elementType","isRequired"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,wEAAnB;AACA,OAAOC,WAAP,MAAwB,+EAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,IAAIC,YAAY,GAAGH,WAAW,CAACG,YAA/B;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AACA;AACA;AACA;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAC3C,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AACA,MAAIC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAArB;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIW,QAAQ,CAACC,OAAb,EAAsB;AACpBD,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,CAAuBC,WAAvB,CAAmC,KAAKC,MAAL,CAAYT,YAAZ,EAA0B,4BAA1B,CAAnC,EAA4FU,MAAM,CAACN,OAAO,CAACO,MAAT,CAAlG;AACD;AACF,GAJQ,EAIN,CAACP,OAAD,CAJM,CAAT;AAKA,SAAO,aAAaX,KAAK,CAACmB,aAAN,CAAoB,IAApB,EAA0B;AAC5CC,IAAAA,SAAS,EAAE,GAAGJ,MAAH,CAAUR,MAAV,EAAkB,eAAlB,CADiC;AAE5C,mBAAe,GAAGQ,MAAH,CAAUT,YAAV,EAAwB,gBAAxB,CAF6B;AAG5Cc,IAAAA,GAAG,EAAET;AAHuC,GAA1B,EAIjBD,OAAO,CAACW,GAAR,CAAY,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;AACpC,WAAO,aAAaxB,KAAK,CAACmB,aAAN,CAAoB,IAApB,EAA0B;AAC5CK,MAAAA,GAAG,EAAEA,GADuC;AAE5CJ,MAAAA,SAAS,EAAE,GAAGJ,MAAH,CAAUR,MAAV,EAAkB,oBAAlB;AAFiC,KAA1B,EAGjB,aAAaR,KAAK,CAACmB,aAAN,CAAoBhB,MAApB,EAA4BJ,QAAQ,CAAC;AACnD,qBAAe,GAAGiB,MAAH,CAAUT,YAAV,EAAwB,iBAAxB,EAA2CS,MAA3C,CAAkDQ,GAAlD,CADoC;AAEnDC,MAAAA,YAAY,EAAE;AAFqC,KAAD,EAGjDF,MAHiD,EAGzC;AACTG,MAAAA,IAAI,EAAE,QADG;AAETC,MAAAA,IAAI,EAAEH,GAAG,KAAKb,OAAO,CAACO,MAAR,GAAiB,CAAzB,GAA6B,SAA7B,GAAyC;AAFtC,KAHyC,CAApC,EAMZK,MAAM,CAACK,IANK,CAHI,CAApB;AAUD,GAXE,CAJiB,CAApB;AAgBD,CAxBD;;AA0BAnB,WAAW,CAACoB,SAAZ,GAAwB;AACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACElB,EAAAA,OAAO,EAAEN,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,KAAV,CAAgB;AACzCH,IAAAA,IAAI,EAAEvB,SAAS,CAAC2B,MADyB;AAEzCC,IAAAA,IAAI,EAAE5B,SAAS,CAAC2B,MAFyB;AAGzCE,IAAAA,OAAO,EAAE7B,SAAS,CAAC8B,IAHsB;AAIzCC,IAAAA,UAAU,EAAE/B,SAAS,CAACgC;AAJmB,GAAhB,CAAlB,EAKLC;AApBkB,CAAxB;AAsBA,eAAe7B,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useRef } from 'react';\nimport Button from '../../internal/vendor/carbon-components-react/components/Button/Button';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Button group.\n */\n\nvar ButtonGroup = function ButtonGroup(_ref) {\n  var buttons = _ref.buttons;\n  var groupRef = useRef(null);\n  useEffect(function () {\n    if (groupRef.current) {\n      groupRef.current.style.setProperty(\"--\".concat(stablePrefix, \"--button-group--item-count\"), String(buttons.length));\n    }\n  }, [buttons]);\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"\".concat(prefix, \"--buttongroup\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--button-group\"),\n    ref: groupRef\n  }, buttons.map(function (button, key) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      className: \"\".concat(prefix, \"--buttongroup-item\")\n    }, /*#__PURE__*/React.createElement(Button, _extends({\n      \"data-autoid\": \"\".concat(stablePrefix, \"--button-group-\").concat(key),\n      isExpressive: true\n    }, button, {\n      type: \"button\",\n      kind: key === buttons.length - 1 ? 'primary' : 'tertiary'\n    }), button.copy));\n  }));\n};\n\nButtonGroup.propTypes = {\n  /**\n   * Array of button objects to render.\n   * Use the following for each items:\n   *\n   * | Name         | Data Type | Description                                                                                                                    |\n   * | ------------ | --------- | ------------------------------------------------------------------------------------------------------------------------------ |\n   * | `href`       | String    | URL for the button item                                                                                                        |\n   * | `onClick`    | Function  | Function triggered on click of button                                                                                          |\n   * | `copy`       | String    | Button copy                                                                                                                    |\n   * | `renderIcon` | Object    | Provide an optional icon for the CTA from [Carbon's icon library](https://www.carbondesignsystem.com/guidelines/icons/library) |\n   *\n   * Visit the [Button documentation](http://react.carbondesignsystem.com/?path=/story/buttons--default)\n   * from Carbon for a full list of available props.\n   */\n  buttons: PropTypes.arrayOf(PropTypes.shape({\n    copy: PropTypes.string,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n    renderIcon: PropTypes.elementType\n  })).isRequired\n};\nexport default ButtonGroup;"]},"metadata":{},"sourceType":"module"}