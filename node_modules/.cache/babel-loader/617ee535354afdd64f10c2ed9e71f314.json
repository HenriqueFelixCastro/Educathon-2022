{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ExpressiveModal } from '../ExpressiveModal';\nimport { Image } from '../Image';\nimport KalturaPlayerAPI from '../../internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer';\nimport { ModalBody } from '../../internal/vendor/carbon-components-react/components/ComposedModal/ComposedModal';\nimport PropTypes from 'prop-types';\nimport removeHtmlTagEntities from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/removeHtmlTagEntities/removeHtmlTagEntities';\nimport root from 'window-or-global';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport uniqueid from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/uniqueid/uniqueid';\nimport { VideoPlayer } from '../VideoPlayer';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * LightboxMediaViewer Component.\n */\n\nvar LightboxMediaViewer = function LightboxMediaViewer(_ref) {\n  var media = _ref.media,\n      onClose = _ref.onClose,\n      modalProps = _objectWithoutProperties(_ref, [\"media\", \"onClose\"]);\n\n  var _useState = useState({\n    title: '',\n    alt: '',\n    description: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoData = _useState2[0],\n      setVideoData = _useState2[1];\n  /**\n   * Generates an ID for video title to be used by aria-labelledby.\n   */\n\n\n  var titleId = uniqueid('dds-');\n  /**\n   * Generates an ID for video description, to be used by aria-describedby.\n   */\n\n  var descriptionId = uniqueid('dds-');\n  var containerRef = useRef(null);\n  /**\n   * Adds aria-labelledby attribute to dialog container with video title.\n   */\n\n  useEffect(function () {\n    var containerNode = containerRef.current;\n    var dialogNode = containerNode.querySelector('div[role=\"dialog\"]');\n\n    if (dialogNode && (media.title || videoData.title)) {\n      dialogNode.setAttribute('aria-labelledby', titleId);\n    }\n  }, [titleId, media.title, videoData.title]);\n  /**\n   * Adds aria-describedby attribute to dialog container with video description.\n   */\n\n  useEffect(function () {\n    var containerNode = containerRef.current;\n    var dialogNode = containerNode.querySelector('div[role=\"dialog\"]');\n\n    if (dialogNode && (media.description || videoData.description)) {\n      dialogNode.setAttribute('aria-describedby', descriptionId);\n    }\n  }, [descriptionId, media.description, videoData.description]);\n  useEffect(function () {\n    var stale = false;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(media.type === 'video')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return KalturaPlayerAPI.api(media.src);\n\n            case 3:\n              data = _context.sent;\n\n              if (!stale) {\n                setVideoData({\n                  title: media.title ? media.title : data.name,\n                  alt: media.title ? media.title : data.name,\n                  description: media.description ? media.description : data.description\n                });\n              }\n\n              _context.next = 8;\n              break;\n\n            case 7:\n              setVideoData({\n                title: media.title,\n                alt: media.alt,\n                description: media.description\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      stale = true;\n    };\n  }, [media]);\n  var videoDesc = removeHtmlTagEntities(videoData.description);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--lightbox-media-viewer\"),\n    className: \"\".concat(prefix, \"--lightbox-media-viewer\"),\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(ExpressiveModal, _extends({\n    fullwidth: true\n  }, modalProps, {\n    onClose: closeModal\n  }), /*#__PURE__*/React.createElement(ModalBody, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__row\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__media \").concat(prefix, \"--no-gutter\")\n  }, media.type === 'video' ? /*#__PURE__*/React.createElement(VideoPlayer, {\n    videoId: media.src,\n    autoPlay: modalProps.open\n  }) : /*#__PURE__*/React.createElement(Image, {\n    defaultSrc: media.src,\n    alt: videoData.alt\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__media-description \").concat(prefix, \"--no-gutter\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__content\")\n  }, videoData.title && /*#__PURE__*/React.createElement(\"div\", {\n    id: titleId,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--lightbox-media-viewer__content__title\"),\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__content__title\")\n  }, videoData.title), videoData.description && /*#__PURE__*/React.createElement(\"div\", {\n    id: descriptionId,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--lightbox-media-viewer__content__desc\"),\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__content__desc\")\n  }, videoDesc))))))));\n  /**\n   * Stop video on modal close\n   */\n\n  function closeModal() {\n    if ((onClose === null || onClose === void 0 ? void 0 : onClose()) !== false && root.kWidget) {\n      root.kWidget.addReadyCallback(function (videoId) {\n        var kdp = document.getElementById(videoId);\n        kdp.sendNotification('doStop');\n      });\n    }\n  }\n};\n\nLightboxMediaViewer.propTypes = {\n  /**\n   * Object containing media info. The structure is:\n   *\n   * | Name          | Data Type | Description                                                                                                            |\n   * | ------------- | --------- | ---------------------------------------------------------------------------------------------------------------------- |\n   * | `type`        | String    | Determines whether to render `image` or `video`                                                                        |\n   * | `src`         | String    | Image link or video id                                                                                                 |\n   * | `alt`         | String    | Alternate text for image. For video, this is generated from api call.                                                  |\n   * | `title`       | String    | Overrides the Kaltura video title if `type=video`.       |\n   * | `description` | String    | Overrides the Kaltura video description if `type=video`. |\n   */\n  media: PropTypes.shape({\n    type: PropTypes.string,\n    src: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    alt: PropTypes.string\n  }).isRequired,\n\n  /**\n   * Function to be triggered on close of Modal.\n   */\n  onClose: PropTypes.func\n};\nexport default LightboxMediaViewer;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/LightboxMediaViewer/LightboxMediaViewer.js"],"names":["_extends","_regeneratorRuntime","_asyncToGenerator","_slicedToArray","_objectWithoutProperties","React","useEffect","useState","useRef","ddsSettings","ExpressiveModal","Image","KalturaPlayerAPI","ModalBody","PropTypes","removeHtmlTagEntities","root","settings","uniqueid","VideoPlayer","stablePrefix","prefix","LightboxMediaViewer","_ref","media","onClose","modalProps","_useState","title","alt","description","_useState2","videoData","setVideoData","titleId","descriptionId","containerRef","containerNode","current","dialogNode","querySelector","setAttribute","stale","mark","_callee","data","wrap","_callee$","_context","prev","next","type","api","src","sent","name","stop","videoDesc","createElement","concat","className","ref","fullwidth","closeModal","videoId","autoPlay","open","defaultSrc","id","kWidget","addReadyCallback","kdp","document","getElementById","sendNotification","propTypes","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState, useRef } from 'react';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ExpressiveModal } from '../ExpressiveModal';\nimport { Image } from '../Image';\nimport KalturaPlayerAPI from '../../internal/vendor/@carbon/ibmdotcom-services/services/KalturaPlayer/KalturaPlayer';\nimport { ModalBody } from '../../internal/vendor/carbon-components-react/components/ComposedModal/ComposedModal';\nimport PropTypes from 'prop-types';\nimport removeHtmlTagEntities from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/removeHtmlTagEntities/removeHtmlTagEntities';\nimport root from 'window-or-global';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport uniqueid from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/uniqueid/uniqueid';\nimport { VideoPlayer } from '../VideoPlayer';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * LightboxMediaViewer Component.\n */\n\nvar LightboxMediaViewer = function LightboxMediaViewer(_ref) {\n  var media = _ref.media,\n      onClose = _ref.onClose,\n      modalProps = _objectWithoutProperties(_ref, [\"media\", \"onClose\"]);\n\n  var _useState = useState({\n    title: '',\n    alt: '',\n    description: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoData = _useState2[0],\n      setVideoData = _useState2[1];\n  /**\n   * Generates an ID for video title to be used by aria-labelledby.\n   */\n\n\n  var titleId = uniqueid('dds-');\n  /**\n   * Generates an ID for video description, to be used by aria-describedby.\n   */\n\n  var descriptionId = uniqueid('dds-');\n  var containerRef = useRef(null);\n  /**\n   * Adds aria-labelledby attribute to dialog container with video title.\n   */\n\n  useEffect(function () {\n    var containerNode = containerRef.current;\n    var dialogNode = containerNode.querySelector('div[role=\"dialog\"]');\n\n    if (dialogNode && (media.title || videoData.title)) {\n      dialogNode.setAttribute('aria-labelledby', titleId);\n    }\n  }, [titleId, media.title, videoData.title]);\n  /**\n   * Adds aria-describedby attribute to dialog container with video description.\n   */\n\n  useEffect(function () {\n    var containerNode = containerRef.current;\n    var dialogNode = containerNode.querySelector('div[role=\"dialog\"]');\n\n    if (dialogNode && (media.description || videoData.description)) {\n      dialogNode.setAttribute('aria-describedby', descriptionId);\n    }\n  }, [descriptionId, media.description, videoData.description]);\n  useEffect(function () {\n    var stale = false;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(media.type === 'video')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return KalturaPlayerAPI.api(media.src);\n\n            case 3:\n              data = _context.sent;\n\n              if (!stale) {\n                setVideoData({\n                  title: media.title ? media.title : data.name,\n                  alt: media.title ? media.title : data.name,\n                  description: media.description ? media.description : data.description\n                });\n              }\n\n              _context.next = 8;\n              break;\n\n            case 7:\n              setVideoData({\n                title: media.title,\n                alt: media.alt,\n                description: media.description\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      stale = true;\n    };\n  }, [media]);\n  var videoDesc = removeHtmlTagEntities(videoData.description);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--lightbox-media-viewer\"),\n    className: \"\".concat(prefix, \"--lightbox-media-viewer\"),\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(ExpressiveModal, _extends({\n    fullwidth: true\n  }, modalProps, {\n    onClose: closeModal\n  }), /*#__PURE__*/React.createElement(ModalBody, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__row\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__media \").concat(prefix, \"--no-gutter\")\n  }, media.type === 'video' ? /*#__PURE__*/React.createElement(VideoPlayer, {\n    videoId: media.src,\n    autoPlay: modalProps.open\n  }) : /*#__PURE__*/React.createElement(Image, {\n    defaultSrc: media.src,\n    alt: videoData.alt\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__media-description \").concat(prefix, \"--no-gutter\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__content\")\n  }, videoData.title && /*#__PURE__*/React.createElement(\"div\", {\n    id: titleId,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--lightbox-media-viewer__content__title\"),\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__content__title\")\n  }, videoData.title), videoData.description && /*#__PURE__*/React.createElement(\"div\", {\n    id: descriptionId,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--lightbox-media-viewer__content__desc\"),\n    className: \"\".concat(prefix, \"--lightbox-media-viewer__content__desc\")\n  }, videoDesc))))))));\n  /**\n   * Stop video on modal close\n   */\n\n  function closeModal() {\n    if ((onClose === null || onClose === void 0 ? void 0 : onClose()) !== false && root.kWidget) {\n      root.kWidget.addReadyCallback(function (videoId) {\n        var kdp = document.getElementById(videoId);\n        kdp.sendNotification('doStop');\n      });\n    }\n  }\n};\n\nLightboxMediaViewer.propTypes = {\n  /**\n   * Object containing media info. The structure is:\n   *\n   * | Name          | Data Type | Description                                                                                                            |\n   * | ------------- | --------- | ---------------------------------------------------------------------------------------------------------------------- |\n   * | `type`        | String    | Determines whether to render `image` or `video`                                                                        |\n   * | `src`         | String    | Image link or video id                                                                                                 |\n   * | `alt`         | String    | Alternate text for image. For video, this is generated from api call.                                                  |\n   * | `title`       | String    | Overrides the Kaltura video title if `type=video`.       |\n   * | `description` | String    | Overrides the Kaltura video description if `type=video`. |\n   */\n  media: PropTypes.shape({\n    type: PropTypes.string,\n    src: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    alt: PropTypes.string\n  }).isRequired,\n\n  /**\n   * Function to be triggered on close of Modal.\n   */\n  onClose: PropTypes.func\n};\nexport default LightboxMediaViewer;"]},"metadata":{},"sourceType":"module"}