{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useCallback } from 'react';\n/**\n * Combine multiple refs into a single ref. This use useful when you have two\n * refs from both `React.forwardRef` and `useRef` that you would like to add to\n * the same node.\n *\n * @param {Array} refs\n * @returns {Function}\n */\n\nexport function useMergedRefs(refs) {\n  return useCallback(function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref !== null && ref !== undefined) {\n        ref.current = node;\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/internal/useMergedRefs.js"],"names":["useCallback","useMergedRefs","refs","node","forEach","ref","undefined","current"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,OAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,SAAOF,WAAW,CAAC,UAAUG,IAAV,EAAgB;AACjCD,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AAC1B,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,QAAAA,GAAG,CAACF,IAAD,CAAH;AACD,OAFD,MAEO,IAAIE,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAA5B,EAAuC;AAC5CD,QAAAA,GAAG,CAACE,OAAJ,GAAcJ,IAAd;AACD;AACF,KAND,EADiC,CAO7B;AACL,GARiB,EAQfD,IARe,CAAlB;AASD","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useCallback } from 'react';\n/**\n * Combine multiple refs into a single ref. This use useful when you have two\n * refs from both `React.forwardRef` and `useRef` that you would like to add to\n * the same node.\n *\n * @param {Array} refs\n * @returns {Function}\n */\n\nexport function useMergedRefs(refs) {\n  return useCallback(function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref !== null && ref !== undefined) {\n        ref.current = node;\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}"]},"metadata":{},"sourceType":"module"}