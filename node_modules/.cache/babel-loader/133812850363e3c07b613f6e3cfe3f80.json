{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport KalturaPlayerAPI from '@carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer';\n/**\n * utilizes the KalturaPlayerAPI to extract video data and\n * returns video title with duration for CTA\n *\n * @param {string} type type of CTA\n * @param {Array} videoId array of video ids\n * @param {string} customVideoTitle if provided, overrides the video original title\n * @returns {*} JSX Object\n */\n\nfunction useVideoData(type, videoId, customVideoTitle) {\n  var _useState = useState([{\n    title: '',\n    duration: '',\n    key: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoTitle = _useState2[0],\n      setVideoTitle = _useState2[1];\n\n  var getVideoData;\n  useEffect(function () {\n    getVideoData();\n  }, [getVideoData, type, customVideoTitle]);\n  /**\n   * retrieve duration and title information from the video if\n   * the type of the CTA is `video`\n   *\n   * sets the `videoTitle` state with an array of title objects\n   *\n   */\n\n  getVideoData = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var title;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(type === 'video' || type.includes('video'))) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return Promise.all(videoId.map( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(vidId) {\n                var video, time;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return KalturaPlayerAPI.api(vidId.src);\n\n                      case 2:\n                        video = _context.sent;\n                        time = KalturaPlayerAPI.getMediaDuration(video.msDuration, true);\n                        return _context.abrupt(\"return\", {\n                          title: customVideoTitle ? customVideoTitle : video.name,\n                          duration: time,\n                          key: vidId.key\n                        });\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 3:\n            title = _context2.sent;\n            setVideoTitle(title);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [type, videoId, customVideoTitle]);\n  return videoTitle;\n}\n\nexport default useVideoData;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/internal/hooks/useVideoData/useVideoData.js"],"names":["_regeneratorRuntime","_asyncToGenerator","_slicedToArray","useState","useEffect","useCallback","KalturaPlayerAPI","useVideoData","type","videoId","customVideoTitle","_useState","title","duration","key","_useState2","videoTitle","setVideoTitle","getVideoData","mark","_callee2","wrap","_callee2$","_context2","prev","next","includes","Promise","all","map","_ref2","_callee","vidId","video","time","_callee$","_context","api","src","sent","getMediaDuration","msDuration","abrupt","name","stop","_x","apply","arguments"],"mappings":"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","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useState, useEffect, useCallback } from 'react';\nimport KalturaPlayerAPI from '@carbon/ibmdotcom-services/es/services/KalturaPlayer/KalturaPlayer';\n/**\n * utilizes the KalturaPlayerAPI to extract video data and\n * returns video title with duration for CTA\n *\n * @param {string} type type of CTA\n * @param {Array} videoId array of video ids\n * @param {string} customVideoTitle if provided, overrides the video original title\n * @returns {*} JSX Object\n */\n\nfunction useVideoData(type, videoId, customVideoTitle) {\n  var _useState = useState([{\n    title: '',\n    duration: '',\n    key: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoTitle = _useState2[0],\n      setVideoTitle = _useState2[1];\n\n  var getVideoData;\n  useEffect(function () {\n    getVideoData();\n  }, [getVideoData, type, customVideoTitle]);\n  /**\n   * retrieve duration and title information from the video if\n   * the type of the CTA is `video`\n   *\n   * sets the `videoTitle` state with an array of title objects\n   *\n   */\n\n  getVideoData = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var title;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(type === 'video' || type.includes('video'))) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return Promise.all(videoId.map( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(vidId) {\n                var video, time;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return KalturaPlayerAPI.api(vidId.src);\n\n                      case 2:\n                        video = _context.sent;\n                        time = KalturaPlayerAPI.getMediaDuration(video.msDuration, true);\n                        return _context.abrupt(\"return\", {\n                          title: customVideoTitle ? customVideoTitle : video.name,\n                          duration: time,\n                          key: vidId.key\n                        });\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 3:\n            title = _context2.sent;\n            setVideoTitle(title);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [type, videoId, customVideoTitle]);\n  return videoTitle;\n}\n\nexport default useVideoData;"]},"metadata":{},"sourceType":"module"}