{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ContentGroup from '../ContentGroup/ContentGroup';\nimport ContentItem from '../ContentItem/ContentItem';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ImageWithCaption } from '../ImageWithCaption';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { VideoPlayer } from '../VideoPlayer';\nvar prefix = settings.prefix;\nvar stablePrefix = ddsSettings.stablePrefix;\n/**\n * ContentGroupSimple.\n */\n\nvar ContentGroupSimple = function ContentGroupSimple(_ref) {\n  var heading = _ref.heading,\n      mediaType = _ref.mediaType,\n      mediaData = _ref.mediaData,\n      items = _ref.items,\n      cta = _ref.cta,\n      copy = _ref.copy;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-simple\"),\n    className: \"\".concat(prefix, \"--content-group-simple\")\n  }, /*#__PURE__*/React.createElement(ContentGroup, {\n    cta: cta,\n    heading: heading,\n    copy: copy\n  }, _renderMedia(mediaType, mediaData), _renderContent(items)));\n};\n/**\n *\n * @param {Array} items Array of data for ContentItems to be rendered\n * @returns {*} Array of ContentItem Components\n */\n\n\nvar _renderContent = function _renderContent(items) {\n  return items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ContentItem, _extends({}, item, {\n      key: index\n    }));\n  });\n};\n/**\n * renders either video or image content\n *\n * @param {string} type cta type ( external | jump | local)\n * @param {object} data cta type ( external | jump | local)\n * @private\n * @returns {*} media component\n */\n\n\nvar _renderMedia = function _renderMedia(type, data) {\n  if (data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-simple__media\")\n    }, type === 'image' && /*#__PURE__*/React.createElement(ImageWithCaption, data), type === 'video' && /*#__PURE__*/React.createElement(VideoPlayer, data));\n  }\n};\n\nContentGroupSimple.propTypes = {\n  /**\n   * Main heading of the pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Copy text (enabled for the `markdownToHtml` utility)\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Determines media type (image or video).\n   */\n  mediaType: PropTypes.oneOf(['image', 'video']),\n\n  /**\n   * Media Data for either image or video.\n   * See the following components' README for more details:\n   *\n   * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n   * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n   */\n  mediaData: PropTypes.oneOfType([PropTypes.shape({\n    inverse: PropTypes.bool,\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }).isRequired,\n    lightbox: PropTypes.bool,\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  }), PropTypes.shape({\n    customClassName: PropTypes.string,\n    videoId: PropTypes.string.isRequired,\n    showCaption: PropTypes.bool,\n    inverse: PropTypes.bool\n  })]),\n\n  /**\n   * Data to be used on `<ContentItem>`s.\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    cta: PropTypes.shape({\n      type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n      heading: PropTypes.string,\n      href: PropTypes.string,\n      customClassName: PropTypes.string\n    }),\n\n    /**\n     * Allows user to pass in custom class name.\n     */\n    customClassName: PropTypes.string,\n\n    /**\n     * Copy text.\n     */\n    copy: PropTypes.string,\n\n    /**\n     * Heading text.\n     */\n    heading: PropTypes.string,\n\n    /**\n     * Determines media type (image or video).\n     */\n    mediaType: PropTypes.oneOf(['image', 'video']),\n\n    /**\n     * Media Data for either image or video.\n     * See the following components' README for more details:\n     *\n     * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n     * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n     */\n    mediaData: PropTypes.oneOfType([PropTypes.shape({\n      inverse: PropTypes.bool,\n      image: PropTypes.shape({\n        classname: PropTypes.string,\n        sources: PropTypes.arrayOf(PropTypes.shape({\n          src: PropTypes.string,\n          breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        })),\n        defaultSrc: PropTypes.string.isRequired,\n        alt: PropTypes.string.isRequired,\n        longDescription: PropTypes.string\n      }).isRequired,\n      lightbox: PropTypes.bool,\n      heading: PropTypes.string,\n      copy: PropTypes.string,\n      customClassName: PropTypes.string\n    }), PropTypes.shape({\n      customClassName: PropTypes.string,\n      videoId: PropTypes.string.isRequired,\n      showCaption: PropTypes.bool,\n      inverse: PropTypes.bool\n    })]),\n\n    /**\n     * `true` to changes theme to inverse.\n     */\n    inverse: PropTypes.bool\n  })).isRequired,\n\n  /**\n   * Data to be used on CTA.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['text', 'card', 'button', 'feature']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    heading: PropTypes.string,\n    href: PropTypes.string,\n    customClassName: PropTypes.string\n  })\n};\nexport default ContentGroupSimple;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ContentGroupSimple/ContentGroupSimple.js"],"names":["_extends","ContentGroup","ContentItem","ddsSettings","ImageWithCaption","PropTypes","React","settings","VideoPlayer","prefix","stablePrefix","ContentGroupSimple","_ref","heading","mediaType","mediaData","items","cta","copy","createElement","concat","className","_renderMedia","_renderContent","map","item","index","key","type","data","propTypes","string","isRequired","oneOf","oneOfType","shape","inverse","bool","image","classname","sources","arrayOf","src","breakpoint","number","defaultSrc","alt","longDescription","lightbox","customClassName","videoId","showCaption","href","style"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ContentGroup from '../ContentGroup/ContentGroup';\nimport ContentItem from '../ContentItem/ContentItem';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ImageWithCaption } from '../ImageWithCaption';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { VideoPlayer } from '../VideoPlayer';\nvar prefix = settings.prefix;\nvar stablePrefix = ddsSettings.stablePrefix;\n/**\n * ContentGroupSimple.\n */\n\nvar ContentGroupSimple = function ContentGroupSimple(_ref) {\n  var heading = _ref.heading,\n      mediaType = _ref.mediaType,\n      mediaData = _ref.mediaData,\n      items = _ref.items,\n      cta = _ref.cta,\n      copy = _ref.copy;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-simple\"),\n    className: \"\".concat(prefix, \"--content-group-simple\")\n  }, /*#__PURE__*/React.createElement(ContentGroup, {\n    cta: cta,\n    heading: heading,\n    copy: copy\n  }, _renderMedia(mediaType, mediaData), _renderContent(items)));\n};\n/**\n *\n * @param {Array} items Array of data for ContentItems to be rendered\n * @returns {*} Array of ContentItem Components\n */\n\n\nvar _renderContent = function _renderContent(items) {\n  return items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ContentItem, _extends({}, item, {\n      key: index\n    }));\n  });\n};\n/**\n * renders either video or image content\n *\n * @param {string} type cta type ( external | jump | local)\n * @param {object} data cta type ( external | jump | local)\n * @private\n * @returns {*} media component\n */\n\n\nvar _renderMedia = function _renderMedia(type, data) {\n  if (data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-simple__media\")\n    }, type === 'image' && /*#__PURE__*/React.createElement(ImageWithCaption, data), type === 'video' && /*#__PURE__*/React.createElement(VideoPlayer, data));\n  }\n};\n\nContentGroupSimple.propTypes = {\n  /**\n   * Main heading of the pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Copy text (enabled for the `markdownToHtml` utility)\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Determines media type (image or video).\n   */\n  mediaType: PropTypes.oneOf(['image', 'video']),\n\n  /**\n   * Media Data for either image or video.\n   * See the following components' README for more details:\n   *\n   * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n   * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n   */\n  mediaData: PropTypes.oneOfType([PropTypes.shape({\n    inverse: PropTypes.bool,\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }).isRequired,\n    lightbox: PropTypes.bool,\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  }), PropTypes.shape({\n    customClassName: PropTypes.string,\n    videoId: PropTypes.string.isRequired,\n    showCaption: PropTypes.bool,\n    inverse: PropTypes.bool\n  })]),\n\n  /**\n   * Data to be used on `<ContentItem>`s.\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    cta: PropTypes.shape({\n      type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n      heading: PropTypes.string,\n      href: PropTypes.string,\n      customClassName: PropTypes.string\n    }),\n\n    /**\n     * Allows user to pass in custom class name.\n     */\n    customClassName: PropTypes.string,\n\n    /**\n     * Copy text.\n     */\n    copy: PropTypes.string,\n\n    /**\n     * Heading text.\n     */\n    heading: PropTypes.string,\n\n    /**\n     * Determines media type (image or video).\n     */\n    mediaType: PropTypes.oneOf(['image', 'video']),\n\n    /**\n     * Media Data for either image or video.\n     * See the following components' README for more details:\n     *\n     * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n     * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n     */\n    mediaData: PropTypes.oneOfType([PropTypes.shape({\n      inverse: PropTypes.bool,\n      image: PropTypes.shape({\n        classname: PropTypes.string,\n        sources: PropTypes.arrayOf(PropTypes.shape({\n          src: PropTypes.string,\n          breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        })),\n        defaultSrc: PropTypes.string.isRequired,\n        alt: PropTypes.string.isRequired,\n        longDescription: PropTypes.string\n      }).isRequired,\n      lightbox: PropTypes.bool,\n      heading: PropTypes.string,\n      copy: PropTypes.string,\n      customClassName: PropTypes.string\n    }), PropTypes.shape({\n      customClassName: PropTypes.string,\n      videoId: PropTypes.string.isRequired,\n      showCaption: PropTypes.bool,\n      inverse: PropTypes.bool\n    })]),\n\n    /**\n     * `true` to changes theme to inverse.\n     */\n    inverse: PropTypes.bool\n  })).isRequired,\n\n  /**\n   * Data to be used on CTA.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['text', 'card', 'button', 'feature']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    heading: PropTypes.string,\n    href: PropTypes.string,\n    customClassName: PropTypes.string\n  })\n};\nexport default ContentGroupSimple;"]},"metadata":{},"sourceType":"module"}