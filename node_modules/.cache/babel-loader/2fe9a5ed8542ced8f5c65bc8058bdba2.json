{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ContentItem from '../ContentItem/ContentItem';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ImageWithCaption } from '../ImageWithCaption';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { VideoPlayer } from '../VideoPlayer';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Content Block - Simple pattern.\n */\n\nvar ContentBlockSimple = function ContentBlockSimple(_ref) {\n  var copy = _ref.copy,\n      heading = _ref.heading,\n      mediaType = _ref.mediaType,\n      mediaData = _ref.mediaData,\n      cta = _ref.cta,\n      aside = _ref.aside;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-simple\"),\n    className: \"\".concat(prefix, \"--content-block-simple\")\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    cta: cta,\n    aside: aside\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--content-block-simple__content\")\n  }, /*#__PURE__*/React.createElement(ContentItem, {\n    copy: copy\n  }), _renderMedia(mediaType, mediaData))));\n};\n/**\n * renders either video or image content\n *\n * @param {string} type cta type ( external | jump | local)\n * @param {object} data cta type ( external | jump | local)\n * @private\n * @returns {*} media component\n */\n\n\nvar _renderMedia = function _renderMedia(type, data) {\n  if (data) {\n    var _cx;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-simple__media\"),\n      className: cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--content-block-simple__media-video\"), type === 'video'), _defineProperty(_cx, \"\".concat(prefix, \"--content-block-simple__media-image\"), type === 'image'), _cx))\n    }, type === 'image' && /*#__PURE__*/React.createElement(ImageWithCaption, data), type === 'video' && /*#__PURE__*/React.createElement(VideoPlayer, data));\n  }\n};\n\nContentBlockSimple.propTypes = {\n  /**\n   * Simple content item.\n   * Uses [`markdownToHtml`](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/utilities/src/utilities/markdownToHtml) utility.\n   */\n  copy: PropTypes.string.isRequired,\n\n  /**\n   * Title of the content block.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Determines media type (image or video).\n   */\n  mediaType: PropTypes.string,\n\n  /**\n   * Media Data for either image or video.\n   * See the following components' README for more details:\n   *\n   * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n   * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n   */\n  mediaData: PropTypes.oneOfType([PropTypes.shape({\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }).isRequired,\n    lightbox: PropTypes.bool,\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  }), PropTypes.shape({\n    customClassName: PropTypes.string,\n    videoId: PropTypes.string.isRequired,\n    showCaption: PropTypes.bool\n  })]),\n\n  /**\n   * CTA used at the end of content body.\n   * `Text` and `Card` styles supported.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['text', 'card']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    heading: PropTypes.string,\n    href: PropTypes.string,\n    customClassName: PropTypes.string\n  }),\n\n  /**\n   * Object containing elements to be rendered within <aside> html element on right panel.\n   * The structure is:\n   *\n   * | Name     | Data Type | Description                                                |\n   * | -------- | --------- | ---------------------------------------------------------- |\n   * | `items`  | Element   | Elements/Components to be rendered on the right panel.     |\n   * | `border` | Boolean   | Determines whether bottom border of `ContentBlock` is set. |\n   */\n  aside: PropTypes.object\n};\nexport default ContentBlockSimple;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ContentBlockSimple/ContentBlockSimple.js"],"names":["_defineProperty","ContentBlock","ContentItem","cx","ddsSettings","ImageWithCaption","PropTypes","React","settings","VideoPlayer","stablePrefix","prefix","ContentBlockSimple","_ref","copy","heading","mediaType","mediaData","cta","aside","createElement","concat","className","_renderMedia","type","data","_cx","propTypes","string","isRequired","oneOfType","shape","image","classname","sources","arrayOf","src","breakpoint","number","defaultSrc","alt","longDescription","lightbox","bool","customClassName","videoId","showCaption","style","oneOf","href","object"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ContentItem from '../ContentItem/ContentItem';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ImageWithCaption } from '../ImageWithCaption';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { VideoPlayer } from '../VideoPlayer';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Content Block - Simple pattern.\n */\n\nvar ContentBlockSimple = function ContentBlockSimple(_ref) {\n  var copy = _ref.copy,\n      heading = _ref.heading,\n      mediaType = _ref.mediaType,\n      mediaData = _ref.mediaData,\n      cta = _ref.cta,\n      aside = _ref.aside;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-simple\"),\n    className: \"\".concat(prefix, \"--content-block-simple\")\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    cta: cta,\n    aside: aside\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--content-block-simple__content\")\n  }, /*#__PURE__*/React.createElement(ContentItem, {\n    copy: copy\n  }), _renderMedia(mediaType, mediaData))));\n};\n/**\n * renders either video or image content\n *\n * @param {string} type cta type ( external | jump | local)\n * @param {object} data cta type ( external | jump | local)\n * @private\n * @returns {*} media component\n */\n\n\nvar _renderMedia = function _renderMedia(type, data) {\n  if (data) {\n    var _cx;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-simple__media\"),\n      className: cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--content-block-simple__media-video\"), type === 'video'), _defineProperty(_cx, \"\".concat(prefix, \"--content-block-simple__media-image\"), type === 'image'), _cx))\n    }, type === 'image' && /*#__PURE__*/React.createElement(ImageWithCaption, data), type === 'video' && /*#__PURE__*/React.createElement(VideoPlayer, data));\n  }\n};\n\nContentBlockSimple.propTypes = {\n  /**\n   * Simple content item.\n   * Uses [`markdownToHtml`](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/utilities/src/utilities/markdownToHtml) utility.\n   */\n  copy: PropTypes.string.isRequired,\n\n  /**\n   * Title of the content block.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Determines media type (image or video).\n   */\n  mediaType: PropTypes.string,\n\n  /**\n   * Media Data for either image or video.\n   * See the following components' README for more details:\n   *\n   * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n   * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n   */\n  mediaData: PropTypes.oneOfType([PropTypes.shape({\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }).isRequired,\n    lightbox: PropTypes.bool,\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  }), PropTypes.shape({\n    customClassName: PropTypes.string,\n    videoId: PropTypes.string.isRequired,\n    showCaption: PropTypes.bool\n  })]),\n\n  /**\n   * CTA used at the end of content body.\n   * `Text` and `Card` styles supported.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['text', 'card']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    heading: PropTypes.string,\n    href: PropTypes.string,\n    customClassName: PropTypes.string\n  }),\n\n  /**\n   * Object containing elements to be rendered within <aside> html element on right panel.\n   * The structure is:\n   *\n   * | Name     | Data Type | Description                                                |\n   * | -------- | --------- | ---------------------------------------------------------- |\n   * | `items`  | Element   | Elements/Components to be rendered on the right panel.     |\n   * | `border` | Boolean   | Determines whether bottom border of `ContentBlock` is set. |\n   */\n  aside: PropTypes.object\n};\nexport default ContentBlockSimple;"]},"metadata":{},"sourceType":"module"}