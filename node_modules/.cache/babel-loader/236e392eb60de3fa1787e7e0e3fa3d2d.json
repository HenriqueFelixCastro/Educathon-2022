{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport HeaderMenu from '../carbon-components-react/UIShell/HeaderMenu';\nimport HeaderMenuItem from '../../internal/vendor/carbon-components-react/components/UIShell/HeaderMenuItem';\nimport HeaderName from '../../internal/vendor/carbon-components-react/components/UIShell/HeaderName';\nimport HeaderNavContainer from './HeaderNavContainer';\nimport HeaderNavigation from '../../internal/vendor/carbon-components-react/components/UIShell/HeaderNavigation';\nimport MegaMenu from './MastheadMegaMenu/MegaMenu';\nimport PropTypes from 'prop-types';\nimport root from 'window-or-global';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Masthead top nav component.\n */\n\nvar MastheadTopNav = function MastheadTopNav(_ref) {\n  var navigation = _ref.navigation,\n      topNavProps = _objectWithoutProperties(_ref, [\"navigation\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      overlay = _useState2[0],\n      setOverlay = _useState2[1];\n\n  var childLinkChecker = topNavProps.hasCurrentUrl();\n  useEffect(function () {\n    var _document$querySelect;\n\n    (_document$querySelect = document.querySelector(\".\".concat(prefix, \"--header__menu-bar\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.setAttribute('role', 'menu');\n    document.querySelectorAll(\".\".concat(prefix, \"--header__menu-bar li\")).forEach(function (e) {\n      e.setAttribute('role', 'menuitem');\n      e.querySelector('a').removeAttribute('role');\n    });\n  }, []);\n  /**\n   * Top masthead navigation\n   *\n   * @returns {*} Top masthead navigation\n   */\n\n  var mastheadLinks = navigation.map(function (link, i) {\n    var _root$location;\n\n    var selectedUrlItem = childLinkChecker && childLinkChecker(link, (_root$location = root.location) === null || _root$location === void 0 ? void 0 : _root$location.href);\n    var autoid = \"\".concat(stablePrefix, \"--masthead-\").concat(topNavProps.navType, \"__l0-nav\").concat(i);\n    var selected = topNavProps.selectedMenuItem ? link.titleEnglish === topNavProps.selectedMenuItem : selectedUrlItem;\n    var dataTitle = link.titleEnglish ? link.titleEnglish.replace(/[^-a-zA-Z0-9_ ]/g, '').replace(/ +/g, '-').toLowerCase() : null;\n\n    if (link.hasMenu || link.hasMegapanel) {\n      return /*#__PURE__*/React.createElement(HeaderMenu, {\n        \"aria-label\": link.title,\n        menuLinkName: link.title,\n        className: classnames(_defineProperty({}, \"\".concat(prefix, \"--masthead__megamenu__l0-nav\"), link.hasMegapanel)),\n        selected: selected,\n        autoId: autoid,\n        key: i,\n        disableScroll: link.hasMegapanel,\n        setOverlay: setOverlay,\n        dataTitle: dataTitle\n      }, renderNav(link, autoid));\n    }\n\n    return /*#__PURE__*/React.createElement(HeaderMenuItem, {\n      \"data-selected\": \"\".concat(!!selected),\n      href: link.url,\n      \"data-autoid\": autoid,\n      key: i\n    }, link.title);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, topNavProps.platform && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--masthead__platform-name\")\n  }, /*#__PURE__*/React.createElement(HeaderName, {\n    prefix: \"\",\n    href: topNavProps.platform.url,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--masthead-\").concat(topNavProps.navType, \"__l0-ecosystemname\")\n  }, topNavProps.platform.name)), /*#__PURE__*/React.createElement(HeaderNavContainer, null, /*#__PURE__*/React.createElement(HeaderNavigation, {\n    \"aria-label\": \"IBM\",\n    \"data-autoid\": \"\".concat(stablePrefix, \"--masthead__l0-nav\")\n  }, mastheadLinks)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames(\"\".concat(prefix, \"--masthead__overlay\"), _defineProperty({}, \"\".concat(prefix, \"--masthead__overlay-show\"), overlay))\n  }));\n};\n/**\n * Loops through and renders a list of links for the masthead nav\n *\n * @param {object} link A list of links to be rendered\n * @param {string} autoid autoid predecessor for megamenu items/menu items data-autoids\n * @returns {object} JSX object\n */\n\n\nfunction renderNav(link, autoid) {\n  var navItems = [];\n\n  if (link.hasMegapanel) {\n    navItems.push( /*#__PURE__*/React.createElement(MegaMenu, {\n      key: link.title,\n      data: link,\n      autoid: autoid\n    }));\n  } else {\n    link.menuSections.forEach(function (section, i) {\n      section.menuItems.forEach(function (item, j) {\n        navItems.push( /*#__PURE__*/React.createElement(HeaderMenuItem, {\n          href: item.url,\n          \"data-autoid\": \"\".concat(autoid, \"--subnav-col\").concat(i, \"-item\").concat(j),\n          key: item.title\n        }, item.title));\n      });\n    });\n  }\n\n  return navItems;\n}\n\nMastheadTopNav.propTypes = {\n  /**\n   * Object containing top navigation elements.\n   */\n  navigation: PropTypes.arrayOf(PropTypes.shape({\n    hasMenu: PropTypes.bool,\n    title: PropTypes.string,\n    url: PropTypes.string,\n    menuSections: PropTypes.arrayOf(PropTypes.shape({\n      menuItems: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string\n      }))\n    }))\n  }))\n};\nexport default MastheadTopNav;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/Masthead/MastheadTopNav.js"],"names":["_defineProperty","_slicedToArray","_objectWithoutProperties","React","useEffect","useState","classnames","ddsSettings","HeaderMenu","HeaderMenuItem","HeaderName","HeaderNavContainer","HeaderNavigation","MegaMenu","PropTypes","root","settings","stablePrefix","prefix","MastheadTopNav","_ref","navigation","topNavProps","_useState","_useState2","overlay","setOverlay","childLinkChecker","hasCurrentUrl","_document$querySelect","document","querySelector","concat","setAttribute","querySelectorAll","forEach","e","removeAttribute","mastheadLinks","map","link","i","_root$location","selectedUrlItem","location","href","autoid","navType","selected","selectedMenuItem","titleEnglish","dataTitle","replace","toLowerCase","hasMenu","hasMegapanel","createElement","title","menuLinkName","className","autoId","key","disableScroll","renderNav","url","Fragment","platform","name","navItems","push","data","menuSections","section","menuItems","item","j","propTypes","arrayOf","shape","bool","string"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport HeaderMenu from '../carbon-components-react/UIShell/HeaderMenu';\nimport HeaderMenuItem from '../../internal/vendor/carbon-components-react/components/UIShell/HeaderMenuItem';\nimport HeaderName from '../../internal/vendor/carbon-components-react/components/UIShell/HeaderName';\nimport HeaderNavContainer from './HeaderNavContainer';\nimport HeaderNavigation from '../../internal/vendor/carbon-components-react/components/UIShell/HeaderNavigation';\nimport MegaMenu from './MastheadMegaMenu/MegaMenu';\nimport PropTypes from 'prop-types';\nimport root from 'window-or-global';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Masthead top nav component.\n */\n\nvar MastheadTopNav = function MastheadTopNav(_ref) {\n  var navigation = _ref.navigation,\n      topNavProps = _objectWithoutProperties(_ref, [\"navigation\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      overlay = _useState2[0],\n      setOverlay = _useState2[1];\n\n  var childLinkChecker = topNavProps.hasCurrentUrl();\n  useEffect(function () {\n    var _document$querySelect;\n\n    (_document$querySelect = document.querySelector(\".\".concat(prefix, \"--header__menu-bar\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.setAttribute('role', 'menu');\n    document.querySelectorAll(\".\".concat(prefix, \"--header__menu-bar li\")).forEach(function (e) {\n      e.setAttribute('role', 'menuitem');\n      e.querySelector('a').removeAttribute('role');\n    });\n  }, []);\n  /**\n   * Top masthead navigation\n   *\n   * @returns {*} Top masthead navigation\n   */\n\n  var mastheadLinks = navigation.map(function (link, i) {\n    var _root$location;\n\n    var selectedUrlItem = childLinkChecker && childLinkChecker(link, (_root$location = root.location) === null || _root$location === void 0 ? void 0 : _root$location.href);\n    var autoid = \"\".concat(stablePrefix, \"--masthead-\").concat(topNavProps.navType, \"__l0-nav\").concat(i);\n    var selected = topNavProps.selectedMenuItem ? link.titleEnglish === topNavProps.selectedMenuItem : selectedUrlItem;\n    var dataTitle = link.titleEnglish ? link.titleEnglish.replace(/[^-a-zA-Z0-9_ ]/g, '').replace(/ +/g, '-').toLowerCase() : null;\n\n    if (link.hasMenu || link.hasMegapanel) {\n      return /*#__PURE__*/React.createElement(HeaderMenu, {\n        \"aria-label\": link.title,\n        menuLinkName: link.title,\n        className: classnames(_defineProperty({}, \"\".concat(prefix, \"--masthead__megamenu__l0-nav\"), link.hasMegapanel)),\n        selected: selected,\n        autoId: autoid,\n        key: i,\n        disableScroll: link.hasMegapanel,\n        setOverlay: setOverlay,\n        dataTitle: dataTitle\n      }, renderNav(link, autoid));\n    }\n\n    return /*#__PURE__*/React.createElement(HeaderMenuItem, {\n      \"data-selected\": \"\".concat(!!selected),\n      href: link.url,\n      \"data-autoid\": autoid,\n      key: i\n    }, link.title);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, topNavProps.platform && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--masthead__platform-name\")\n  }, /*#__PURE__*/React.createElement(HeaderName, {\n    prefix: \"\",\n    href: topNavProps.platform.url,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--masthead-\").concat(topNavProps.navType, \"__l0-ecosystemname\")\n  }, topNavProps.platform.name)), /*#__PURE__*/React.createElement(HeaderNavContainer, null, /*#__PURE__*/React.createElement(HeaderNavigation, {\n    \"aria-label\": \"IBM\",\n    \"data-autoid\": \"\".concat(stablePrefix, \"--masthead__l0-nav\")\n  }, mastheadLinks)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames(\"\".concat(prefix, \"--masthead__overlay\"), _defineProperty({}, \"\".concat(prefix, \"--masthead__overlay-show\"), overlay))\n  }));\n};\n/**\n * Loops through and renders a list of links for the masthead nav\n *\n * @param {object} link A list of links to be rendered\n * @param {string} autoid autoid predecessor for megamenu items/menu items data-autoids\n * @returns {object} JSX object\n */\n\n\nfunction renderNav(link, autoid) {\n  var navItems = [];\n\n  if (link.hasMegapanel) {\n    navItems.push( /*#__PURE__*/React.createElement(MegaMenu, {\n      key: link.title,\n      data: link,\n      autoid: autoid\n    }));\n  } else {\n    link.menuSections.forEach(function (section, i) {\n      section.menuItems.forEach(function (item, j) {\n        navItems.push( /*#__PURE__*/React.createElement(HeaderMenuItem, {\n          href: item.url,\n          \"data-autoid\": \"\".concat(autoid, \"--subnav-col\").concat(i, \"-item\").concat(j),\n          key: item.title\n        }, item.title));\n      });\n    });\n  }\n\n  return navItems;\n}\n\nMastheadTopNav.propTypes = {\n  /**\n   * Object containing top navigation elements.\n   */\n  navigation: PropTypes.arrayOf(PropTypes.shape({\n    hasMenu: PropTypes.bool,\n    title: PropTypes.string,\n    url: PropTypes.string,\n    menuSections: PropTypes.arrayOf(PropTypes.shape({\n      menuItems: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string\n      }))\n    }))\n  }))\n};\nexport default MastheadTopNav;"]},"metadata":{},"sourceType":"module"}