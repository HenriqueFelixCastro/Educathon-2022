{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"disabled\", \"iconDescription\", \"light\", \"checked\", \"name\", \"value\", \"id\", \"onChange\", \"tabIndex\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { CheckmarkFilled16 as CheckmarkFilled } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { keys, matches } from '../../internal/keyboard';\nimport deprecate from '../../prop-types/deprecate';\nimport { useFallbackId } from '../../internal/useId';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction RadioTile(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      disabled = _ref.disabled,\n      iconDescription = _ref.iconDescription,\n      light = _ref.light,\n      checked = _ref.checked,\n      name = _ref.name,\n      value = _ref.value,\n      id = _ref.id,\n      onChange = _ref.onChange,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var inputId = useFallbackId(id);\n  var enabled = useFeatureFlag('enable-v11-release');\n  var className = cx(customClassName, \"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tile--is-selected\"), checked), _defineProperty(_cx, \"\".concat(prefix, \"--tile--light\"), light), _defineProperty(_cx, \"\".concat(prefix, \"--tile--disabled\"), disabled), _cx));\n  var inputProps = enabled ? {} : rest;\n  var labelProps = enabled ? rest : {};\n\n  function handleOnChange(evt) {\n    onChange(value, name, evt);\n  }\n\n  function handleOnKeyDown(evt) {\n    if (matches(evt, [keys.Enter, keys.Space])) {\n      evt.preventDefault();\n      onChange(value, name, evt);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n    checked: checked,\n    className: \"\".concat(prefix, \"--tile-input\"),\n    disabled: disabled,\n    id: inputId,\n    name: name,\n    onChange: !disabled ? handleOnChange : null,\n    onKeyDown: !disabled ? handleOnKeyDown : null,\n    tabIndex: !disabled ? tabIndex : null,\n    type: \"radio\",\n    value: value\n  })), /*#__PURE__*/React.createElement(\"label\", _extends({}, labelProps, {\n    htmlFor: inputId,\n    className: className\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile__checkmark\")\n  }, /*#__PURE__*/React.createElement(CheckmarkFilled, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, children)));\n}\n\nRadioTile.propTypes = {\n  /**\n   * `true` if this tile should be selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The tile content.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` if the `<input>` should be checked at initialization.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * Specify whether the RadioTile should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The description of the tile checkmark icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop for `RadioTile` is no longer needed and has ' + 'been deprecated. It will be moved in the next major release.'),\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The `name` of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The handler of the massaged `change` event on the `<input>`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The `value` of the `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nRadioTile.defaultProps = {\n  onChange: function onChange() {},\n  tabIndex: 0,\n  light: false\n};\nexport default RadioTile;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/RadioTile/RadioTile.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","CheckmarkFilled16","CheckmarkFilled","cx","PropTypes","React","keys","matches","deprecate","useFallbackId","useFeatureFlag","usePrefix","RadioTile","_ref","_cx","children","customClassName","className","disabled","iconDescription","light","checked","name","value","id","onChange","tabIndex","rest","prefix","inputId","enabled","concat","inputProps","labelProps","handleOnChange","evt","handleOnKeyDown","Enter","Space","preventDefault","createElement","Fragment","onKeyDown","type","htmlFor","propTypes","bool","node","string","defaultChecked","func","number","oneOfType","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"disabled\", \"iconDescription\", \"light\", \"checked\", \"name\", \"value\", \"id\", \"onChange\", \"tabIndex\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { CheckmarkFilled16 as CheckmarkFilled } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { keys, matches } from '../../internal/keyboard';\nimport deprecate from '../../prop-types/deprecate';\nimport { useFallbackId } from '../../internal/useId';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction RadioTile(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      customClassName = _ref.className,\n      disabled = _ref.disabled,\n      iconDescription = _ref.iconDescription,\n      light = _ref.light,\n      checked = _ref.checked,\n      name = _ref.name,\n      value = _ref.value,\n      id = _ref.id,\n      onChange = _ref.onChange,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var inputId = useFallbackId(id);\n  var enabled = useFeatureFlag('enable-v11-release');\n  var className = cx(customClassName, \"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tile--is-selected\"), checked), _defineProperty(_cx, \"\".concat(prefix, \"--tile--light\"), light), _defineProperty(_cx, \"\".concat(prefix, \"--tile--disabled\"), disabled), _cx));\n  var inputProps = enabled ? {} : rest;\n  var labelProps = enabled ? rest : {};\n\n  function handleOnChange(evt) {\n    onChange(value, name, evt);\n  }\n\n  function handleOnKeyDown(evt) {\n    if (matches(evt, [keys.Enter, keys.Space])) {\n      evt.preventDefault();\n      onChange(value, name, evt);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n    checked: checked,\n    className: \"\".concat(prefix, \"--tile-input\"),\n    disabled: disabled,\n    id: inputId,\n    name: name,\n    onChange: !disabled ? handleOnChange : null,\n    onKeyDown: !disabled ? handleOnKeyDown : null,\n    tabIndex: !disabled ? tabIndex : null,\n    type: \"radio\",\n    value: value\n  })), /*#__PURE__*/React.createElement(\"label\", _extends({}, labelProps, {\n    htmlFor: inputId,\n    className: className\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile__checkmark\")\n  }, /*#__PURE__*/React.createElement(CheckmarkFilled, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, children)));\n}\n\nRadioTile.propTypes = {\n  /**\n   * `true` if this tile should be selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The tile content.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * `true` if the `<input>` should be checked at initialization.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * Specify whether the RadioTile should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The description of the tile checkmark icon.\n   */\n  iconDescription: deprecate(PropTypes.string, 'The `iconDescription` prop for `RadioTile` is no longer needed and has ' + 'been deprecated. It will be moved in the next major release.'),\n\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The `name` of the `<input>`.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The handler of the massaged `change` event on the `<input>`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * The `value` of the `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nRadioTile.defaultProps = {\n  onChange: function onChange() {},\n  tabIndex: 0,\n  light: false\n};\nexport default RadioTile;"]},"metadata":{},"sourceType":"module"}