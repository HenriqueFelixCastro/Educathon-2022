{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { HorizontalRule } from '../HorizontalRule';\nimport { Image } from '../Image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Logo Grid component.\n */\n\nvar LogoGrid = function LogoGrid(_ref) {\n  var heading = _ref.heading,\n      logosGroup = _ref.logosGroup,\n      ctaCopy = _ref.ctaCopy,\n      ctaHref = _ref.ctaHref,\n      hideBorder = _ref.hideBorder;\n  /**\n   * sets the class name based on theme type\n   *\n   * @param {string} theme theme type ( g10 | white/default )\n   * @returns {string} theme css class names\n   */\n\n  var cta = null;\n\n  if (ctaHref) {\n    cta = {\n      style: 'card',\n      type: 'local',\n      heading: ctaCopy,\n      cta: {\n        href: ctaHref\n      }\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--logo-grid\"),\n    className: \"\".concat(prefix, \"--logo-grid\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--logo-grid__container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--logo-grid__wrapper\")\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    cta: cta\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--logo-grid__row\")\n  }, logosGroup.map(function (placeholder, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--logo-grid__col\"),\n      key: index\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--logo-grid__logo\"),\n      key: placeholder.label\n    }, /*#__PURE__*/React.createElement(Image, {\n      defaultSrc: placeholder.imgSrc,\n      classname: \"\".concat(prefix, \"--logo-grid_img\"),\n      alt: placeholder.altText,\n      longDescription: placeholder.label\n    })));\n  }))))), !hideBorder && /*#__PURE__*/React.createElement(HorizontalRule, null));\n};\n\nLogoGrid.propTypes = {\n  /**\n   * Heading text.\n   */\n  heading: PropTypes.string,\n\n  /**\n   * An array of logo objects to be rendered as Image components surrounded by hypertext links:\n   *\n   * | Name     | Data Type | Description                                                |\n   * | -------- | --------- | ---------------------------------------------------------- |\n   * | `label`  | String    | Visible to screen readers, hidden from users.              |\n   * | `imgSrc` | String    | Image source for logo placeholder.                         |\n   * | `altText`| String    | Alternate text for logo placeholder.                       |\n   */\n  logosGroup: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    imgSrc: PropTypes.string,\n    altText: PropTypes.string\n  })).isRequired,\n\n  /**\n   * Optional copy for the CTA\n   */\n  ctaCopy: PropTypes.string,\n\n  /**\n   * Link address for the CTA. If omitted, CTA doesn't render.\n   */\n  ctaHref: PropTypes.string,\n\n  /**\n   * Set to true to hide the default bottom border.\n   */\n  hideBorder: PropTypes.bool\n};\nexport default LogoGrid;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/LogoGrid/LogoGrid.js"],"names":["ContentBlock","ddsSettings","HorizontalRule","Image","PropTypes","React","settings","stablePrefix","prefix","LogoGrid","_ref","heading","logosGroup","ctaCopy","ctaHref","hideBorder","cta","style","type","href","createElement","concat","className","map","placeholder","index","key","label","defaultSrc","imgSrc","classname","alt","altText","longDescription","propTypes","string","arrayOf","shape","isRequired","bool"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { HorizontalRule } from '../HorizontalRule';\nimport { Image } from '../Image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Logo Grid component.\n */\n\nvar LogoGrid = function LogoGrid(_ref) {\n  var heading = _ref.heading,\n      logosGroup = _ref.logosGroup,\n      ctaCopy = _ref.ctaCopy,\n      ctaHref = _ref.ctaHref,\n      hideBorder = _ref.hideBorder;\n\n  /**\n   * sets the class name based on theme type\n   *\n   * @param {string} theme theme type ( g10 | white/default )\n   * @returns {string} theme css class names\n   */\n  var cta = null;\n\n  if (ctaHref) {\n    cta = {\n      style: 'card',\n      type: 'local',\n      heading: ctaCopy,\n      cta: {\n        href: ctaHref\n      }\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--logo-grid\"),\n    className: \"\".concat(prefix, \"--logo-grid\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--logo-grid__container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--logo-grid__wrapper\")\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    cta: cta\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--logo-grid__row\")\n  }, logosGroup.map(function (placeholder, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--logo-grid__col\"),\n      key: index\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--logo-grid__logo\"),\n      key: placeholder.label\n    }, /*#__PURE__*/React.createElement(Image, {\n      defaultSrc: placeholder.imgSrc,\n      classname: \"\".concat(prefix, \"--logo-grid_img\"),\n      alt: placeholder.altText,\n      longDescription: placeholder.label\n    })));\n  }))))), !hideBorder && /*#__PURE__*/React.createElement(HorizontalRule, null));\n};\n\nLogoGrid.propTypes = {\n  /**\n   * Heading text.\n   */\n  heading: PropTypes.string,\n\n  /**\n   * An array of logo objects to be rendered as Image components surrounded by hypertext links:\n   *\n   * | Name     | Data Type | Description                                                |\n   * | -------- | --------- | ---------------------------------------------------------- |\n   * | `label`  | String    | Visible to screen readers, hidden from users.              |\n   * | `imgSrc` | String    | Image source for logo placeholder.                         |\n   * | `altText`| String    | Alternate text for logo placeholder.                       |\n   */\n  logosGroup: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    imgSrc: PropTypes.string,\n    altText: PropTypes.string\n  })).isRequired,\n\n  /**\n   * Optional copy for the CTA\n   */\n  ctaCopy: PropTypes.string,\n\n  /**\n   * Link address for the CTA. If omitted, CTA doesn't render.\n   */\n  ctaHref: PropTypes.string,\n\n  /**\n   * Set to true to hide the default bottom border.\n   */\n  hideBorder: PropTypes.bool\n};\nexport default LogoGrid;"]},"metadata":{},"sourceType":"module"}