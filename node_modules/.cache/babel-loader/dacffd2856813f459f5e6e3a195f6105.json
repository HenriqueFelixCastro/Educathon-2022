{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"defaultToggled\", \"disabled\", \"hideLabel\", \"id\", \"labelA\", \"labelB\", \"labelText\", \"onClick\", \"onToggle\", \"size\", \"toggled\"];\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useControllableState } from '../../../internal/useControllableState';\nimport { usePrefix } from '../../../internal/usePrefix';\nexport function Toggle(_ref) {\n  var className = _ref.className,\n      _ref$defaultToggled = _ref.defaultToggled,\n      defaultToggled = _ref$defaultToggled === void 0 ? false : _ref$defaultToggled,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      id = _ref.id,\n      _ref$labelA = _ref.labelA,\n      labelA = _ref$labelA === void 0 ? 'Off' : _ref$labelA,\n      _ref$labelB = _ref.labelB,\n      labelB = _ref$labelB === void 0 ? 'On' : _ref$labelB,\n      labelText = _ref.labelText,\n      onClick = _ref.onClick,\n      onToggle = _ref.onToggle,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size,\n      toggled = _ref.toggled,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useControllableState = useControllableState({\n    value: toggled,\n    onChange: onToggle,\n    defaultValue: defaultToggled\n  }),\n      _useControllableState2 = _slicedToArray(_useControllableState, 2),\n      checked = _useControllableState2[0],\n      setChecked = _useControllableState2[1];\n\n  function handleClick(e) {\n    setChecked(!checked);\n\n    if (onClick) {\n      onClick(e);\n    }\n  }\n\n  var isSm = size === 'sm';\n  var sideLabel = hideLabel ? labelText : checked ? labelB : labelA;\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--toggle\"), _defineProperty({}, \"\".concat(prefix, \"--toggle--disabled\"), disabled), className);\n  var labelTextClasses = classNames(\"\".concat(prefix, \"--toggle__label-text\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  var appearanceClasses = classNames(\"\".concat(prefix, \"--toggle__appearance\"), _defineProperty({}, \"\".concat(prefix, \"--toggle__appearance--sm\"), isSm));\n  var switchClasses = classNames(\"\".concat(prefix, \"--toggle__switch\"), _defineProperty({}, \"\".concat(prefix, \"--toggle__switch--checked\"), checked));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"button\", _extends({}, other, {\n    id: id,\n    className: \"\".concat(prefix, \"--toggle__button\"),\n    role: \"switch\",\n    type: \"button\",\n    \"aria-checked\": checked,\n    disabled: disabled,\n    onClick: handleClick\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--toggle__label\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelTextClasses\n  }, labelText), /*#__PURE__*/React.createElement(\"div\", {\n    className: appearanceClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: switchClasses\n  }, isSm && /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"\".concat(prefix, \"--toggle__check\"),\n    width: \"6px\",\n    height: \"5px\",\n    viewBox: \"0 0 6 5\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.2 2.7L5 0 6 1 2.2 5 0 2.7 1 1.5z\"\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--toggle__text\"),\n    \"aria-hidden\": \"true\"\n  }, sideLabel))));\n}\nToggle.propTypes = {\n  /**\n   * Specify a custom className to apply to the form-item node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the toggle should be on by default\n   */\n  defaultToggled: PropTypes.bool,\n\n  /**\n   * Whether this control should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide an id that unique represents the underlying `<button>`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify the label for the \"off\" position\n   */\n  labelA: PropTypes.node,\n\n  /**\n   * Specify the label for the \"on\" position\n   */\n  labelB: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Provide an event listener that is called when the control is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide an event listener that is called when the control is toggled\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * Specify the size of the Toggle. Currently only supports 'sm' or 'md' (default)\n   */\n  size: PropTypes.oneOf(['sm', 'md']),\n\n  /**\n   * Specify whether the control is toggled\n   */\n  toggled: PropTypes.bool\n};\nexport default Toggle;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Toggle/next/Toggle.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","React","PropTypes","classNames","useControllableState","usePrefix","Toggle","_ref","className","_ref$defaultToggled","defaultToggled","_ref$disabled","disabled","_ref$hideLabel","hideLabel","id","_ref$labelA","labelA","_ref$labelB","labelB","labelText","onClick","onToggle","_ref$size","size","toggled","other","prefix","_useControllableState","value","onChange","defaultValue","_useControllableState2","checked","setChecked","handleClick","e","isSm","sideLabel","wrapperClasses","concat","labelTextClasses","appearanceClasses","switchClasses","createElement","role","type","htmlFor","width","height","viewBox","d","propTypes","string","bool","isRequired","node","func","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"defaultToggled\", \"disabled\", \"hideLabel\", \"id\", \"labelA\", \"labelB\", \"labelText\", \"onClick\", \"onToggle\", \"size\", \"toggled\"];\n\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useControllableState } from '../../../internal/useControllableState';\nimport { usePrefix } from '../../../internal/usePrefix';\nexport function Toggle(_ref) {\n  var className = _ref.className,\n      _ref$defaultToggled = _ref.defaultToggled,\n      defaultToggled = _ref$defaultToggled === void 0 ? false : _ref$defaultToggled,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      id = _ref.id,\n      _ref$labelA = _ref.labelA,\n      labelA = _ref$labelA === void 0 ? 'Off' : _ref$labelA,\n      _ref$labelB = _ref.labelB,\n      labelB = _ref$labelB === void 0 ? 'On' : _ref$labelB,\n      labelText = _ref.labelText,\n      onClick = _ref.onClick,\n      onToggle = _ref.onToggle,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size,\n      toggled = _ref.toggled,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useControllableState = useControllableState({\n    value: toggled,\n    onChange: onToggle,\n    defaultValue: defaultToggled\n  }),\n      _useControllableState2 = _slicedToArray(_useControllableState, 2),\n      checked = _useControllableState2[0],\n      setChecked = _useControllableState2[1];\n\n  function handleClick(e) {\n    setChecked(!checked);\n\n    if (onClick) {\n      onClick(e);\n    }\n  }\n\n  var isSm = size === 'sm';\n  var sideLabel = hideLabel ? labelText : checked ? labelB : labelA;\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--toggle\"), _defineProperty({}, \"\".concat(prefix, \"--toggle--disabled\"), disabled), className);\n  var labelTextClasses = classNames(\"\".concat(prefix, \"--toggle__label-text\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  var appearanceClasses = classNames(\"\".concat(prefix, \"--toggle__appearance\"), _defineProperty({}, \"\".concat(prefix, \"--toggle__appearance--sm\"), isSm));\n  var switchClasses = classNames(\"\".concat(prefix, \"--toggle__switch\"), _defineProperty({}, \"\".concat(prefix, \"--toggle__switch--checked\"), checked));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"button\", _extends({}, other, {\n    id: id,\n    className: \"\".concat(prefix, \"--toggle__button\"),\n    role: \"switch\",\n    type: \"button\",\n    \"aria-checked\": checked,\n    disabled: disabled,\n    onClick: handleClick\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--toggle__label\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelTextClasses\n  }, labelText), /*#__PURE__*/React.createElement(\"div\", {\n    className: appearanceClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: switchClasses\n  }, isSm && /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"\".concat(prefix, \"--toggle__check\"),\n    width: \"6px\",\n    height: \"5px\",\n    viewBox: \"0 0 6 5\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.2 2.7L5 0 6 1 2.2 5 0 2.7 1 1.5z\"\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--toggle__text\"),\n    \"aria-hidden\": \"true\"\n  }, sideLabel))));\n}\nToggle.propTypes = {\n  /**\n   * Specify a custom className to apply to the form-item node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the toggle should be on by default\n   */\n  defaultToggled: PropTypes.bool,\n\n  /**\n   * Whether this control should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide an id that unique represents the underlying `<button>`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify the label for the \"off\" position\n   */\n  labelA: PropTypes.node,\n\n  /**\n   * Specify the label for the \"on\" position\n   */\n  labelB: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Provide an event listener that is called when the control is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide an event listener that is called when the control is toggled\n   */\n  onToggle: PropTypes.func,\n\n  /**\n   * Specify the size of the Toggle. Currently only supports 'sm' or 'md' (default)\n   */\n  size: PropTypes.oneOf(['sm', 'md']),\n\n  /**\n   * Specify whether the control is toggled\n   */\n  toggled: PropTypes.bool\n};\nexport default Toggle;"]},"metadata":{},"sourceType":"module"}