{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * Provides a grid context for communication the grid \"mode\" (flexbox or\n * css-grid) along with subgrid information.\n */\n\nvar GridSettingsContext = /*#__PURE__*/React.createContext({\n  mode: 'flexbox',\n  subgrid: false\n});\nexport function GridSettings(_ref) {\n  var children = _ref.children,\n      mode = _ref.mode,\n      _ref$subgrid = _ref.subgrid,\n      subgrid = _ref$subgrid === void 0 ? false : _ref$subgrid;\n  var value = React.useMemo(function () {\n    return {\n      mode: mode,\n      subgrid: subgrid\n    };\n  }, [mode, subgrid]);\n  return /*#__PURE__*/React.createElement(GridSettingsContext.Provider, {\n    value: value\n  }, children);\n}\nGridSettings.propTypes = {\n  /**\n   * Pass in components which will be rendered within the `GridSettings`\n   * component\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the grid mode for the GridContext\n   */\n  mode: PropTypes.oneOf(['flexbox', 'css-grid']).isRequired,\n\n  /**\n   * Specify whether subgrid should be enabled\n   */\n  subgrid: PropTypes.bool\n};\n/**\n * Helper function for accessing the GridContext value\n */\n\nexport function useGridSettings() {\n  return React.useContext(GridSettingsContext);\n}","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Grid/GridContext.js"],"names":["PropTypes","React","GridSettingsContext","createContext","mode","subgrid","GridSettings","_ref","children","_ref$subgrid","value","useMemo","createElement","Provider","propTypes","node","oneOf","isRequired","bool","useGridSettings","useContext"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,aAAaD,KAAK,CAACE,aAAN,CAAoB;AACzDC,EAAAA,IAAI,EAAE,SADmD;AAEzDC,EAAAA,OAAO,EAAE;AAFgD,CAApB,CAAvC;AAIA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIJ,IAAI,GAAGG,IAAI,CAACH,IADhB;AAAA,MAEIK,YAAY,GAAGF,IAAI,CAACF,OAFxB;AAAA,MAGIA,OAAO,GAAGI,YAAY,KAAK,KAAK,CAAtB,GAA0B,KAA1B,GAAkCA,YAHhD;AAIA,MAAIC,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAc,YAAY;AACpC,WAAO;AACLP,MAAAA,IAAI,EAAEA,IADD;AAELC,MAAAA,OAAO,EAAEA;AAFJ,KAAP;AAID,GALW,EAKT,CAACD,IAAD,EAAOC,OAAP,CALS,CAAZ;AAMA,SAAO,aAAaJ,KAAK,CAACW,aAAN,CAAoBV,mBAAmB,CAACW,QAAxC,EAAkD;AACpEH,IAAAA,KAAK,EAAEA;AAD6D,GAAlD,EAEjBF,QAFiB,CAApB;AAGD;AACDF,YAAY,CAACQ,SAAb,GAAyB;AACvB;AACF;AACA;AACA;AACEN,EAAAA,QAAQ,EAAER,SAAS,CAACe,IALG;;AAOvB;AACF;AACA;AACEX,EAAAA,IAAI,EAAEJ,SAAS,CAACgB,KAAV,CAAgB,CAAC,SAAD,EAAY,UAAZ,CAAhB,EAAyCC,UAVxB;;AAYvB;AACF;AACA;AACEZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB;AAfI,CAAzB;AAiBA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAOlB,KAAK,CAACmB,UAAN,CAAiBlB,mBAAjB,CAAP;AACD","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * Provides a grid context for communication the grid \"mode\" (flexbox or\n * css-grid) along with subgrid information.\n */\n\nvar GridSettingsContext = /*#__PURE__*/React.createContext({\n  mode: 'flexbox',\n  subgrid: false\n});\nexport function GridSettings(_ref) {\n  var children = _ref.children,\n      mode = _ref.mode,\n      _ref$subgrid = _ref.subgrid,\n      subgrid = _ref$subgrid === void 0 ? false : _ref$subgrid;\n  var value = React.useMemo(function () {\n    return {\n      mode: mode,\n      subgrid: subgrid\n    };\n  }, [mode, subgrid]);\n  return /*#__PURE__*/React.createElement(GridSettingsContext.Provider, {\n    value: value\n  }, children);\n}\nGridSettings.propTypes = {\n  /**\n   * Pass in components which will be rendered within the `GridSettings`\n   * component\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the grid mode for the GridContext\n   */\n  mode: PropTypes.oneOf(['flexbox', 'css-grid']).isRequired,\n\n  /**\n   * Specify whether subgrid should be enabled\n   */\n  subgrid: PropTypes.bool\n};\n/**\n * Helper function for accessing the GridContext value\n */\n\nexport function useGridSettings() {\n  return React.useContext(GridSettingsContext);\n}"]},"metadata":{},"sourceType":"module"}