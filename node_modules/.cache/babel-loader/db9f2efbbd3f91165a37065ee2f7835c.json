{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"closeModal\", \"danger\", \"inputref\", \"onRequestClose\", \"onRequestSubmit\", \"primaryButtonDisabled\", \"primaryButtonText\", \"primaryClassName\", \"secondaryButtonText\", \"secondaryButtons\", \"secondaryClassName\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../Button';\nimport ButtonSet from '../../ButtonSet';\nimport cx from 'classnames';\nimport { usePrefix } from '../../../internal/usePrefix';\n\nfunction SecondaryButtonSet(_ref) {\n  var secondaryButtons = _ref.secondaryButtons,\n      secondaryButtonText = _ref.secondaryButtonText,\n      secondaryClassName = _ref.secondaryClassName,\n      closeModal = _ref.closeModal,\n      onRequestClose = _ref.onRequestClose;\n\n  function handleRequestClose(evt) {\n    closeModal(evt);\n    onRequestClose(evt);\n  }\n\n  if (Array.isArray(secondaryButtons) && secondaryButtons.length <= 2) {\n    return secondaryButtons.map(function (_ref2, i) {\n      var buttonText = _ref2.buttonText,\n          onButtonClick = _ref2.onClick;\n      return /*#__PURE__*/React.createElement(Button, {\n        key: \"\".concat(buttonText, \"-\").concat(i),\n        className: secondaryClassName,\n        kind: \"secondary\",\n        onClick: onButtonClick || handleRequestClose\n      }, buttonText);\n    });\n  }\n\n  if (secondaryButtonText) {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: secondaryClassName,\n      onClick: handleRequestClose,\n      kind: \"secondary\"\n    }, secondaryButtonText);\n  }\n\n  return null;\n}\n\nSecondaryButtonSet.propTypes = {\n  closeModal: PropTypes.func,\n  onRequestClose: PropTypes.func,\n  secondaryButtonText: PropTypes.string,\n  secondaryButtons: function secondaryButtons(props, propName, componentName) {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(\"\".concat(propName, \" needs to be an array of two button config objects\"));\n      }\n\n      var shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(function (secondaryButton) {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n\n    return null;\n  },\n  secondaryClassName: PropTypes.string\n};\nexport var ModalFooter = /*#__PURE__*/React.forwardRef(function ModalFooter(_ref3, ref) {\n  var _cx;\n\n  var children = _ref3.children,\n      customClassName = _ref3.className,\n      closeModal = _ref3.closeModal,\n      danger = _ref3.danger,\n      inputref = _ref3.inputref,\n      onRequestClose = _ref3.onRequestClose,\n      onRequestSubmit = _ref3.onRequestSubmit,\n      primaryButtonDisabled = _ref3.primaryButtonDisabled,\n      primaryButtonText = _ref3.primaryButtonText,\n      primaryClassName = _ref3.primaryClassName,\n      secondaryButtonText = _ref3.secondaryButtonText,\n      secondaryButtons = _ref3.secondaryButtons,\n      secondaryClassName = _ref3.secondaryClassName,\n      rest = _objectWithoutProperties(_ref3, _excluded);\n\n  var prefix = usePrefix();\n  var footerClass = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--modal-footer\"), true), _defineProperty(_cx, customClassName, customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--modal-footer--three-button\"), Array.isArray(secondaryButtons) && secondaryButtons.length === 2), _cx));\n  var secondaryButtonProps = {\n    closeModal: closeModal,\n    secondaryButtons: secondaryButtons,\n    secondaryButtonText: secondaryButtonText,\n    secondaryClassName: secondaryClassName,\n    onRequestClose: onRequestClose\n  };\n  return /*#__PURE__*/React.createElement(ButtonSet, _extends({\n    className: footerClass\n  }, rest, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(SecondaryButtonSet, secondaryButtonProps), primaryButtonText && /*#__PURE__*/React.createElement(Button, {\n    onClick: onRequestSubmit,\n    className: primaryClassName,\n    disabled: primaryButtonDisabled,\n    kind: danger ? 'danger' : 'primary',\n    ref: inputref\n  }, primaryButtonText), children);\n});\nModalFooter.propTypes = {\n  /**\n   * Pass in content that will be rendered in the Modal Footer\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the Modal Footer container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify an optional function that is called whenever the modal is closed\n   */\n  closeModal: PropTypes.func,\n\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n\n  /**\n   * The `ref` callback for the primary button.\n   */\n  inputref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * closed\n   */\n  onRequestClose: PropTypes.func,\n\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * submitted\n   */\n  onRequestSubmit: PropTypes.func,\n\n  /**\n   * Specify whether the primary button should be disabled\n   */\n  primaryButtonDisabled: PropTypes.bool,\n\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.string,\n\n  /**\n   * Specify a custom className to be applied to the primary button\n   */\n  primaryClassName: PropTypes.string,\n\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.string,\n\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: function secondaryButtons(props, propName, componentName) {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(\"\".concat(propName, \" needs to be an array of two button config objects\"));\n      }\n\n      var shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(function (secondaryButton) {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n\n    return null;\n  },\n\n  /**\n   * Specify a custom className to be applied to the secondary button\n   */\n  secondaryClassName: PropTypes.string\n};\nModalFooter.defaultProps = {\n  onRequestClose: function onRequestClose() {},\n  onRequestSubmit: function onRequestSubmit() {},\n  closeModal: function closeModal() {}\n};","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/ComposedModal/next/ModalFooter.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","React","PropTypes","Button","ButtonSet","cx","usePrefix","SecondaryButtonSet","_ref","secondaryButtons","secondaryButtonText","secondaryClassName","closeModal","onRequestClose","handleRequestClose","evt","Array","isArray","length","map","_ref2","i","buttonText","onButtonClick","onClick","createElement","key","concat","className","kind","propTypes","func","string","props","propName","componentName","Error","shape","node","forEach","secondaryButton","checkPropTypes","ModalFooter","forwardRef","_ref3","ref","_cx","children","customClassName","danger","inputref","onRequestSubmit","primaryButtonDisabled","primaryButtonText","primaryClassName","rest","prefix","footerClass","secondaryButtonProps","disabled","bool","oneOfType","current","any","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"closeModal\", \"danger\", \"inputref\", \"onRequestClose\", \"onRequestSubmit\", \"primaryButtonDisabled\", \"primaryButtonText\", \"primaryClassName\", \"secondaryButtonText\", \"secondaryButtons\", \"secondaryClassName\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../Button';\nimport ButtonSet from '../../ButtonSet';\nimport cx from 'classnames';\nimport { usePrefix } from '../../../internal/usePrefix';\n\nfunction SecondaryButtonSet(_ref) {\n  var secondaryButtons = _ref.secondaryButtons,\n      secondaryButtonText = _ref.secondaryButtonText,\n      secondaryClassName = _ref.secondaryClassName,\n      closeModal = _ref.closeModal,\n      onRequestClose = _ref.onRequestClose;\n\n  function handleRequestClose(evt) {\n    closeModal(evt);\n    onRequestClose(evt);\n  }\n\n  if (Array.isArray(secondaryButtons) && secondaryButtons.length <= 2) {\n    return secondaryButtons.map(function (_ref2, i) {\n      var buttonText = _ref2.buttonText,\n          onButtonClick = _ref2.onClick;\n      return /*#__PURE__*/React.createElement(Button, {\n        key: \"\".concat(buttonText, \"-\").concat(i),\n        className: secondaryClassName,\n        kind: \"secondary\",\n        onClick: onButtonClick || handleRequestClose\n      }, buttonText);\n    });\n  }\n\n  if (secondaryButtonText) {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: secondaryClassName,\n      onClick: handleRequestClose,\n      kind: \"secondary\"\n    }, secondaryButtonText);\n  }\n\n  return null;\n}\n\nSecondaryButtonSet.propTypes = {\n  closeModal: PropTypes.func,\n  onRequestClose: PropTypes.func,\n  secondaryButtonText: PropTypes.string,\n  secondaryButtons: function secondaryButtons(props, propName, componentName) {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(\"\".concat(propName, \" needs to be an array of two button config objects\"));\n      }\n\n      var shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(function (secondaryButton) {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n\n    return null;\n  },\n  secondaryClassName: PropTypes.string\n};\nexport var ModalFooter = /*#__PURE__*/React.forwardRef(function ModalFooter(_ref3, ref) {\n  var _cx;\n\n  var children = _ref3.children,\n      customClassName = _ref3.className,\n      closeModal = _ref3.closeModal,\n      danger = _ref3.danger,\n      inputref = _ref3.inputref,\n      onRequestClose = _ref3.onRequestClose,\n      onRequestSubmit = _ref3.onRequestSubmit,\n      primaryButtonDisabled = _ref3.primaryButtonDisabled,\n      primaryButtonText = _ref3.primaryButtonText,\n      primaryClassName = _ref3.primaryClassName,\n      secondaryButtonText = _ref3.secondaryButtonText,\n      secondaryButtons = _ref3.secondaryButtons,\n      secondaryClassName = _ref3.secondaryClassName,\n      rest = _objectWithoutProperties(_ref3, _excluded);\n\n  var prefix = usePrefix();\n  var footerClass = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--modal-footer\"), true), _defineProperty(_cx, customClassName, customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--modal-footer--three-button\"), Array.isArray(secondaryButtons) && secondaryButtons.length === 2), _cx));\n  var secondaryButtonProps = {\n    closeModal: closeModal,\n    secondaryButtons: secondaryButtons,\n    secondaryButtonText: secondaryButtonText,\n    secondaryClassName: secondaryClassName,\n    onRequestClose: onRequestClose\n  };\n  return /*#__PURE__*/React.createElement(ButtonSet, _extends({\n    className: footerClass\n  }, rest, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(SecondaryButtonSet, secondaryButtonProps), primaryButtonText && /*#__PURE__*/React.createElement(Button, {\n    onClick: onRequestSubmit,\n    className: primaryClassName,\n    disabled: primaryButtonDisabled,\n    kind: danger ? 'danger' : 'primary',\n    ref: inputref\n  }, primaryButtonText), children);\n});\nModalFooter.propTypes = {\n  /**\n   * Pass in content that will be rendered in the Modal Footer\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the Modal Footer container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify an optional function that is called whenever the modal is closed\n   */\n  closeModal: PropTypes.func,\n\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n\n  /**\n   * The `ref` callback for the primary button.\n   */\n  inputref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * closed\n   */\n  onRequestClose: PropTypes.func,\n\n  /**\n   * Specify an optional function for when the modal is requesting to be\n   * submitted\n   */\n  onRequestSubmit: PropTypes.func,\n\n  /**\n   * Specify whether the primary button should be disabled\n   */\n  primaryButtonDisabled: PropTypes.bool,\n\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.string,\n\n  /**\n   * Specify a custom className to be applied to the primary button\n   */\n  primaryClassName: PropTypes.string,\n\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.string,\n\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: function secondaryButtons(props, propName, componentName) {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(\"\".concat(propName, \" needs to be an array of two button config objects\"));\n      }\n\n      var shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(function (secondaryButton) {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n\n    return null;\n  },\n\n  /**\n   * Specify a custom className to be applied to the secondary button\n   */\n  secondaryClassName: PropTypes.string\n};\nModalFooter.defaultProps = {\n  onRequestClose: function onRequestClose() {},\n  onRequestSubmit: function onRequestSubmit() {},\n  closeModal: function closeModal() {}\n};"]},"metadata":{},"sourceType":"module"}