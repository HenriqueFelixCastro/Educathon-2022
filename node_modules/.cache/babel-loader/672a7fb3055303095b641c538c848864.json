{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport axios from 'axios';\nimport geolocation from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/geolocation/geolocation';\nimport ipcinfoCookie from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/ipcinfoCookie/ipcinfoCookie';\nimport root from 'window-or-global';\n/**\n * @constant {string | string} Host for the Locale API call\n * @private\n */\n\nvar _host = process && (process.env.REACT_APP_TRANSLATION_HOST || process.env.TRANSLATION_HOST) || 'https://1.www.s81c.com';\n/**\n * Sets the default location if nothing is returned\n *\n * @type {object}\n * @private\n */\n\n\nvar _localeDefault = {\n  lc: 'en',\n  cc: 'us'\n};\n/**\n * Default display name for lang combination\n *\n * @type {string}\n * @private\n */\n\nvar _localeNameDefault = 'United States â€” English';\n/**\n * Locale API endpoint\n *\n * @type {string}\n * @private\n */\n\nvar _endpoint = \"\".concat(_host, \"/common/js/dynamicnav/www/countrylist/jsononly\");\n/**\n * Configuration for axios\n *\n * @type {{headers: {'Content-Type': string}}}\n * @private\n */\n\n\nvar _axiosConfig = {\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n};\n/**\n * Session Storage key for country list\n *\n * @type {string}\n * @private\n */\n\nvar _sessionListKey = 'dds-countrylist';\n/**\n * Two hours in milliseconds to compare session timestamp.\n *\n * @type {number}\n * @private\n */\n\nvar _twoHours = 60 * 60 * 2000;\n/**\n * Use the <html> lang attr to determine a return locale object\n *\n * @type {object}\n * @private\n */\n\n\nvar _getLocaleByLangAttr = function _getLocaleByLangAttr() {\n  var _root$document, _root$document$docume;\n\n  if ((_root$document = root.document) === null || _root$document === void 0 ? void 0 : (_root$document$docume = _root$document.documentElement) === null || _root$document$docume === void 0 ? void 0 : _root$document$docume.lang) {\n    var lang = root.document.documentElement.lang.toLowerCase();\n\n    if (lang.indexOf('-') === -1) {\n      return {\n        lc: lang\n      };\n    } else {\n      var codes = lang.split('-');\n      return {\n        cc: codes[1],\n        lc: codes[0]\n      };\n    }\n  } else {\n    return _localeDefault;\n  }\n};\n/**\n * The cache for in-flight or resolved requests for the country list, keyed by the initiating locale.\n *\n * @type {object}\n * @private\n */\n\n\nvar _requestsList = {};\n/**\n * Return a locale object based on the DDO API, or \"false\"\n * so the consumer can decide what to do next\n *\n * @type {(object | boolean)}\n * @private\n */\n\nfunction _getLocaleFromDDO() {\n  var _ddoLocal$page, _ddoLocal$page$pageIn;\n\n  var ddoLocal = Object.assign({}, root.digitalData || {});\n\n  if ((_ddoLocal$page = ddoLocal.page) === null || _ddoLocal$page === void 0 ? void 0 : (_ddoLocal$page$pageIn = _ddoLocal$page.pageInfo) === null || _ddoLocal$page$pageIn === void 0 ? void 0 : _ddoLocal$page$pageIn.language) {\n    var _ddoLocal$page2, _ddoLocal$page2$pageI, _ddoLocal$page3, _ddoLocal$page3$pageI, _ddoLocal$page3$pageI2;\n\n    var lang = {}; // if DDO language contains both lc & cc (ie. en-US)\n\n    if (((_ddoLocal$page2 = ddoLocal.page) === null || _ddoLocal$page2 === void 0 ? void 0 : (_ddoLocal$page2$pageI = _ddoLocal$page2.pageInfo) === null || _ddoLocal$page2$pageI === void 0 ? void 0 : _ddoLocal$page2$pageI.language.includes('-')) && ((_ddoLocal$page3 = ddoLocal.page) === null || _ddoLocal$page3 === void 0 ? void 0 : (_ddoLocal$page3$pageI = _ddoLocal$page3.pageInfo) === null || _ddoLocal$page3$pageI === void 0 ? void 0 : (_ddoLocal$page3$pageI2 = _ddoLocal$page3$pageI.ibm) === null || _ddoLocal$page3$pageI2 === void 0 ? void 0 : _ddoLocal$page3$pageI2.country)) {\n      // Set proper LC for us to use.\n      lang.lc = ddoLocal.page.pageInfo.language.substring(0, 2).toLowerCase();\n      lang.cc = ddoLocal.page.pageInfo.ibm.country.toLowerCase().trim(); // If there are multiple countries use just the first one for the CC value\n\n      if (lang.cc.indexOf(',') > -1) lang.cc = lang.cc.substring(0, lang.cc.indexOf(',')).trim(); // Gb will be uk elsewhere\n\n      if (lang.cc === 'gb') {\n        lang.cc = 'uk';\n      } // Map worldwide (ZZ) pages to US\n\n\n      if (lang.cc === 'zz') {\n        lang.cc = 'us';\n      }\n    } else {\n      // set lc with just the language code\n      lang.lc = ddoLocal.page.pageInfo.language.substring(0, 2).toLowerCase();\n    }\n\n    return lang;\n  }\n\n  return false;\n}\n/**\n * Locale API class with method of fetching user's locale for\n * ibm.com\n */\n\n\nvar LocaleAPI = /*#__PURE__*/function () {\n  function LocaleAPI() {\n    _classCallCheck(this, LocaleAPI);\n  }\n\n  _createClass(LocaleAPI, null, [{\n    key: \"clearCache\",\n\n    /**\n     * Clears the cache.\n     */\n    value: function clearCache() {\n      if (typeof sessionStorage !== 'undefined') {\n        Object.keys(_requestsList).forEach(function (key) {\n          return delete _requestsList[key];\n        });\n\n        for (var i = 0; i < sessionStorage.length; ++i) {\n          var key = sessionStorage.key(i);\n\n          if (key.indexOf(_sessionListKey) === 0) {\n            sessionStorage.removeItem(key);\n          }\n        }\n      }\n    }\n    /**\n     * Gets the user's locale\n     *\n     * Grab the locale from the `lang` attribute from html, else\n     * check if ipcinfo cookie exists (ipcinfoCookie util)\n     * if not, retrieve the user's locale through geolocation util + gets user's\n     * browser language preference then set the cookie\n     *\n     * @returns {object} object with lc and cc\n     *\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getLocale() {\n     *   const locale = await LocaleAPI.getLocale();\n     *   return locale;\n     * }\n     */\n\n  }, {\n    key: \"getLocale\",\n    value: function () {\n      var _getLocale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var cookie, lang, cc, _lang, lc, list, verifiedCodes;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cookie = ipcinfoCookie.get();\n                _context.next = 3;\n                return this.getLang();\n\n              case 3:\n                lang = _context.sent;\n\n                if (!lang) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", lang);\n\n              case 8:\n                if (!(cookie && cookie.cc && cookie.lc)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return this.getList(cookie);\n\n              case 11:\n                return _context.abrupt(\"return\", cookie);\n\n              case 14:\n                _context.next = 16;\n                return geolocation();\n\n              case 16:\n                cc = _context.sent;\n                /**\n                 * get language preference from browser\n                 * can return in either 'en-US' format or 'en' so will need to extract language only\n                 */\n\n                _lang = root.navigator.language;\n                lc = _lang.split('-')[0];\n\n                if (!(cc && lc)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 22;\n                return this.getList({\n                  cc: cc,\n                  lc: lc\n                });\n\n              case 22:\n                list = _context.sent;\n                verifiedCodes = this.verifyLocale(cc, lc, list); // set the ipcInfo cookie\n\n                ipcinfoCookie.set(verifiedCodes);\n                return _context.abrupt(\"return\", verifiedCodes);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getLocale() {\n        return _getLocale.apply(this, arguments);\n      }\n\n      return getLocale;\n    }()\n    /**\n     * Checks for DDO object to return the correct cc and lc\n     * Otherwise gets those values from the <html> lang attribute\n     *\n     * @returns {object} locale object\n     *\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * function async getLocale() {\n     *    const locale = await LocaleAPI.getLang();\n     * }\n     */\n\n  }, {\n    key: \"getLang\",\n    value: function getLang() {\n      return new Promise(function (resolve) {\n        var getLocaleFromDDO = _getLocaleFromDDO();\n\n        if (getLocaleFromDDO) {\n          resolve(getLocaleFromDDO);\n        } else {\n          resolve(_getLocaleByLangAttr());\n        }\n      });\n    }\n    /**\n     * This fetches the language display name based on language/locale combo\n     *\n     * @param {object} langCode lang code with cc and lc\n     *\n     * @returns {Promise<string>} Display name of locale/language\n     */\n\n  }, {\n    key: \"getLangDisplay\",\n    value: function () {\n      var _getLangDisplay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(langCode) {\n        var lang, list, countries, location;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!langCode) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.t0 = langCode;\n                _context2.next = 7;\n                break;\n\n              case 4:\n                _context2.next = 6;\n                return this.getLang();\n\n              case 6:\n                _context2.t0 = _context2.sent;\n\n              case 7:\n                lang = _context2.t0;\n                _context2.next = 10;\n                return this.getList(lang);\n\n              case 10:\n                list = _context2.sent; // combines the countryList arrays\n\n                countries = [];\n                list.regionList.forEach(function (region) {\n                  countries = countries.concat(region.countryList);\n                }); // get match for countries with multiple languages\n\n                location = countries.filter(function (country) {\n                  var htmlLang = country.locale.findIndex(function (loc) {\n                    return loc[0] === \"\".concat(lang.lc, \"-\").concat(lang.cc);\n                  });\n\n                  if (htmlLang !== -1) {\n                    var _country$locale;\n\n                    var localeMatch = country.locale.filter(function (l) {\n                      return l.includes(\"\".concat(lang.lc, \"-\").concat(lang.cc));\n                    });\n\n                    (_country$locale = country.locale).splice.apply(_country$locale, [0, country.locale.length].concat(_toConsumableArray(localeMatch)));\n\n                    return country;\n                  }\n                });\n\n                if (!location.length) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", \"\".concat(location[0].name, \" \\u2014 \").concat(location[0].locale[0][1]));\n\n              case 18:\n                return _context2.abrupt(\"return\", _localeNameDefault);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getLangDisplay(_x) {\n        return _getLangDisplay.apply(this, arguments);\n      }\n\n      return getLangDisplay;\n    }()\n    /**\n     * Get the country list of all supported countries and their languages\n     * if it is not already stored in session storage\n     *\n     * @param {object} params params object\n     * @param {string} params.cc country code\n     * @param {string} params.lc language code\n     *\n     * @returns {Promise<any>} promise object\n     *\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * function async getLocale() {\n     *    const list = await LocaleAPI.getList({ cc: 'us', lc: 'en' });\n     *    return list;\n     * }\n     */\n\n  }, {\n    key: \"getList\",\n    value: function () {\n      var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var _this = this;\n\n        var cc, lc;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                cc = _ref.cc, lc = _ref.lc;\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this.fetchList(cc, lc, resolve, reject);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getList(_x2) {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }()\n    /**\n     * Fetches the list data based on cc/lc combination\n     *\n     * @param {string} cc country code\n     * @param {string} lc language code\n     * @param {Function} resolve resolves the Promise\n     * @param {Function} reject rejects the promise\n     */\n\n  }, {\n    key: \"fetchList\",\n    value: function fetchList(cc, lc, resolve, reject) {\n      var _this2 = this;\n\n      var key = cc !== 'undefined' ? \"\".concat(lc, \"-\").concat(cc) : \"\".concat(lc);\n      var itemKey = \"\".concat(_sessionListKey, \"-\").concat(key);\n      var sessionList = this.getSessionCache(itemKey);\n\n      if (sessionList) {\n        resolve(sessionList);\n      } else {\n        if (!_requestsList[key]) {\n          var url = \"\".concat(_endpoint, \"/\").concat(cc !== 'undefined' ? \"\".concat(cc).concat(lc) : \"\".concat(lc), \"-utf8.json\");\n          _requestsList[key] = axios.get(url, _axiosConfig).then(function (response) {\n            var data = response.data;\n            data['timestamp'] = Date.now();\n            sessionStorage.setItem(\"\".concat(_sessionListKey, \"-\").concat(key), JSON.stringify(data));\n            return data;\n          });\n        }\n\n        _requestsList[key].then(resolve, function (error) {\n          if (cc === _localeDefault.cc && lc === _localeDefault.lc) {\n            reject(error);\n          } else {\n            _this2.fetchList(_localeDefault.cc, _localeDefault.lc, resolve, reject);\n          }\n        });\n      }\n    }\n    /**\n     * Verify that the cc and lc combo is in the list of\n     * supported cc-lc combos\n     *\n     * @param {string} cc country code\n     * @param {string} lc language code\n     * @param {object} list country list\n     *\n     * @returns {object} object with lc and cc\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getLocale() {\n     *   const locale = await LocaleAPI.verifyLocale(cc, lc, data);\n     *   return locale;\n     * }\n     */\n\n  }, {\n    key: \"verifyLocale\",\n    value: function verifyLocale(cc, lc, list) {\n      var priorityLC;\n      var locale;\n      var language = list && list.regionList.forEach(function (region) {\n        return region.countryList.forEach(function (country) {\n          var code = country.locale[0][0].split('-');\n          var countryCode = code[1];\n          var languageCode = code[0];\n\n          if (countryCode === cc && languageCode === lc) {\n            locale = {\n              cc: cc,\n              lc: lc\n            };\n          } // save the priority language associated with the user's country code\n          else if (countryCode === cc && !priorityLC) {\n            priorityLC = languageCode;\n          }\n        });\n      });\n\n      if (!language && priorityLC) {\n        locale = {\n          cc: cc,\n          lc: priorityLC\n        };\n      }\n\n      return locale;\n    }\n    /**\n     * Retrieves session cache and checks if cache needs to be refreshed\n     *\n     * @param   {string} key session storage key\n     * @returns {object} session storage object\n     */\n\n  }, {\n    key: \"getSessionCache\",\n    value: function getSessionCache(key) {\n      var session = typeof sessionStorage === 'undefined' ? undefined : JSON.parse(sessionStorage.getItem(key));\n\n      if (!session || !session.timestamp) {\n        return;\n      }\n\n      var currentTime = Date.now(),\n          timeDiff = currentTime - session.timestamp;\n\n      if (timeDiff > _twoHours) {\n        sessionStorage.removeItem(key);\n        return;\n      }\n\n      return session;\n    }\n  }]);\n\n  return LocaleAPI;\n}();\n\nexport default LocaleAPI;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/internal/vendor/@carbon/ibmdotcom-services/services/Locale/Locale.js"],"names":["_toConsumableArray","_asyncToGenerator","_classCallCheck","_createClass","_regeneratorRuntime","axios","geolocation","ipcinfoCookie","root","_host","process","env","REACT_APP_TRANSLATION_HOST","TRANSLATION_HOST","_localeDefault","lc","cc","_localeNameDefault","_endpoint","concat","_axiosConfig","headers","_sessionListKey","_twoHours","_getLocaleByLangAttr","_root$document","_root$document$docume","document","documentElement","lang","toLowerCase","indexOf","codes","split","_requestsList","_getLocaleFromDDO","_ddoLocal$page","_ddoLocal$page$pageIn","ddoLocal","Object","assign","digitalData","page","pageInfo","language","_ddoLocal$page2","_ddoLocal$page2$pageI","_ddoLocal$page3","_ddoLocal$page3$pageI","_ddoLocal$page3$pageI2","includes","ibm","country","substring","trim","LocaleAPI","key","value","clearCache","sessionStorage","keys","forEach","i","length","removeItem","_getLocale","mark","_callee","cookie","_lang","list","verifiedCodes","wrap","_callee$","_context","prev","next","get","getLang","sent","abrupt","getList","navigator","verifyLocale","set","stop","getLocale","apply","arguments","Promise","resolve","getLocaleFromDDO","_getLangDisplay","_callee2","langCode","countries","location","_callee2$","_context2","t0","regionList","region","countryList","filter","htmlLang","locale","findIndex","loc","_country$locale","localeMatch","l","splice","name","getLangDisplay","_x","_getList","_callee3","_ref","_this","_callee3$","_context3","reject","fetchList","_x2","_this2","itemKey","sessionList","getSessionCache","url","then","response","data","Date","now","setItem","JSON","stringify","error","priorityLC","code","countryCode","languageCode","session","undefined","parse","getItem","timestamp","currentTime","timeDiff"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport axios from 'axios';\nimport geolocation from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/geolocation/geolocation';\nimport ipcinfoCookie from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/ipcinfoCookie/ipcinfoCookie';\nimport root from 'window-or-global';\n/**\n * @constant {string | string} Host for the Locale API call\n * @private\n */\n\nvar _host = process && (process.env.REACT_APP_TRANSLATION_HOST || process.env.TRANSLATION_HOST) || 'https://1.www.s81c.com';\n/**\n * Sets the default location if nothing is returned\n *\n * @type {object}\n * @private\n */\n\n\nvar _localeDefault = {\n  lc: 'en',\n  cc: 'us'\n};\n/**\n * Default display name for lang combination\n *\n * @type {string}\n * @private\n */\n\nvar _localeNameDefault = 'United States â€” English';\n/**\n * Locale API endpoint\n *\n * @type {string}\n * @private\n */\n\nvar _endpoint = \"\".concat(_host, \"/common/js/dynamicnav/www/countrylist/jsononly\");\n/**\n * Configuration for axios\n *\n * @type {{headers: {'Content-Type': string}}}\n * @private\n */\n\n\nvar _axiosConfig = {\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n};\n/**\n * Session Storage key for country list\n *\n * @type {string}\n * @private\n */\n\nvar _sessionListKey = 'dds-countrylist';\n/**\n * Two hours in milliseconds to compare session timestamp.\n *\n * @type {number}\n * @private\n */\n\nvar _twoHours = 60 * 60 * 2000;\n/**\n * Use the <html> lang attr to determine a return locale object\n *\n * @type {object}\n * @private\n */\n\n\nvar _getLocaleByLangAttr = function _getLocaleByLangAttr() {\n  var _root$document, _root$document$docume;\n\n  if ((_root$document = root.document) === null || _root$document === void 0 ? void 0 : (_root$document$docume = _root$document.documentElement) === null || _root$document$docume === void 0 ? void 0 : _root$document$docume.lang) {\n    var lang = root.document.documentElement.lang.toLowerCase();\n\n    if (lang.indexOf('-') === -1) {\n      return {\n        lc: lang\n      };\n    } else {\n      var codes = lang.split('-');\n      return {\n        cc: codes[1],\n        lc: codes[0]\n      };\n    }\n  } else {\n    return _localeDefault;\n  }\n};\n/**\n * The cache for in-flight or resolved requests for the country list, keyed by the initiating locale.\n *\n * @type {object}\n * @private\n */\n\n\nvar _requestsList = {};\n/**\n * Return a locale object based on the DDO API, or \"false\"\n * so the consumer can decide what to do next\n *\n * @type {(object | boolean)}\n * @private\n */\n\nfunction _getLocaleFromDDO() {\n  var _ddoLocal$page, _ddoLocal$page$pageIn;\n\n  var ddoLocal = Object.assign({}, root.digitalData || {});\n\n  if ((_ddoLocal$page = ddoLocal.page) === null || _ddoLocal$page === void 0 ? void 0 : (_ddoLocal$page$pageIn = _ddoLocal$page.pageInfo) === null || _ddoLocal$page$pageIn === void 0 ? void 0 : _ddoLocal$page$pageIn.language) {\n    var _ddoLocal$page2, _ddoLocal$page2$pageI, _ddoLocal$page3, _ddoLocal$page3$pageI, _ddoLocal$page3$pageI2;\n\n    var lang = {}; // if DDO language contains both lc & cc (ie. en-US)\n\n    if (((_ddoLocal$page2 = ddoLocal.page) === null || _ddoLocal$page2 === void 0 ? void 0 : (_ddoLocal$page2$pageI = _ddoLocal$page2.pageInfo) === null || _ddoLocal$page2$pageI === void 0 ? void 0 : _ddoLocal$page2$pageI.language.includes('-')) && ((_ddoLocal$page3 = ddoLocal.page) === null || _ddoLocal$page3 === void 0 ? void 0 : (_ddoLocal$page3$pageI = _ddoLocal$page3.pageInfo) === null || _ddoLocal$page3$pageI === void 0 ? void 0 : (_ddoLocal$page3$pageI2 = _ddoLocal$page3$pageI.ibm) === null || _ddoLocal$page3$pageI2 === void 0 ? void 0 : _ddoLocal$page3$pageI2.country)) {\n      // Set proper LC for us to use.\n      lang.lc = ddoLocal.page.pageInfo.language.substring(0, 2).toLowerCase();\n      lang.cc = ddoLocal.page.pageInfo.ibm.country.toLowerCase().trim(); // If there are multiple countries use just the first one for the CC value\n\n      if (lang.cc.indexOf(',') > -1) lang.cc = lang.cc.substring(0, lang.cc.indexOf(',')).trim(); // Gb will be uk elsewhere\n\n      if (lang.cc === 'gb') {\n        lang.cc = 'uk';\n      } // Map worldwide (ZZ) pages to US\n\n\n      if (lang.cc === 'zz') {\n        lang.cc = 'us';\n      }\n    } else {\n      // set lc with just the language code\n      lang.lc = ddoLocal.page.pageInfo.language.substring(0, 2).toLowerCase();\n    }\n\n    return lang;\n  }\n\n  return false;\n}\n/**\n * Locale API class with method of fetching user's locale for\n * ibm.com\n */\n\n\nvar LocaleAPI = /*#__PURE__*/function () {\n  function LocaleAPI() {\n    _classCallCheck(this, LocaleAPI);\n  }\n\n  _createClass(LocaleAPI, null, [{\n    key: \"clearCache\",\n\n    /**\n     * Clears the cache.\n     */\n    value: function clearCache() {\n      if (typeof sessionStorage !== 'undefined') {\n        Object.keys(_requestsList).forEach(function (key) {\n          return delete _requestsList[key];\n        });\n\n        for (var i = 0; i < sessionStorage.length; ++i) {\n          var key = sessionStorage.key(i);\n\n          if (key.indexOf(_sessionListKey) === 0) {\n            sessionStorage.removeItem(key);\n          }\n        }\n      }\n    }\n    /**\n     * Gets the user's locale\n     *\n     * Grab the locale from the `lang` attribute from html, else\n     * check if ipcinfo cookie exists (ipcinfoCookie util)\n     * if not, retrieve the user's locale through geolocation util + gets user's\n     * browser language preference then set the cookie\n     *\n     * @returns {object} object with lc and cc\n     *\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getLocale() {\n     *   const locale = await LocaleAPI.getLocale();\n     *   return locale;\n     * }\n     */\n\n  }, {\n    key: \"getLocale\",\n    value: function () {\n      var _getLocale = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var cookie, lang, cc, _lang, lc, list, verifiedCodes;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cookie = ipcinfoCookie.get();\n                _context.next = 3;\n                return this.getLang();\n\n              case 3:\n                lang = _context.sent;\n\n                if (!lang) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", lang);\n\n              case 8:\n                if (!(cookie && cookie.cc && cookie.lc)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return this.getList(cookie);\n\n              case 11:\n                return _context.abrupt(\"return\", cookie);\n\n              case 14:\n                _context.next = 16;\n                return geolocation();\n\n              case 16:\n                cc = _context.sent;\n\n                /**\n                 * get language preference from browser\n                 * can return in either 'en-US' format or 'en' so will need to extract language only\n                 */\n                _lang = root.navigator.language;\n                lc = _lang.split('-')[0];\n\n                if (!(cc && lc)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 22;\n                return this.getList({\n                  cc: cc,\n                  lc: lc\n                });\n\n              case 22:\n                list = _context.sent;\n                verifiedCodes = this.verifyLocale(cc, lc, list); // set the ipcInfo cookie\n\n                ipcinfoCookie.set(verifiedCodes);\n                return _context.abrupt(\"return\", verifiedCodes);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getLocale() {\n        return _getLocale.apply(this, arguments);\n      }\n\n      return getLocale;\n    }()\n    /**\n     * Checks for DDO object to return the correct cc and lc\n     * Otherwise gets those values from the <html> lang attribute\n     *\n     * @returns {object} locale object\n     *\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * function async getLocale() {\n     *    const locale = await LocaleAPI.getLang();\n     * }\n     */\n\n  }, {\n    key: \"getLang\",\n    value: function getLang() {\n      return new Promise(function (resolve) {\n        var getLocaleFromDDO = _getLocaleFromDDO();\n\n        if (getLocaleFromDDO) {\n          resolve(getLocaleFromDDO);\n        } else {\n          resolve(_getLocaleByLangAttr());\n        }\n      });\n    }\n    /**\n     * This fetches the language display name based on language/locale combo\n     *\n     * @param {object} langCode lang code with cc and lc\n     *\n     * @returns {Promise<string>} Display name of locale/language\n     */\n\n  }, {\n    key: \"getLangDisplay\",\n    value: function () {\n      var _getLangDisplay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(langCode) {\n        var lang, list, countries, location;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!langCode) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.t0 = langCode;\n                _context2.next = 7;\n                break;\n\n              case 4:\n                _context2.next = 6;\n                return this.getLang();\n\n              case 6:\n                _context2.t0 = _context2.sent;\n\n              case 7:\n                lang = _context2.t0;\n                _context2.next = 10;\n                return this.getList(lang);\n\n              case 10:\n                list = _context2.sent;\n                // combines the countryList arrays\n                countries = [];\n                list.regionList.forEach(function (region) {\n                  countries = countries.concat(region.countryList);\n                }); // get match for countries with multiple languages\n\n                location = countries.filter(function (country) {\n                  var htmlLang = country.locale.findIndex(function (loc) {\n                    return loc[0] === \"\".concat(lang.lc, \"-\").concat(lang.cc);\n                  });\n\n                  if (htmlLang !== -1) {\n                    var _country$locale;\n\n                    var localeMatch = country.locale.filter(function (l) {\n                      return l.includes(\"\".concat(lang.lc, \"-\").concat(lang.cc));\n                    });\n\n                    (_country$locale = country.locale).splice.apply(_country$locale, [0, country.locale.length].concat(_toConsumableArray(localeMatch)));\n\n                    return country;\n                  }\n                });\n\n                if (!location.length) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", \"\".concat(location[0].name, \" \\u2014 \").concat(location[0].locale[0][1]));\n\n              case 18:\n                return _context2.abrupt(\"return\", _localeNameDefault);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getLangDisplay(_x) {\n        return _getLangDisplay.apply(this, arguments);\n      }\n\n      return getLangDisplay;\n    }()\n    /**\n     * Get the country list of all supported countries and their languages\n     * if it is not already stored in session storage\n     *\n     * @param {object} params params object\n     * @param {string} params.cc country code\n     * @param {string} params.lc language code\n     *\n     * @returns {Promise<any>} promise object\n     *\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * function async getLocale() {\n     *    const list = await LocaleAPI.getList({ cc: 'us', lc: 'en' });\n     *    return list;\n     * }\n     */\n\n  }, {\n    key: \"getList\",\n    value: function () {\n      var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var _this = this;\n\n        var cc, lc;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                cc = _ref.cc, lc = _ref.lc;\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this.fetchList(cc, lc, resolve, reject);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getList(_x2) {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }()\n    /**\n     * Fetches the list data based on cc/lc combination\n     *\n     * @param {string} cc country code\n     * @param {string} lc language code\n     * @param {Function} resolve resolves the Promise\n     * @param {Function} reject rejects the promise\n     */\n\n  }, {\n    key: \"fetchList\",\n    value: function fetchList(cc, lc, resolve, reject) {\n      var _this2 = this;\n\n      var key = cc !== 'undefined' ? \"\".concat(lc, \"-\").concat(cc) : \"\".concat(lc);\n      var itemKey = \"\".concat(_sessionListKey, \"-\").concat(key);\n      var sessionList = this.getSessionCache(itemKey);\n\n      if (sessionList) {\n        resolve(sessionList);\n      } else {\n        if (!_requestsList[key]) {\n          var url = \"\".concat(_endpoint, \"/\").concat(cc !== 'undefined' ? \"\".concat(cc).concat(lc) : \"\".concat(lc), \"-utf8.json\");\n          _requestsList[key] = axios.get(url, _axiosConfig).then(function (response) {\n            var data = response.data;\n            data['timestamp'] = Date.now();\n            sessionStorage.setItem(\"\".concat(_sessionListKey, \"-\").concat(key), JSON.stringify(data));\n            return data;\n          });\n        }\n\n        _requestsList[key].then(resolve, function (error) {\n          if (cc === _localeDefault.cc && lc === _localeDefault.lc) {\n            reject(error);\n          } else {\n            _this2.fetchList(_localeDefault.cc, _localeDefault.lc, resolve, reject);\n          }\n        });\n      }\n    }\n    /**\n     * Verify that the cc and lc combo is in the list of\n     * supported cc-lc combos\n     *\n     * @param {string} cc country code\n     * @param {string} lc language code\n     * @param {object} list country list\n     *\n     * @returns {object} object with lc and cc\n     * @example\n     * import { LocaleAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getLocale() {\n     *   const locale = await LocaleAPI.verifyLocale(cc, lc, data);\n     *   return locale;\n     * }\n     */\n\n  }, {\n    key: \"verifyLocale\",\n    value: function verifyLocale(cc, lc, list) {\n      var priorityLC;\n      var locale;\n      var language = list && list.regionList.forEach(function (region) {\n        return region.countryList.forEach(function (country) {\n          var code = country.locale[0][0].split('-');\n          var countryCode = code[1];\n          var languageCode = code[0];\n\n          if (countryCode === cc && languageCode === lc) {\n            locale = {\n              cc: cc,\n              lc: lc\n            };\n          } // save the priority language associated with the user's country code\n          else if (countryCode === cc && !priorityLC) {\n              priorityLC = languageCode;\n            }\n        });\n      });\n\n      if (!language && priorityLC) {\n        locale = {\n          cc: cc,\n          lc: priorityLC\n        };\n      }\n\n      return locale;\n    }\n    /**\n     * Retrieves session cache and checks if cache needs to be refreshed\n     *\n     * @param   {string} key session storage key\n     * @returns {object} session storage object\n     */\n\n  }, {\n    key: \"getSessionCache\",\n    value: function getSessionCache(key) {\n      var session = typeof sessionStorage === 'undefined' ? undefined : JSON.parse(sessionStorage.getItem(key));\n\n      if (!session || !session.timestamp) {\n        return;\n      }\n\n      var currentTime = Date.now(),\n          timeDiff = currentTime - session.timestamp;\n\n      if (timeDiff > _twoHours) {\n        sessionStorage.removeItem(key);\n        return;\n      }\n\n      return session;\n    }\n  }]);\n\n  return LocaleAPI;\n}();\n\nexport default LocaleAPI;"]},"metadata":{},"sourceType":"module"}