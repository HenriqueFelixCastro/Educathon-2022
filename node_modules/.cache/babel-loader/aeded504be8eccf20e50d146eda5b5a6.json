{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { CardGroup } from '../CardGroup';\nimport classNames from 'classnames';\nimport ContentSection from '../ContentSection/ContentSection';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * CardSectionImages pattern it is Cards with images.\n */\n\nvar CardSectionImages = function CardSectionImages(_ref) {\n  var cards = _ref.cards,\n      theme = _ref.theme,\n      otherProps = _objectWithoutProperties(_ref, [\"cards\", \"theme\"]);\n\n  var cardsWithImages = cards.filter(function (_ref2) {\n    var image = _ref2.image,\n        eyebrow = _ref2.eyebrow,\n        heading = _ref2.heading,\n        copy = _ref2.copy,\n        href = _ref2.cta.href;\n    return image && eyebrow && heading && !copy && href;\n  });\n  return /*#__PURE__*/React.createElement(ContentSection, {\n    heading: otherProps.heading,\n    autoid: \"\".concat(stablePrefix, \"--card-group-images-group\"),\n    customClassName: classNames(\"\".concat(prefix, \"--card-group\"), _defineProperty({}, \"\".concat(prefix, \"--card-group--\").concat(theme), theme)),\n    children: [/*#__PURE__*/React.createElement(CardGroup, {\n      cards: cardsWithImages\n    })]\n  });\n};\n\nCardSectionImages.propTypes = {\n  /**\n   * Color theme for pattern. Choose from:\n   *\n   * | Name    | Data Type | Description                  |\n   * | ------- | --------- | ---------------------------- |\n   * | `white` | String    | Carbon White theme           |\n   * | `g10`   | String    | Carbon Gray 10 (g10) theme   |\n   * | `g90`   | String    | Carbon Gray 90 (g90) theme   |\n   * | `g100`  | String    | Carbon Gray 100 (g100) theme |\n   */\n  theme: PropTypes.oneOf(['white', 'g10', 'g90', 'g100']),\n\n  /**\n   * Section heading.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Cards data. Has the following structure for each items:\n   *\n   * | Name       | Required | Data Type | Description                              |\n   * | ---------- | -------- | --------- | ---------------------------------------- |\n   * | `image`    | YES      | Object    | Contains source and alt text properties. |\n   * | `eyebrow`  | YES      | String    | Eyebrow of the card.                     |\n   * | `heading`  | YES      | String    | Heading of the card.                     |\n   * | `cta.href` | YES      | String    | URI for internal or external resource.   |\n   *\n   * See example\n   * [card data](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/src/components/CardGroup/__stories__/data/cards.js).\n   */\n  cards: PropTypes.arrayOf(PropTypes.exact({\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }),\n    eyebrow: PropTypes.string,\n    heading: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })).isRequired\n};\nexport default CardSectionImages;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/CardSectionImages/CardSectionImages.js"],"names":["_defineProperty","_objectWithoutProperties","CardGroup","classNames","ContentSection","ddsSettings","PropTypes","React","settings","stablePrefix","prefix","CardSectionImages","_ref","cards","theme","otherProps","cardsWithImages","filter","_ref2","image","eyebrow","heading","copy","href","cta","createElement","autoid","concat","customClassName","children","propTypes","oneOf","string","isRequired","arrayOf","exact","shape","classname","sources","src","breakpoint","oneOfType","number","defaultSrc","alt","longDescription"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { CardGroup } from '../CardGroup';\nimport classNames from 'classnames';\nimport ContentSection from '../ContentSection/ContentSection';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * CardSectionImages pattern it is Cards with images.\n */\n\nvar CardSectionImages = function CardSectionImages(_ref) {\n  var cards = _ref.cards,\n      theme = _ref.theme,\n      otherProps = _objectWithoutProperties(_ref, [\"cards\", \"theme\"]);\n\n  var cardsWithImages = cards.filter(function (_ref2) {\n    var image = _ref2.image,\n        eyebrow = _ref2.eyebrow,\n        heading = _ref2.heading,\n        copy = _ref2.copy,\n        href = _ref2.cta.href;\n    return image && eyebrow && heading && !copy && href;\n  });\n  return /*#__PURE__*/React.createElement(ContentSection, {\n    heading: otherProps.heading,\n    autoid: \"\".concat(stablePrefix, \"--card-group-images-group\"),\n    customClassName: classNames(\"\".concat(prefix, \"--card-group\"), _defineProperty({}, \"\".concat(prefix, \"--card-group--\").concat(theme), theme)),\n    children: [/*#__PURE__*/React.createElement(CardGroup, {\n      cards: cardsWithImages\n    })]\n  });\n};\n\nCardSectionImages.propTypes = {\n  /**\n   * Color theme for pattern. Choose from:\n   *\n   * | Name    | Data Type | Description                  |\n   * | ------- | --------- | ---------------------------- |\n   * | `white` | String    | Carbon White theme           |\n   * | `g10`   | String    | Carbon Gray 10 (g10) theme   |\n   * | `g90`   | String    | Carbon Gray 90 (g90) theme   |\n   * | `g100`  | String    | Carbon Gray 100 (g100) theme |\n   */\n  theme: PropTypes.oneOf(['white', 'g10', 'g90', 'g100']),\n\n  /**\n   * Section heading.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Cards data. Has the following structure for each items:\n   *\n   * | Name       | Required | Data Type | Description                              |\n   * | ---------- | -------- | --------- | ---------------------------------------- |\n   * | `image`    | YES      | Object    | Contains source and alt text properties. |\n   * | `eyebrow`  | YES      | String    | Eyebrow of the card.                     |\n   * | `heading`  | YES      | String    | Heading of the card.                     |\n   * | `cta.href` | YES      | String    | URI for internal or external resource.   |\n   *\n   * See example\n   * [card data](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/src/components/CardGroup/__stories__/data/cards.js).\n   */\n  cards: PropTypes.arrayOf(PropTypes.exact({\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }),\n    eyebrow: PropTypes.string,\n    heading: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })).isRequired\n};\nexport default CardSectionImages;"]},"metadata":{},"sourceType":"module"}