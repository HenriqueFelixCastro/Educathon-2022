{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ArrowDown20 from '@carbon/icons-react/es/arrow--down/20';\nimport ArrowLeft20 from '@carbon/icons-react/es/arrow--left/20';\nimport ArrowRight20 from '@carbon/icons-react/es/arrow--right/20';\nimport Download20 from '@carbon/icons-react/es/download/20';\nimport Launch20 from '@carbon/icons-react/es/launch/20';\nimport { LightboxMediaViewer } from '../LightboxMediaViewer';\nimport PlayOutline20 from '@carbon/icons-react/es/play--outline/20';\nimport React from 'react';\nimport smoothScroll from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/smoothScroll/smoothScroll';\n/**\n * The logic behind the CTA component\n */\n\nvar CTALogic = /*#__PURE__*/function () {\n  function CTALogic() {\n    _classCallCheck(this, CTALogic);\n  }\n\n  _createClass(CTALogic, null, [{\n    key: \"getVideoId\",\n\n    /**\n     * extract video id from props\n     *\n     * @param {string} style cta type ( external | jump | local)\n     * @param {object} otherProps cta type ( external | jump | local)\n     * @returns {*} behaviour object\n     */\n    value: function getVideoId(style, otherProps) {\n      switch (style) {\n        case 'text':\n          return [{\n            src: otherProps.media.src\n          }];\n\n        case 'card':\n          return [{\n            src: otherProps.media.src\n          }];\n\n        case 'feature':\n          return [{\n            src: otherProps.card.cta.media.src\n          }];\n\n        case 'button':\n          {\n            var videoIds = otherProps.buttons.map(function (button, key) {\n              if (button.type === 'video' && button.media) return {\n                src: button.media.src,\n                key: key\n              };\n            }).filter(function (id) {\n              return id && id;\n            });\n            return videoIds;\n          }\n\n        default:\n          return [];\n      }\n    }\n    /**\n     * Gets the default aria label if translated label isn't provided.\n     *\n     * @param {string} type cta type { download | external | video }\n     * @returns {string} default type aria label\n     */\n\n  }, {\n    key: \"getDefaultLabel\",\n    value: function getDefaultLabel(type) {\n      switch (type) {\n        case 'download':\n          return ' - This link downloads a file';\n\n        case 'external':\n          return ' - This link opens in a new tab';\n\n        case 'video':\n          return ' - This link plays a video';\n\n        default:\n          return '';\n      }\n    }\n    /**\n     * jump to target element  onClick\n     *\n     * @param {*} e event object\n     * @param {string} type cta type ( external | jump | local)\n     * @returns {*} behaviour object\n     */\n\n  }, {\n    key: \"jump\",\n    value: function jump(e, type) {\n      return type === 'jump' ? smoothScroll(e) : null;\n    }\n    /**\n     * sets target\n     *\n     * @param {string} type cta type ( external | jump | local)\n     * @returns {string} target value\n     */\n\n  }, {\n    key: \"external\",\n    value: function external(type) {\n      return type === 'external' ? '_blank' : null;\n    }\n    /**\n     * sets icon based on link type\n     *\n     * @param {string} type cta type ( external | jump | local)\n     * @returns {*} cta type component\n     */\n\n  }, {\n    key: \"iconSelector\",\n    value: function iconSelector(type, iconPlacement) {\n      switch (type) {\n        case 'download':\n          return Download20;\n\n        case 'external':\n          return Launch20;\n\n        case 'jump':\n          return ArrowDown20;\n\n        case 'video':\n          return PlayOutline20;\n\n        case 'default':\n          return null;\n\n        default:\n          return iconPlacement === 'left' ? ArrowLeft20 : ArrowRight20;\n      }\n    }\n    /**\n     * Opens the LightBoxMediaViewer component when CTA is clicked\n     *\n     * @param {boolean} renderLightBox determine whether to render the lightbox\n     * @param {Function} openLightBox func to toggle the lightbox\n     * @param {object} media media object to render within the lightbox\n     * @returns {*} lightbox component\n     */\n\n  }, {\n    key: \"launchLightBox\",\n    value: function launchLightBox(renderLightBox, openLightBox, media) {\n      return renderLightBox && /*#__PURE__*/React.createElement(LightboxMediaViewer, {\n        media: media,\n        open: true,\n        onClose: function onClose() {\n          return openLightBox(false);\n        }\n      });\n    }\n    /**\n     *\n     * @param {*} e event\n     * @param {Function} openLightBox function to toggle lightbox\n     *\n     * @returns {*} set lightbox state\n     */\n\n  }, {\n    key: \"setLightBox\",\n    value: function setLightBox(e, openLightBox) {\n      e.preventDefault();\n      return openLightBox(true);\n    }\n  }]);\n\n  return CTALogic;\n}();\n\nexport default CTALogic;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/CTA/CTALogic.js"],"names":["_classCallCheck","_createClass","ArrowDown20","ArrowLeft20","ArrowRight20","Download20","Launch20","LightboxMediaViewer","PlayOutline20","React","smoothScroll","CTALogic","key","value","getVideoId","style","otherProps","src","media","card","cta","videoIds","buttons","map","button","type","filter","id","getDefaultLabel","jump","e","external","iconSelector","iconPlacement","launchLightBox","renderLightBox","openLightBox","createElement","open","onClose","setLightBox","preventDefault"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ArrowDown20 from '@carbon/icons-react/es/arrow--down/20';\nimport ArrowLeft20 from '@carbon/icons-react/es/arrow--left/20';\nimport ArrowRight20 from '@carbon/icons-react/es/arrow--right/20';\nimport Download20 from '@carbon/icons-react/es/download/20';\nimport Launch20 from '@carbon/icons-react/es/launch/20';\nimport { LightboxMediaViewer } from '../LightboxMediaViewer';\nimport PlayOutline20 from '@carbon/icons-react/es/play--outline/20';\nimport React from 'react';\nimport smoothScroll from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/smoothScroll/smoothScroll';\n/**\n * The logic behind the CTA component\n */\n\nvar CTALogic = /*#__PURE__*/function () {\n  function CTALogic() {\n    _classCallCheck(this, CTALogic);\n  }\n\n  _createClass(CTALogic, null, [{\n    key: \"getVideoId\",\n\n    /**\n     * extract video id from props\n     *\n     * @param {string} style cta type ( external | jump | local)\n     * @param {object} otherProps cta type ( external | jump | local)\n     * @returns {*} behaviour object\n     */\n    value: function getVideoId(style, otherProps) {\n      switch (style) {\n        case 'text':\n          return [{\n            src: otherProps.media.src\n          }];\n\n        case 'card':\n          return [{\n            src: otherProps.media.src\n          }];\n\n        case 'feature':\n          return [{\n            src: otherProps.card.cta.media.src\n          }];\n\n        case 'button':\n          {\n            var videoIds = otherProps.buttons.map(function (button, key) {\n              if (button.type === 'video' && button.media) return {\n                src: button.media.src,\n                key: key\n              };\n            }).filter(function (id) {\n              return id && id;\n            });\n            return videoIds;\n          }\n\n        default:\n          return [];\n      }\n    }\n    /**\n     * Gets the default aria label if translated label isn't provided.\n     *\n     * @param {string} type cta type { download | external | video }\n     * @returns {string} default type aria label\n     */\n\n  }, {\n    key: \"getDefaultLabel\",\n    value: function getDefaultLabel(type) {\n      switch (type) {\n        case 'download':\n          return ' - This link downloads a file';\n\n        case 'external':\n          return ' - This link opens in a new tab';\n\n        case 'video':\n          return ' - This link plays a video';\n\n        default:\n          return '';\n      }\n    }\n    /**\n     * jump to target element  onClick\n     *\n     * @param {*} e event object\n     * @param {string} type cta type ( external | jump | local)\n     * @returns {*} behaviour object\n     */\n\n  }, {\n    key: \"jump\",\n    value: function jump(e, type) {\n      return type === 'jump' ? smoothScroll(e) : null;\n    }\n    /**\n     * sets target\n     *\n     * @param {string} type cta type ( external | jump | local)\n     * @returns {string} target value\n     */\n\n  }, {\n    key: \"external\",\n    value: function external(type) {\n      return type === 'external' ? '_blank' : null;\n    }\n    /**\n     * sets icon based on link type\n     *\n     * @param {string} type cta type ( external | jump | local)\n     * @returns {*} cta type component\n     */\n\n  }, {\n    key: \"iconSelector\",\n    value: function iconSelector(type, iconPlacement) {\n      switch (type) {\n        case 'download':\n          return Download20;\n\n        case 'external':\n          return Launch20;\n\n        case 'jump':\n          return ArrowDown20;\n\n        case 'video':\n          return PlayOutline20;\n\n        case 'default':\n          return null;\n\n        default:\n          return iconPlacement === 'left' ? ArrowLeft20 : ArrowRight20;\n      }\n    }\n    /**\n     * Opens the LightBoxMediaViewer component when CTA is clicked\n     *\n     * @param {boolean} renderLightBox determine whether to render the lightbox\n     * @param {Function} openLightBox func to toggle the lightbox\n     * @param {object} media media object to render within the lightbox\n     * @returns {*} lightbox component\n     */\n\n  }, {\n    key: \"launchLightBox\",\n    value: function launchLightBox(renderLightBox, openLightBox, media) {\n      return renderLightBox && /*#__PURE__*/React.createElement(LightboxMediaViewer, {\n        media: media,\n        open: true,\n        onClose: function onClose() {\n          return openLightBox(false);\n        }\n      });\n    }\n    /**\n     *\n     * @param {*} e event\n     * @param {Function} openLightBox function to toggle lightbox\n     *\n     * @returns {*} set lightbox state\n     */\n\n  }, {\n    key: \"setLightBox\",\n    value: function setLightBox(e, openLightBox) {\n      e.preventDefault();\n      return openLightBox(true);\n    }\n  }]);\n\n  return CTALogic;\n}();\n\nexport default CTALogic;"]},"metadata":{},"sourceType":"module"}