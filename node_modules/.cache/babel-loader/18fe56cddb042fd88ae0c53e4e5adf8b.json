{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useId } from '../../internal/useId';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction ProgressBar(_ref) {\n  var className = _ref.className,\n      helperText = _ref.helperText,\n      hideLabel = _ref.hideLabel,\n      label = _ref.label,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'big' : _ref$size,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'default' : _ref$type,\n      value = _ref.value;\n  var labelId = useId('progress-bar');\n  var helperId = useId('progress-bar-helper');\n  var prefix = usePrefix();\n  var indeterminate = value === null || value === undefined;\n  var cappedValue = value;\n\n  if (cappedValue > max) {\n    cappedValue = max;\n  }\n\n  if (cappedValue < 0) {\n    cappedValue = 0;\n  }\n\n  var percentage = cappedValue / max;\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--progress-bar\"), \"\".concat(prefix, \"--progress-bar--\").concat(size), \"\".concat(prefix, \"--progress-bar--\").concat(type), _defineProperty({}, \"\".concat(prefix, \"--progress-bar--indeterminate\"), indeterminate), className);\n  var labelClasses = classNames(\"\".concat(prefix, \"--progress-bar__label\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelClasses,\n    id: labelId\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__track\"),\n    role: \"progressbar\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": helperText ? helperId : null,\n    \"aria-valuemin\": !indeterminate ? 0 : null,\n    \"aria-valuemax\": !indeterminate ? max : null,\n    \"aria-valuenow\": !indeterminate ? cappedValue : null\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__bar\"),\n    style: {\n      transform: \"scaleX(\".concat(percentage, \")\")\n    }\n  })), helperText && /*#__PURE__*/React.createElement(\"div\", {\n    id: helperId,\n    className: \"\".concat(prefix, \"--progress-bar__helper-text\")\n  }, helperText));\n}\n\nProgressBar.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current progress as a textual representation.\n   */\n  helperText: PropTypes.string,\n\n  /**\n   * Whether the label should be visually hidden.\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * A label describing the progress bar.\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Specify the size of the ProgressBar.\n   */\n  size: PropTypes.oneOf(['small', 'big']),\n\n  /**\n   * Defines the alignment variant of the progress bar.\n   */\n  type: PropTypes.oneOf(['default', 'inline', 'indented']),\n\n  /**\n   * The current value.\n   */\n  value: PropTypes.number\n};\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/ProgressBar/ProgressBar.js"],"names":["_defineProperty","React","PropTypes","classNames","useId","usePrefix","ProgressBar","_ref","className","helperText","hideLabel","label","_ref$max","max","_ref$size","size","_ref$type","type","value","labelId","helperId","prefix","indeterminate","undefined","cappedValue","percentage","wrapperClasses","concat","labelClasses","createElement","id","role","style","transform","propTypes","string","bool","isRequired","number","oneOf"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useId } from '../../internal/useId';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction ProgressBar(_ref) {\n  var className = _ref.className,\n      helperText = _ref.helperText,\n      hideLabel = _ref.hideLabel,\n      label = _ref.label,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'big' : _ref$size,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'default' : _ref$type,\n      value = _ref.value;\n  var labelId = useId('progress-bar');\n  var helperId = useId('progress-bar-helper');\n  var prefix = usePrefix();\n  var indeterminate = value === null || value === undefined;\n  var cappedValue = value;\n\n  if (cappedValue > max) {\n    cappedValue = max;\n  }\n\n  if (cappedValue < 0) {\n    cappedValue = 0;\n  }\n\n  var percentage = cappedValue / max;\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--progress-bar\"), \"\".concat(prefix, \"--progress-bar--\").concat(size), \"\".concat(prefix, \"--progress-bar--\").concat(type), _defineProperty({}, \"\".concat(prefix, \"--progress-bar--indeterminate\"), indeterminate), className);\n  var labelClasses = classNames(\"\".concat(prefix, \"--progress-bar__label\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: labelClasses,\n    id: labelId\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__track\"),\n    role: \"progressbar\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": helperText ? helperId : null,\n    \"aria-valuemin\": !indeterminate ? 0 : null,\n    \"aria-valuemax\": !indeterminate ? max : null,\n    \"aria-valuenow\": !indeterminate ? cappedValue : null\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--progress-bar__bar\"),\n    style: {\n      transform: \"scaleX(\".concat(percentage, \")\")\n    }\n  })), helperText && /*#__PURE__*/React.createElement(\"div\", {\n    id: helperId,\n    className: \"\".concat(prefix, \"--progress-bar__helper-text\")\n  }, helperText));\n}\n\nProgressBar.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current progress as a textual representation.\n   */\n  helperText: PropTypes.string,\n\n  /**\n   * Whether the label should be visually hidden.\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * A label describing the progress bar.\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Specify the size of the ProgressBar.\n   */\n  size: PropTypes.oneOf(['small', 'big']),\n\n  /**\n   * Defines the alignment variant of the progress bar.\n   */\n  type: PropTypes.oneOf(['default', 'inline', 'indented']),\n\n  /**\n   * The current value.\n   */\n  value: PropTypes.number\n};\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}