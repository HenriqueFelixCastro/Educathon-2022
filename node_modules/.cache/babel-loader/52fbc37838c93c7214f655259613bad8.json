{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Card } from '../Card';\nimport classNames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Featured Card Component\n *\n * @param {object} props props object\n * @param {object} props.card section card object\n * @param {Function} props.onClick onClick function\n * @returns {*} FeatureCard JSX component\n */\n\nvar FeatureCard = function FeatureCard(_ref) {\n  var _classNames, _classNames2;\n\n  var card = _ref.card,\n      size = _ref.size,\n      otherProps = _objectWithoutProperties(_ref, [\"card\", \"size\"]);\n\n  var image = card.image,\n      cta = card.cta,\n      copy = card.copy;\n  return cta && image && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--feature-card\"), size == 'medium'), _defineProperty(_classNames, \"\".concat(prefix, \"--feature-card-large\"), size == 'large'), _defineProperty(_classNames, \"\".concat(prefix, \"--feature-card-large_no-copy-text\"), size === 'large' && !copy), _classNames)),\n    \"data-autoid\": size === 'large' ? \"\".concat(stablePrefix, \"--feature-card-large\") : \"\".concat(stablePrefix, \"--feature-card\")\n  }, /*#__PURE__*/React.createElement(Card, _extends({\n    customClassName: classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--feature-card__card\"), size === 'medium'), _defineProperty(_classNames2, \"\".concat(prefix, \"--feature-card-large__card\"), size === 'large'), _classNames2))\n  }, card, otherProps)));\n};\n\nFeatureCard.propTypes = {\n  /**\n   * \"Eyebrow\" text above copy and CTA.\n   */\n  eyebrow: PropTypes.string,\n\n  /**\n   * Title of the Card item.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Body text for the card.\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Object containing Feature Card details.\n   * In summary, has the following structure.\n   *\n   * | Name      | Data Type | Description                                                                                                                                                                        |\n   * | --------- | --------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n   * | `heading` | String    | Title of the Card item.                                                                                                                                                            |\n   * | `image`   | Object    | Image object used in the FeatureCard component. See [`<Image>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-image--default#props) for full usage details. |\n   * | `cta`     | Object    | Object containing target and href of link. See below.                                                                                                                              |\n   *\n   * CTA object has the following structure in summary:\n   *\n   * | Name   | Data Type | Description                       |\n   * | ------ | --------- | --------------------------------- |\n   * | `href` | String    | Url of the FeatureCard component. |\n   *\n   * See [`<Card>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-card--static#props) for full usage details.\n   */\n  card: PropTypes.shape({\n    heading: PropTypes.string,\n    eyebrow: PropTypes.string,\n    copy: PropTypes.string,\n    cta: PropTypes.shape({\n      copy: PropTypes.string,\n      href: PropTypes.string,\n      type: PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video'])\n    }),\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }),\n    inverse: PropTypes.bool,\n    customClassName: PropTypes.string,\n    type: PropTypes.oneOf(['link'])\n  }).isRequired,\n\n  /**\n   * The handler for `onclick` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Size of Feature Card. Choose from:\n   *\n   * | Name    | Description                                                  |\n   * | ------- | -------------------------------------------------------------|\n   * | `medium`| Default Feature Card variant                                 |\n   * | `large` | Large Feature Card variant that contains eyebrow and heading |\n   */\n  size: PropTypes.oneOf(['medium', 'large'])\n};\nFeatureCard.defaultProps = {\n  size: 'medium'\n};\nexport default FeatureCard;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/FeatureCard/FeatureCard.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","Card","classNames","ddsSettings","PropTypes","React","settings","stablePrefix","prefix","FeatureCard","_ref","_classNames","_classNames2","card","size","otherProps","image","cta","copy","createElement","className","concat","customClassName","propTypes","eyebrow","string","heading","isRequired","shape","href","type","oneOf","classname","sources","arrayOf","src","breakpoint","oneOfType","number","defaultSrc","alt","longDescription","inverse","bool","onClick","func","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Card } from '../Card';\nimport classNames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Featured Card Component\n *\n * @param {object} props props object\n * @param {object} props.card section card object\n * @param {Function} props.onClick onClick function\n * @returns {*} FeatureCard JSX component\n */\n\nvar FeatureCard = function FeatureCard(_ref) {\n  var _classNames, _classNames2;\n\n  var card = _ref.card,\n      size = _ref.size,\n      otherProps = _objectWithoutProperties(_ref, [\"card\", \"size\"]);\n\n  var image = card.image,\n      cta = card.cta,\n      copy = card.copy;\n  return cta && image && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--feature-card\"), size == 'medium'), _defineProperty(_classNames, \"\".concat(prefix, \"--feature-card-large\"), size == 'large'), _defineProperty(_classNames, \"\".concat(prefix, \"--feature-card-large_no-copy-text\"), size === 'large' && !copy), _classNames)),\n    \"data-autoid\": size === 'large' ? \"\".concat(stablePrefix, \"--feature-card-large\") : \"\".concat(stablePrefix, \"--feature-card\")\n  }, /*#__PURE__*/React.createElement(Card, _extends({\n    customClassName: classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--feature-card__card\"), size === 'medium'), _defineProperty(_classNames2, \"\".concat(prefix, \"--feature-card-large__card\"), size === 'large'), _classNames2))\n  }, card, otherProps)));\n};\n\nFeatureCard.propTypes = {\n  /**\n   * \"Eyebrow\" text above copy and CTA.\n   */\n  eyebrow: PropTypes.string,\n\n  /**\n   * Title of the Card item.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Body text for the card.\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Object containing Feature Card details.\n   * In summary, has the following structure.\n   *\n   * | Name      | Data Type | Description                                                                                                                                                                        |\n   * | --------- | --------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n   * | `heading` | String    | Title of the Card item.                                                                                                                                                            |\n   * | `image`   | Object    | Image object used in the FeatureCard component. See [`<Image>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-image--default#props) for full usage details. |\n   * | `cta`     | Object    | Object containing target and href of link. See below.                                                                                                                              |\n   *\n   * CTA object has the following structure in summary:\n   *\n   * | Name   | Data Type | Description                       |\n   * | ------ | --------- | --------------------------------- |\n   * | `href` | String    | Url of the FeatureCard component. |\n   *\n   * See [`<Card>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-card--static#props) for full usage details.\n   */\n  card: PropTypes.shape({\n    heading: PropTypes.string,\n    eyebrow: PropTypes.string,\n    copy: PropTypes.string,\n    cta: PropTypes.shape({\n      copy: PropTypes.string,\n      href: PropTypes.string,\n      type: PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video'])\n    }),\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }),\n    inverse: PropTypes.bool,\n    customClassName: PropTypes.string,\n    type: PropTypes.oneOf(['link'])\n  }).isRequired,\n\n  /**\n   * The handler for `onclick` event.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Size of Feature Card. Choose from:\n   *\n   * | Name    | Description                                                  |\n   * | ------- | -------------------------------------------------------------|\n   * | `medium`| Default Feature Card variant                                 |\n   * | `large` | Large Feature Card variant that contains eyebrow and heading |\n   */\n  size: PropTypes.oneOf(['medium', 'large'])\n};\nFeatureCard.defaultProps = {\n  size: 'medium'\n};\nexport default FeatureCard;"]},"metadata":{},"sourceType":"module"}