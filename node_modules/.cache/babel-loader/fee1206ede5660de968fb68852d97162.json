{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport axios from 'axios';\nimport { LocaleAPI } from '../Locale';\n/**\n * @constant {string | string} Host for the API calls\n * @private\n */\n\nvar _host = process && process.env.SEARCH_TYPEAHEAD_API || 'https://www-api.ibm.com';\n/**\n * @constant {string | string} API version\n * @private\n */\n\n\nvar _version = process && process.env.SEARCH_TYPEAHEAD_VERSION || 'v1';\n/**\n * SearchTypeahead endpoint\n *\n * @type {string}\n * @private\n */\n\n\nvar _endpoint = \"\".concat(_host, \"/search/typeahead/\").concat(_version);\n/**\n * SearchTypeahead API class with methods of fetching search results for\n * ibm.com\n */\n\n\nvar SearchTypeaheadAPI = /*#__PURE__*/function () {\n  function SearchTypeaheadAPI() {\n    _classCallCheck(this, SearchTypeaheadAPI);\n  }\n\n  _createClass(SearchTypeaheadAPI, null, [{\n    key: \"getResults\",\n\n    /**\n     * Gets search results\n     *\n     * @param {string} query Query string to pass to the service\n     * @returns {Promise<any>} Response data from ibm search\n     * @example\n     * import { SearchTypeaheadAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getResults(query) {\n     *   const response = await SearchTypeaheadAPI.getResults(query);\n     *   return response;\n     * }\n     */\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n        var appid,\n            lang,\n            urlQuery,\n            url,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                appid = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n                _context.next = 3;\n                return LocaleAPI.getLang();\n\n              case 3:\n                lang = _context.sent;\n                urlQuery = [\"lang=\".concat(lang.lc).concat(lang.cc ? \"&cc=\".concat(lang.cc) : ''), \"query=\".concat(encodeURIComponent(query)), \"\".concat(appid ? \"appid=\".concat(appid) : '')].filter(function (item) {\n                  return item;\n                }).join('&');\n                url = \"\".concat(_endpoint, \"?\").concat(urlQuery);\n                _context.next = 8;\n                return axios.get(url, {\n                  headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                  }\n                }).then(function (response) {\n                  return response.data.response;\n                });\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getResults(_x) {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }]);\n\n  return SearchTypeaheadAPI;\n}();\n\nexport default SearchTypeaheadAPI;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/internal/vendor/@carbon/ibmdotcom-services/services/SearchTypeahead/SearchTypeahead.js"],"names":["_asyncToGenerator","_classCallCheck","_createClass","_regeneratorRuntime","axios","LocaleAPI","_host","process","env","SEARCH_TYPEAHEAD_API","_version","SEARCH_TYPEAHEAD_VERSION","_endpoint","concat","SearchTypeaheadAPI","key","value","_getResults","mark","_callee","query","appid","lang","urlQuery","url","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","getLang","sent","lc","cc","encodeURIComponent","filter","item","join","get","headers","then","response","data","abrupt","stop","getResults","_x","apply"],"mappings":"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","sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport axios from 'axios';\nimport { LocaleAPI } from '../Locale';\n/**\n * @constant {string | string} Host for the API calls\n * @private\n */\n\nvar _host = process && process.env.SEARCH_TYPEAHEAD_API || 'https://www-api.ibm.com';\n/**\n * @constant {string | string} API version\n * @private\n */\n\n\nvar _version = process && process.env.SEARCH_TYPEAHEAD_VERSION || 'v1';\n/**\n * SearchTypeahead endpoint\n *\n * @type {string}\n * @private\n */\n\n\nvar _endpoint = \"\".concat(_host, \"/search/typeahead/\").concat(_version);\n/**\n * SearchTypeahead API class with methods of fetching search results for\n * ibm.com\n */\n\n\nvar SearchTypeaheadAPI = /*#__PURE__*/function () {\n  function SearchTypeaheadAPI() {\n    _classCallCheck(this, SearchTypeaheadAPI);\n  }\n\n  _createClass(SearchTypeaheadAPI, null, [{\n    key: \"getResults\",\n\n    /**\n     * Gets search results\n     *\n     * @param {string} query Query string to pass to the service\n     * @returns {Promise<any>} Response data from ibm search\n     * @example\n     * import { SearchTypeaheadAPI } from '@carbon/ibmdotcom-services';\n     *\n     * async function getResults(query) {\n     *   const response = await SearchTypeaheadAPI.getResults(query);\n     *   return response;\n     * }\n     */\n    value: function () {\n      var _getResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n        var appid,\n            lang,\n            urlQuery,\n            url,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                appid = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n                _context.next = 3;\n                return LocaleAPI.getLang();\n\n              case 3:\n                lang = _context.sent;\n                urlQuery = [\"lang=\".concat(lang.lc).concat(lang.cc ? \"&cc=\".concat(lang.cc) : ''), \"query=\".concat(encodeURIComponent(query)), \"\".concat(appid ? \"appid=\".concat(appid) : '')].filter(function (item) {\n                  return item;\n                }).join('&');\n                url = \"\".concat(_endpoint, \"?\").concat(urlQuery);\n                _context.next = 8;\n                return axios.get(url, {\n                  headers: {\n                    'Content-Type': 'application/json; charset=utf-8'\n                  }\n                }).then(function (response) {\n                  return response.data.response;\n                });\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getResults(_x) {\n        return _getResults.apply(this, arguments);\n      }\n\n      return getResults;\n    }()\n  }]);\n\n  return SearchTypeaheadAPI;\n}();\n\nexport default SearchTypeaheadAPI;"]},"metadata":{},"sourceType":"module"}