{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { CardGroup } from '../CardGroup';\nimport classNames from 'classnames';\nimport ContentSection from '../ContentSection/ContentSection';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * CardSectionSimple pattern it is Cards without images.\n */\n\nvar CardSectionSimple = function CardSectionSimple(_ref) {\n  var cards = _ref.cards,\n      cta = _ref.cta,\n      theme = _ref.theme,\n      otherProps = _objectWithoutProperties(_ref, [\"cards\", \"cta\", \"theme\"]);\n\n  var cardsWithoutImages = cards.filter(function (_ref2) {\n    var image = _ref2.image,\n        heading = _ref2.heading,\n        copy = _ref2.copy,\n        href = _ref2.cta.href;\n    return !image && heading && copy && href;\n  });\n  return /*#__PURE__*/React.createElement(ContentSection, {\n    heading: otherProps.heading,\n    autoid: \"\".concat(stablePrefix, \"--card-group-simple-group\"),\n    customClassName: classNames(\"\".concat(prefix, \"--card-group\"), _defineProperty({}, \"\".concat(prefix, \"--card-group--\").concat(theme), theme)),\n    children: [/*#__PURE__*/React.createElement(CardGroup, {\n      cards: cardsWithoutImages,\n      cta: cta\n    })]\n  });\n};\n\nCardSectionSimple.propTypes = {\n  /**\n   * Color theme for pattern. Choose from:\n   *\n   * | Name    | Data Type | Description                  |\n   * | ------- | --------- | ---------------------------- |\n   * | `white` | String    | Carbon White theme           |\n   * | `g10`   | String    | Carbon Gray 10 (g10) theme   |\n   * | `g90`   | String    | Carbon Gray 90 (g90) theme   |\n   * | `g100`  | String    | Carbon Gray 100 (g100) theme |\n   */\n  theme: PropTypes.oneOf(['white', 'g10', 'g90', 'g100']),\n\n  /**\n   * Section heading.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Array of card data. Has the following structure for each items:\n   *\n   * | Name       | Required | Data Type | Description                            |\n   * | ---------- | -------- | --------- | -------------------------------------- |\n   * | `copy`     | YES      | String    | Copy of the card.                      |\n   * | `heading`  | YES      | String    | Heading of the card.                   |\n   * | `cta.href` | YES      | String    | URI for internal or external resource. |\n   *\n   * See example\n   * [card data](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/src/components/CardGroup/__stories__/data/cards.js).\n   */\n  cards: PropTypes.arrayOf(PropTypes.exact({\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })).isRequired,\n\n  /**\n   * Optional CTA card for group. Always displays as last item.\n   * See [`<CardGroup>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cardgroup--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    heading: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })\n};\nexport default CardSectionSimple;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/CardSectionSimple/CardSectionSimple.js"],"names":["_defineProperty","_objectWithoutProperties","CardGroup","classNames","ContentSection","ddsSettings","PropTypes","React","settings","stablePrefix","prefix","CardSectionSimple","_ref","cards","cta","theme","otherProps","cardsWithoutImages","filter","_ref2","image","heading","copy","href","createElement","autoid","concat","customClassName","children","propTypes","oneOf","string","isRequired","arrayOf","exact","shape"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { CardGroup } from '../CardGroup';\nimport classNames from 'classnames';\nimport ContentSection from '../ContentSection/ContentSection';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * CardSectionSimple pattern it is Cards without images.\n */\n\nvar CardSectionSimple = function CardSectionSimple(_ref) {\n  var cards = _ref.cards,\n      cta = _ref.cta,\n      theme = _ref.theme,\n      otherProps = _objectWithoutProperties(_ref, [\"cards\", \"cta\", \"theme\"]);\n\n  var cardsWithoutImages = cards.filter(function (_ref2) {\n    var image = _ref2.image,\n        heading = _ref2.heading,\n        copy = _ref2.copy,\n        href = _ref2.cta.href;\n    return !image && heading && copy && href;\n  });\n  return /*#__PURE__*/React.createElement(ContentSection, {\n    heading: otherProps.heading,\n    autoid: \"\".concat(stablePrefix, \"--card-group-simple-group\"),\n    customClassName: classNames(\"\".concat(prefix, \"--card-group\"), _defineProperty({}, \"\".concat(prefix, \"--card-group--\").concat(theme), theme)),\n    children: [/*#__PURE__*/React.createElement(CardGroup, {\n      cards: cardsWithoutImages,\n      cta: cta\n    })]\n  });\n};\n\nCardSectionSimple.propTypes = {\n  /**\n   * Color theme for pattern. Choose from:\n   *\n   * | Name    | Data Type | Description                  |\n   * | ------- | --------- | ---------------------------- |\n   * | `white` | String    | Carbon White theme           |\n   * | `g10`   | String    | Carbon Gray 10 (g10) theme   |\n   * | `g90`   | String    | Carbon Gray 90 (g90) theme   |\n   * | `g100`  | String    | Carbon Gray 100 (g100) theme |\n   */\n  theme: PropTypes.oneOf(['white', 'g10', 'g90', 'g100']),\n\n  /**\n   * Section heading.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Array of card data. Has the following structure for each items:\n   *\n   * | Name       | Required | Data Type | Description                            |\n   * | ---------- | -------- | --------- | -------------------------------------- |\n   * | `copy`     | YES      | String    | Copy of the card.                      |\n   * | `heading`  | YES      | String    | Heading of the card.                   |\n   * | `cta.href` | YES      | String    | URI for internal or external resource. |\n   *\n   * See example\n   * [card data](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/src/components/CardGroup/__stories__/data/cards.js).\n   */\n  cards: PropTypes.arrayOf(PropTypes.exact({\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })).isRequired,\n\n  /**\n   * Optional CTA card for group. Always displays as last item.\n   * See [`<CardGroup>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cardgroup--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    heading: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })\n};\nexport default CardSectionSimple;"]},"metadata":{},"sourceType":"module"}