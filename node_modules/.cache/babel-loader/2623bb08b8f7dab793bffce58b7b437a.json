{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"className\", \"children\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n/**\n * Helper component for rendering content that hangs on the column. Useful when\n * trying to align content across different grid modes\n */\n\nfunction ColumnHang(_ref) {\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      customClassName = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(customClassName, \"\".concat(prefix, \"--grid-column-hang\"));\n  return /*#__PURE__*/React.createElement(BaseComponent, _extends({}, rest, {\n    className: className\n  }), children);\n}\n\nColumnHang.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Grid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Grid`\n   */\n  className: PropTypes.string\n};\nexport { ColumnHang };","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Grid/ColumnHang.js"],"names":["_extends","_objectWithoutProperties","_excluded","cx","PropTypes","React","usePrefix","ColumnHang","_ref","_ref$as","as","BaseComponent","customClassName","className","children","rest","prefix","concat","createElement","propTypes","oneOfType","string","elementType","node"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,IAAD,EAAO,WAAP,EAAoB,UAApB,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,OAAO,GAAGD,IAAI,CAACE,EAAnB;AAAA,MACIC,aAAa,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,KAArB,GAA6BA,OADjD;AAAA,MAEIG,eAAe,GAAGJ,IAAI,CAACK,SAF3B;AAAA,MAGIC,QAAQ,GAAGN,IAAI,CAACM,QAHpB;AAAA,MAIIC,IAAI,GAAGd,wBAAwB,CAACO,IAAD,EAAON,SAAP,CAJnC;;AAMA,MAAIc,MAAM,GAAGV,SAAS,EAAtB;AACA,MAAIO,SAAS,GAAGV,EAAE,CAACS,eAAD,EAAkB,GAAGK,MAAH,CAAUD,MAAV,EAAkB,oBAAlB,CAAlB,CAAlB;AACA,SAAO,aAAaX,KAAK,CAACa,aAAN,CAAoBP,aAApB,EAAmCX,QAAQ,CAAC,EAAD,EAAKe,IAAL,EAAW;AACxEF,IAAAA,SAAS,EAAEA;AAD6D,GAAX,CAA3C,EAEhBC,QAFgB,CAApB;AAGD;;AAEDP,UAAU,CAACY,SAAX,GAAuB;AACrB;AACF;AACA;AACET,EAAAA,EAAE,EAAEN,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACkB,WAA7B,CAApB,CAJiB;;AAMrB;AACF;AACA;AACER,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IATC;;AAWrB;AACF;AACA;AACEV,EAAAA,SAAS,EAAET,SAAS,CAACiB;AAdA,CAAvB;AAgBA,SAASd,UAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"className\", \"children\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\n/**\n * Helper component for rendering content that hangs on the column. Useful when\n * trying to align content across different grid modes\n */\n\nfunction ColumnHang(_ref) {\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      customClassName = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(customClassName, \"\".concat(prefix, \"--grid-column-hang\"));\n  return /*#__PURE__*/React.createElement(BaseComponent, _extends({}, rest, {\n    className: className\n  }), children);\n}\n\nColumnHang.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Grid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Grid`\n   */\n  className: PropTypes.string\n};\nexport { ColumnHang };"]},"metadata":{},"sourceType":"module"}