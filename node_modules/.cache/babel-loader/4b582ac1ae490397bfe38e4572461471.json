{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport ComposedModal from '../../internal/vendor/carbon-components-react/components/ComposedModal/ComposedModal';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport ExpressiveModalCloseBtn from './ExpressiveModalCloseBtn';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Expressive Modal.\n */\n\nvar ExpressiveModal = function ExpressiveModal(_ref) {\n  var open = _ref.open,\n      className = _ref.className,\n      children = _ref.children,\n      fullwidth = _ref.fullwidth,\n      onClose = _ref.onClose,\n      props = _objectWithoutProperties(_ref, [\"open\", \"className\", \"children\", \"fullwidth\", \"onClose\"]);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  useEffect(manageOpenState, [open]);\n  return /*#__PURE__*/React.createElement(ComposedModal, _extends({\n    onClose: onClose,\n    open: isOpen,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--expressive-modal\"),\n    className: classNames(\"\".concat(prefix, \"--modal--expressive\"), className, _defineProperty({}, \"\".concat(prefix, \"--modal--expressive--fullwidth\"), fullwidth)),\n    selectorPrimaryFocus: \".\".concat(prefix, \"--modal-close\")\n  }, props), /*#__PURE__*/React.createElement(ExpressiveModalCloseBtn, {\n    onClick: closeModal\n  }), children);\n  /**\n   * Close modal\n   */\n\n  function closeModal() {\n    if ((onClose === null || onClose === void 0 ? void 0 : onClose()) !== false) {\n      setIsOpen(false);\n    }\n  }\n  /**\n   * Manage open prop and isOpen state\n   */\n\n\n  function manageOpenState() {\n    setIsOpen(open);\n  }\n};\n\nExpressiveModal.propTypes = {\n  /**\n   * Sets whether the Modal is fullwidth or not.\n   */\n  fullwidth: PropTypes.bool,\n\n  /**\n   * Sets whether the Modal is open/close.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Custom classname(s) for the Modal.\n   */\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * Components/Elements to be rendered within the Modal.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Function to be triggered on close of Modal.\n   */\n  onClose: PropTypes.func\n};\nExpressiveModal.defaultProps = {\n  open: false\n};\nexport default ExpressiveModal;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ExpressiveModal/ExpressiveModal.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","React","useEffect","useState","classNames","ComposedModal","ddsSettings","ExpressiveModalCloseBtn","PropTypes","settings","stablePrefix","prefix","ExpressiveModal","_ref","open","className","children","fullwidth","onClose","props","_useState","_useState2","isOpen","setIsOpen","manageOpenState","createElement","concat","selectorPrimaryFocus","onClick","closeModal","propTypes","bool","oneOfType","string","array","node","func","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport ComposedModal from '../../internal/vendor/carbon-components-react/components/ComposedModal/ComposedModal';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport ExpressiveModalCloseBtn from './ExpressiveModalCloseBtn';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Expressive Modal.\n */\n\nvar ExpressiveModal = function ExpressiveModal(_ref) {\n  var open = _ref.open,\n      className = _ref.className,\n      children = _ref.children,\n      fullwidth = _ref.fullwidth,\n      onClose = _ref.onClose,\n      props = _objectWithoutProperties(_ref, [\"open\", \"className\", \"children\", \"fullwidth\", \"onClose\"]);\n\n  var _useState = useState(open),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  useEffect(manageOpenState, [open]);\n  return /*#__PURE__*/React.createElement(ComposedModal, _extends({\n    onClose: onClose,\n    open: isOpen,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--expressive-modal\"),\n    className: classNames(\"\".concat(prefix, \"--modal--expressive\"), className, _defineProperty({}, \"\".concat(prefix, \"--modal--expressive--fullwidth\"), fullwidth)),\n    selectorPrimaryFocus: \".\".concat(prefix, \"--modal-close\")\n  }, props), /*#__PURE__*/React.createElement(ExpressiveModalCloseBtn, {\n    onClick: closeModal\n  }), children);\n  /**\n   * Close modal\n   */\n\n  function closeModal() {\n    if ((onClose === null || onClose === void 0 ? void 0 : onClose()) !== false) {\n      setIsOpen(false);\n    }\n  }\n  /**\n   * Manage open prop and isOpen state\n   */\n\n\n  function manageOpenState() {\n    setIsOpen(open);\n  }\n};\n\nExpressiveModal.propTypes = {\n  /**\n   * Sets whether the Modal is fullwidth or not.\n   */\n  fullwidth: PropTypes.bool,\n\n  /**\n   * Sets whether the Modal is open/close.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Custom classname(s) for the Modal.\n   */\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n\n  /**\n   * Components/Elements to be rendered within the Modal.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Function to be triggered on close of Modal.\n   */\n  onClose: PropTypes.func\n};\nExpressiveModal.defaultProps = {\n  open: false\n};\nexport default ExpressiveModal;"]},"metadata":{},"sourceType":"module"}