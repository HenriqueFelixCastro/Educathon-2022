{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState } from 'react';\nimport Button from '../../internal/vendor/carbon-components-react/components/Button/Button';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport EarthFilled20 from '@carbon/icons-react/es/earth--filled/20';\nimport LocaleModal from '../LocaleModal/LocaleModal';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Renders the locale button.\n */\n\nvar LocaleButton = function LocaleButton(_ref) {\n  var displayLang = _ref.displayLang,\n      aria = _ref.aria;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--locale-btn__container\")\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--locale-btn\"),\n    className: \"\".concat(prefix, \"--locale-btn\"),\n    kind: \"tertiary\",\n    onClick: open,\n    renderIcon: EarthFilled20,\n    iconDescription: \"Earth Filled Icon\",\n    \"aria-label\": aria\n  }, displayLang), /*#__PURE__*/React.createElement(LocaleModal, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen\n  }));\n  /**\n   * Sets modal state to open\n   *\n   * @private\n   */\n\n  function open() {\n    setIsOpen(true);\n  }\n};\n\nLocaleButton.propTypes = {\n  /**\n   * Display language for locale button.\n   */\n  displayLang: PropTypes.string,\n\n  /**\n   * `aria-label`` value.\n   */\n  aria: PropTypes.string\n};\nexport default LocaleButton;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/Footer/LocaleButton.js"],"names":["_slicedToArray","React","useState","Button","ddsSettings","EarthFilled20","LocaleModal","PropTypes","settings","stablePrefix","prefix","LocaleButton","_ref","displayLang","aria","_useState","_useState2","isOpen","setIsOpen","createElement","className","concat","kind","onClick","open","renderIcon","iconDescription","propTypes","string"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wEAAnB;AACA,OAAOC,WAAP,MAAwB,+EAAxB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,IAAIC,YAAY,GAAGL,WAAW,CAACK,YAA/B;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,MAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;;AAGA,MAAIC,SAAS,GAAGb,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACIc,UAAU,GAAGhB,cAAc,CAACe,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,MAAM,GAAGD,UAAU,CAAC,CAAD,CAFvB;AAAA,MAGIE,SAAS,GAAGF,UAAU,CAAC,CAAD,CAH1B;;AAKA,SAAO,aAAaf,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AAC7CC,IAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUX,MAAV,EAAkB,yBAAlB;AADkC,GAA3B,EAEjB,aAAaT,KAAK,CAACkB,aAAN,CAAoBhB,MAApB,EAA4B;AAC1C,mBAAe,GAAGkB,MAAH,CAAUZ,YAAV,EAAwB,cAAxB,CAD2B;AAE1CW,IAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUX,MAAV,EAAkB,cAAlB,CAF+B;AAG1CY,IAAAA,IAAI,EAAE,UAHoC;AAI1CC,IAAAA,OAAO,EAAEC,IAJiC;AAK1CC,IAAAA,UAAU,EAAEpB,aAL8B;AAM1CqB,IAAAA,eAAe,EAAE,mBANyB;AAO1C,kBAAcZ;AAP4B,GAA5B,EAQbD,WARa,CAFI,EAUH,aAAaZ,KAAK,CAACkB,aAAN,CAAoBb,WAApB,EAAiC;AAC7DW,IAAAA,MAAM,EAAEA,MADqD;AAE7DC,IAAAA,SAAS,EAAEA;AAFkD,GAAjC,CAVV,CAApB;AAcA;AACF;AACA;AACA;AACA;;AAEE,WAASM,IAAT,GAAgB;AACdN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,CAhCD;;AAkCAP,YAAY,CAACgB,SAAb,GAAyB;AACvB;AACF;AACA;AACEd,EAAAA,WAAW,EAAEN,SAAS,CAACqB,MAJA;;AAMvB;AACF;AACA;AACEd,EAAAA,IAAI,EAAEP,SAAS,CAACqB;AATO,CAAzB;AAWA,eAAejB,YAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport Button from '../../internal/vendor/carbon-components-react/components/Button/Button';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport EarthFilled20 from '@carbon/icons-react/es/earth--filled/20';\nimport LocaleModal from '../LocaleModal/LocaleModal';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Renders the locale button.\n */\n\nvar LocaleButton = function LocaleButton(_ref) {\n  var displayLang = _ref.displayLang,\n      aria = _ref.aria;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--locale-btn__container\")\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--locale-btn\"),\n    className: \"\".concat(prefix, \"--locale-btn\"),\n    kind: \"tertiary\",\n    onClick: open,\n    renderIcon: EarthFilled20,\n    iconDescription: \"Earth Filled Icon\",\n    \"aria-label\": aria\n  }, displayLang), /*#__PURE__*/React.createElement(LocaleModal, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen\n  }));\n  /**\n   * Sets modal state to open\n   *\n   * @private\n   */\n\n  function open() {\n    setIsOpen(true);\n  }\n};\n\nLocaleButton.propTypes = {\n  /**\n   * Display language for locale button.\n   */\n  displayLang: PropTypes.string,\n\n  /**\n   * `aria-label`` value.\n   */\n  aria: PropTypes.string\n};\nexport default LocaleButton;"]},"metadata":{},"sourceType":"module"}