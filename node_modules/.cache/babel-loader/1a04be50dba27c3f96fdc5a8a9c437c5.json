{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport ArrowRight20 from '@carbon/icons-react/es/arrow--right/20';\nimport classnames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport decodeString from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/decodeString/decodeString';\nimport { HorizontalRule } from '../HorizontalRule';\nimport Launch20 from '@carbon/icons-react/es/launch/20';\nimport { LinkWithIcon } from '../LinkWithIcon';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Quote Pattern\n *\n * @param {object} props props Object\n * @param {string} props.markType type of the quote marks\n * @param {string} props.copy quote copy\n * @param {object} props.source source object\n * @param {string} props.source.heading name heading for quote source\n * @param {string} props.source.copy title copy for quote source\n * @param {object} props.cta cta props object\n * @param {string} props.cta.copy cta copy\n * @param {string} props.cta.type type 'local' or 'external'\n * @param {string} props.cta.href cta href\n * @param {boolean} props.inverse toggles inverse theme\n * @returns {*} Quote Pattern\n */\n\nvar Quote = function Quote(_ref) {\n  var _ref$markType = _ref.markType,\n      markType = _ref$markType === void 0 ? 'doubleCurved' : _ref$markType,\n      copy = _ref.copy,\n      source = _ref.source,\n      cta = _ref.cta,\n      inverse = _ref.inverse;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      decodedCopy = _useState2[0],\n      setDecodedCopy = _useState2[1];\n\n  useEffect(function () {\n    setDecodedCopy(decodeString(copy));\n  }, [copy]);\n  /**\n   * Render the Quote copy with the selected quote marks\n   *\n   * @returns {*} Blockquote with quote marks\n   */\n\n  var renderQuote = function renderQuote() {\n    switch (markType) {\n      case 'doubleCurved':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u201C\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u201D\"));\n\n      case 'singleCurved':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u2018\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u2019\"));\n\n      case 'doubleAngle':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\xAB\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\xBB\"));\n\n      case 'singleAngle':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u2039\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u203A\"));\n\n      case 'lowHighReversedDoubleCurved':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u201E\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u201C\"));\n\n      case 'cornerBracket':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark \").concat(prefix, \"--quote__mark-corner-bracket\")\n        }, \"\\u300C\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u300D\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--quote\"),\n    className: classnames(\"\".concat(prefix, \"--quote\"), _defineProperty({}, \"\".concat(prefix, \"--quote__inverse\"), inverse))\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__wrapper\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--quote__copy\")\n  }, renderQuote()), source && source.heading && source.copy ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__source\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--quote__source\")\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--quote__source-heading\")\n  }, source.heading), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--quote__source-body\")\n  }, source.copy), source.copy2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--quote__source-optional-copy\")\n  }, source.copy2)) : false), cta ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__footer\")\n  }, /*#__PURE__*/React.createElement(HorizontalRule, null), /*#__PURE__*/React.createElement(LinkWithIcon, {\n    href: cta.href\n  }, /*#__PURE__*/React.createElement(\"span\", null, cta.copy), cta.type === 'local' ? /*#__PURE__*/React.createElement(ArrowRight20, null) : false, cta.type === 'external' ? /*#__PURE__*/React.createElement(Launch20, null) : false)) : false);\n};\n\nQuote.propTypes = {\n  /**\n   * Type of the quote marks. Choose from:\n   *\n   * | Name                          | Description |\n   * | ----------------------------- | ----------- |\n   * | `singleCurved`                | ‘ ’         |\n   * | `doubleCurved`                | “ ”         |\n   * | `singleAngle`                 | ‹ ›         |\n   * | `doubleAngle`                 | « »         |\n   * | `lowHighReversedDoubleCurved` | „ “         |\n   * | `cornerBracket`               |「 」         |\n   */\n  markType: PropTypes.oneOf(['doubleCurved', 'singleCurved', 'doubleAngle', 'singleAngle', 'lowHighReversedDoubleCurved', 'cornerBracket']),\n\n  /**\n   * Main Quote.\n   */\n  copy: PropTypes.string.isRequired,\n\n  /**\n   * Source object. The structure is:\n   *\n   * | Name      | Required | Data Type | Default Value | Description                  |\n   * | --------- | -------- | --------- | ------------- | ---------------------------- |\n   * | `heading` | YES      | String    | null          | Source heading               |\n   * | `copy`    | YES      | String    | null          | Source body text             |\n   * | `copy2`   | NO       | String    | null          | Optional second line of copy |\n   */\n  source: PropTypes.shape({\n    heading: PropTypes.string.isRequired,\n    copy: PropTypes.string.isRequired,\n    copy2: PropTypes.string\n  }),\n\n  /**\n   * Object with a sub-scheme of CTA data.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    copy: PropTypes.string,\n    type: PropTypes.oneOf(['local', 'external']),\n    href: PropTypes.string\n  }),\n\n  /**\n   * `true` to use the invese colors.\n   */\n  inverse: PropTypes.bool\n};\nexport default Quote;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/Quote/Quote.js"],"names":["_defineProperty","_slicedToArray","React","useState","useEffect","ArrowRight20","classnames","ddsSettings","decodeString","HorizontalRule","Launch20","LinkWithIcon","PropTypes","settings","stablePrefix","prefix","Quote","_ref","_ref$markType","markType","copy","source","cta","inverse","_useState","_useState2","decodedCopy","setDecodedCopy","renderQuote","createElement","Fragment","className","concat","heading","copy2","href","type","propTypes","oneOf","string","isRequired","shape","bool"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState, useEffect } from 'react';\nimport ArrowRight20 from '@carbon/icons-react/es/arrow--right/20';\nimport classnames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport decodeString from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/decodeString/decodeString';\nimport { HorizontalRule } from '../HorizontalRule';\nimport Launch20 from '@carbon/icons-react/es/launch/20';\nimport { LinkWithIcon } from '../LinkWithIcon';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Quote Pattern\n *\n * @param {object} props props Object\n * @param {string} props.markType type of the quote marks\n * @param {string} props.copy quote copy\n * @param {object} props.source source object\n * @param {string} props.source.heading name heading for quote source\n * @param {string} props.source.copy title copy for quote source\n * @param {object} props.cta cta props object\n * @param {string} props.cta.copy cta copy\n * @param {string} props.cta.type type 'local' or 'external'\n * @param {string} props.cta.href cta href\n * @param {boolean} props.inverse toggles inverse theme\n * @returns {*} Quote Pattern\n */\n\nvar Quote = function Quote(_ref) {\n  var _ref$markType = _ref.markType,\n      markType = _ref$markType === void 0 ? 'doubleCurved' : _ref$markType,\n      copy = _ref.copy,\n      source = _ref.source,\n      cta = _ref.cta,\n      inverse = _ref.inverse;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      decodedCopy = _useState2[0],\n      setDecodedCopy = _useState2[1];\n\n  useEffect(function () {\n    setDecodedCopy(decodeString(copy));\n  }, [copy]);\n  /**\n   * Render the Quote copy with the selected quote marks\n   *\n   * @returns {*} Blockquote with quote marks\n   */\n\n  var renderQuote = function renderQuote() {\n    switch (markType) {\n      case 'doubleCurved':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u201C\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u201D\"));\n\n      case 'singleCurved':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u2018\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u2019\"));\n\n      case 'doubleAngle':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\xAB\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\xBB\"));\n\n      case 'singleAngle':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u2039\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u203A\"));\n\n      case 'lowHighReversedDoubleCurved':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark\")\n        }, \"\\u201E\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u201C\"));\n\n      case 'cornerBracket':\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefix, \"--quote__mark \").concat(prefix, \"--quote__mark-corner-bracket\")\n        }, \"\\u300C\"), /*#__PURE__*/React.createElement(\"blockquote\", {\n          className: \"\".concat(prefix, \"--quote__copy\")\n        }, decodedCopy, \"\\u300D\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--quote\"),\n    className: classnames(\"\".concat(prefix, \"--quote\"), _defineProperty({}, \"\".concat(prefix, \"--quote__inverse\"), inverse))\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__container\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__wrapper\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--quote__copy\")\n  }, renderQuote()), source && source.heading && source.copy ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__source\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--quote__source\")\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--quote__source-heading\")\n  }, source.heading), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--quote__source-body\")\n  }, source.copy), source.copy2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--quote__source-optional-copy\")\n  }, source.copy2)) : false), cta ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--quote__footer\")\n  }, /*#__PURE__*/React.createElement(HorizontalRule, null), /*#__PURE__*/React.createElement(LinkWithIcon, {\n    href: cta.href\n  }, /*#__PURE__*/React.createElement(\"span\", null, cta.copy), cta.type === 'local' ? /*#__PURE__*/React.createElement(ArrowRight20, null) : false, cta.type === 'external' ? /*#__PURE__*/React.createElement(Launch20, null) : false)) : false);\n};\n\nQuote.propTypes = {\n  /**\n   * Type of the quote marks. Choose from:\n   *\n   * | Name                          | Description |\n   * | ----------------------------- | ----------- |\n   * | `singleCurved`                | ‘ ’         |\n   * | `doubleCurved`                | “ ”         |\n   * | `singleAngle`                 | ‹ ›         |\n   * | `doubleAngle`                 | « »         |\n   * | `lowHighReversedDoubleCurved` | „ “         |\n   * | `cornerBracket`               |「 」         |\n   */\n  markType: PropTypes.oneOf(['doubleCurved', 'singleCurved', 'doubleAngle', 'singleAngle', 'lowHighReversedDoubleCurved', 'cornerBracket']),\n\n  /**\n   * Main Quote.\n   */\n  copy: PropTypes.string.isRequired,\n\n  /**\n   * Source object. The structure is:\n   *\n   * | Name      | Required | Data Type | Default Value | Description                  |\n   * | --------- | -------- | --------- | ------------- | ---------------------------- |\n   * | `heading` | YES      | String    | null          | Source heading               |\n   * | `copy`    | YES      | String    | null          | Source body text             |\n   * | `copy2`   | NO       | String    | null          | Optional second line of copy |\n   */\n  source: PropTypes.shape({\n    heading: PropTypes.string.isRequired,\n    copy: PropTypes.string.isRequired,\n    copy2: PropTypes.string\n  }),\n\n  /**\n   * Object with a sub-scheme of CTA data.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    copy: PropTypes.string,\n    type: PropTypes.oneOf(['local', 'external']),\n    href: PropTypes.string\n  }),\n\n  /**\n   * `true` to use the invese colors.\n   */\n  inverse: PropTypes.bool\n};\nexport default Quote;"]},"metadata":{},"sourceType":"module"}