{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"children\", \"className\", \"condensed\", \"fullWidth\", \"narrow\"],\n    _excluded2 = [\"as\", \"className\", \"children\", \"mode\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nimport { GridSettings, useGridSettings } from './GridContext';\n\nfunction CSSGrid(_ref) {\n  var _cx;\n\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      children = _ref.children,\n      customClassName = _ref.className,\n      _ref$condensed = _ref.condensed,\n      condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      _ref$narrow = _ref.narrow,\n      narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useGridSettings = useGridSettings(),\n      subgrid = _useGridSettings.subgrid;\n\n  var mode = 'wide';\n\n  if (narrow) {\n    mode = 'narrow';\n  } else if (condensed) {\n    mode = 'condensed';\n  }\n\n  if (subgrid) {\n    return /*#__PURE__*/React.createElement(GridSettings, {\n      mode: \"css-grid\",\n      subgrid: true\n    }, /*#__PURE__*/React.createElement(Subgrid, _extends({\n      as: BaseComponent,\n      className: customClassName,\n      mode: mode\n    }, rest), children));\n  }\n\n  var className = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--css-grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--condensed\"), mode === 'condensed'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--narrow\"), mode === 'narrow'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React.createElement(GridSettings, {\n    mode: \"css-grid\",\n    subgrid: true\n  }, /*#__PURE__*/React.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\n\nCSSGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Grid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Grid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\n\nfunction Subgrid(_ref2) {\n  var _cx2;\n\n  var _ref2$as = _ref2.as,\n      BaseComponent = _ref2$as === void 0 ? 'div' : _ref2$as,\n      customClassName = _ref2.className,\n      children = _ref2.children,\n      mode = _ref2.mode,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var prefix = usePrefix();\n  var className = cx(customClassName, (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--condensed\"), mode === 'condensed'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--narrow\"), mode === 'narrow'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--wide\"), mode === 'wide'), _cx2));\n  return /*#__PURE__*/React.createElement(BaseComponent, _extends({}, rest, {\n    className: className\n  }), children);\n}\n\nSubgrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Subgrid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Subgrid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the grid mode for the subgrid\n   */\n  mode: PropTypes.oneOf(['wide', 'narrow', 'condensed'])\n};\nexport { CSSGrid };","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Grid/CSSGrid.js"],"names":["_defineProperty","_extends","_objectWithoutProperties","_excluded","_excluded2","cx","PropTypes","React","usePrefix","GridSettings","useGridSettings","CSSGrid","_ref","_cx","_ref$as","as","BaseComponent","children","customClassName","className","_ref$condensed","condensed","_ref$fullWidth","fullWidth","_ref$narrow","narrow","rest","prefix","_useGridSettings","subgrid","mode","createElement","Subgrid","concat","propTypes","oneOfType","string","elementType","node","bool","_ref2","_cx2","_ref2$as","oneOf"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"children\", \"className\", \"condensed\", \"fullWidth\", \"narrow\"],\n    _excluded2 = [\"as\", \"className\", \"children\", \"mode\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nimport { GridSettings, useGridSettings } from './GridContext';\n\nfunction CSSGrid(_ref) {\n  var _cx;\n\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      children = _ref.children,\n      customClassName = _ref.className,\n      _ref$condensed = _ref.condensed,\n      condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      _ref$narrow = _ref.narrow,\n      narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n\n  var _useGridSettings = useGridSettings(),\n      subgrid = _useGridSettings.subgrid;\n\n  var mode = 'wide';\n\n  if (narrow) {\n    mode = 'narrow';\n  } else if (condensed) {\n    mode = 'condensed';\n  }\n\n  if (subgrid) {\n    return /*#__PURE__*/React.createElement(GridSettings, {\n      mode: \"css-grid\",\n      subgrid: true\n    }, /*#__PURE__*/React.createElement(Subgrid, _extends({\n      as: BaseComponent,\n      className: customClassName,\n      mode: mode\n    }, rest), children));\n  }\n\n  var className = cx(customClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--css-grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--condensed\"), mode === 'condensed'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--narrow\"), mode === 'narrow'), _defineProperty(_cx, \"\".concat(prefix, \"--css-grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React.createElement(GridSettings, {\n    mode: \"css-grid\",\n    subgrid: true\n  }, /*#__PURE__*/React.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\n\nCSSGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Grid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Grid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\n\nfunction Subgrid(_ref2) {\n  var _cx2;\n\n  var _ref2$as = _ref2.as,\n      BaseComponent = _ref2$as === void 0 ? 'div' : _ref2$as,\n      customClassName = _ref2.className,\n      children = _ref2.children,\n      mode = _ref2.mode,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var prefix = usePrefix();\n  var className = cx(customClassName, (_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid\"), true), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--condensed\"), mode === 'condensed'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--narrow\"), mode === 'narrow'), _defineProperty(_cx2, \"\".concat(prefix, \"--subgrid--wide\"), mode === 'wide'), _cx2));\n  return /*#__PURE__*/React.createElement(BaseComponent, _extends({}, rest, {\n    className: className\n  }), children);\n}\n\nSubgrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `Subgrid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `Subgrid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the grid mode for the subgrid\n   */\n  mode: PropTypes.oneOf(['wide', 'narrow', 'condensed'])\n};\nexport { CSSGrid };"]},"metadata":{},"sourceType":"module"}