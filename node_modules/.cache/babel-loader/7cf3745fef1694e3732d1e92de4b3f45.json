{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport classnames from 'classnames';\nimport Search from '../Search';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction ExpandableSearch(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var searchRef = useRef(null);\n  var prefix = usePrefix();\n\n  function handleFocus() {\n    if (!expanded) {\n      setExpanded(true);\n    }\n  }\n\n  function handleBlur(evt) {\n    var relatedTargetIsAllowed = evt.relatedTarget && evt.relatedTarget.classList.contains(\"\".concat(prefix, \"--search-close\"));\n\n    if (expanded && !relatedTargetIsAllowed && !searchRef.current.state.hasContent) {\n      setExpanded(false);\n    }\n  }\n\n  useEffect(function () {\n    var _searchRef$current2;\n\n    function focusInput() {\n      var _searchRef$current;\n\n      if (!expanded && (_searchRef$current = searchRef.current) !== null && _searchRef$current !== void 0 && _searchRef$current.input) {\n        searchRef.current.input.focus();\n      }\n    }\n\n    if ((_searchRef$current2 = searchRef.current) !== null && _searchRef$current2 !== void 0 && _searchRef$current2.magnifier) {\n      var magnifier = searchRef.current.magnifier;\n      magnifier.addEventListener('click', focusInput);\n      return function () {\n        magnifier.removeEventListener('click', focusInput);\n      };\n    }\n  }, [expanded, searchRef]);\n  var classes = classnames(\"\".concat(prefix, \"--search--expandable\"), _defineProperty({}, \"\".concat(prefix, \"--search--expanded\"), expanded), props.className);\n  return /*#__PURE__*/React.createElement(Search, _extends({}, props, {\n    ref: searchRef,\n    className: classes,\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  }));\n}\n\nExpandableSearch.propTypes = Search.propTypes;\nexport default ExpandableSearch;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/ExpandableSearch/ExpandableSearch.js"],"names":["_extends","_defineProperty","_slicedToArray","React","useState","useRef","useEffect","classnames","Search","usePrefix","ExpandableSearch","props","_useState","_useState2","expanded","setExpanded","searchRef","prefix","handleFocus","handleBlur","evt","relatedTargetIsAllowed","relatedTarget","classList","contains","concat","current","state","hasContent","_searchRef$current2","focusInput","_searchRef$current","input","focus","magnifier","addEventListener","removeEventListener","classes","className","createElement","ref","onFocus","onBlur","propTypes"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState, useRef, useEffect } from 'react';\nimport classnames from 'classnames';\nimport Search from '../Search';\nimport { usePrefix } from '../../internal/usePrefix';\n\nfunction ExpandableSearch(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var searchRef = useRef(null);\n  var prefix = usePrefix();\n\n  function handleFocus() {\n    if (!expanded) {\n      setExpanded(true);\n    }\n  }\n\n  function handleBlur(evt) {\n    var relatedTargetIsAllowed = evt.relatedTarget && evt.relatedTarget.classList.contains(\"\".concat(prefix, \"--search-close\"));\n\n    if (expanded && !relatedTargetIsAllowed && !searchRef.current.state.hasContent) {\n      setExpanded(false);\n    }\n  }\n\n  useEffect(function () {\n    var _searchRef$current2;\n\n    function focusInput() {\n      var _searchRef$current;\n\n      if (!expanded && (_searchRef$current = searchRef.current) !== null && _searchRef$current !== void 0 && _searchRef$current.input) {\n        searchRef.current.input.focus();\n      }\n    }\n\n    if ((_searchRef$current2 = searchRef.current) !== null && _searchRef$current2 !== void 0 && _searchRef$current2.magnifier) {\n      var magnifier = searchRef.current.magnifier;\n      magnifier.addEventListener('click', focusInput);\n      return function () {\n        magnifier.removeEventListener('click', focusInput);\n      };\n    }\n  }, [expanded, searchRef]);\n  var classes = classnames(\"\".concat(prefix, \"--search--expandable\"), _defineProperty({}, \"\".concat(prefix, \"--search--expanded\"), expanded), props.className);\n  return /*#__PURE__*/React.createElement(Search, _extends({}, props, {\n    ref: searchRef,\n    className: classes,\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  }));\n}\n\nExpandableSearch.propTypes = Search.propTypes;\nexport default ExpandableSearch;"]},"metadata":{},"sourceType":"module"}