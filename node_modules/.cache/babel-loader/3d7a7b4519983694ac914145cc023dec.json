{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"condensed\", \"narrow\", \"fullWidth\", \"className\", \"children\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nimport { GridSettings } from './GridContext';\n\nfunction FlexGrid(_ref) {\n  var _cx;\n\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      _ref$condensed = _ref.condensed,\n      condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n      _ref$narrow = _ref.narrow,\n      narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      containerClassName = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--grid--condensed\"), condensed), _defineProperty(_cx, \"\".concat(prefix, \"--grid--narrow\"), narrow), _defineProperty(_cx, \"\".concat(prefix, \"--grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React.createElement(GridSettings, {\n    mode: \"flexbox\",\n    subgrid: false\n  }, /*#__PURE__*/React.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\n\nFlexGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `FlexGrid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `FlexGrid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\nexport { FlexGrid };","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Grid/FlexGrid.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","cx","PropTypes","React","usePrefix","GridSettings","FlexGrid","_ref","_cx","_ref$as","as","BaseComponent","_ref$condensed","condensed","_ref$narrow","narrow","_ref$fullWidth","fullWidth","containerClassName","className","children","rest","prefix","concat","createElement","mode","subgrid","propTypes","oneOfType","string","elementType","node","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,IAAD,EAAO,WAAP,EAAoB,QAApB,EAA8B,WAA9B,EAA2C,WAA3C,EAAwD,UAAxD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,GAAJ;;AAEA,MAAIC,OAAO,GAAGF,IAAI,CAACG,EAAnB;AAAA,MACIC,aAAa,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,KAArB,GAA6BA,OADjD;AAAA,MAEIG,cAAc,GAAGL,IAAI,CAACM,SAF1B;AAAA,MAGIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,KAA5B,GAAoCA,cAHpD;AAAA,MAIIE,WAAW,GAAGP,IAAI,CAACQ,MAJvB;AAAA,MAKIA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,KAAzB,GAAiCA,WAL9C;AAAA,MAMIE,cAAc,GAAGT,IAAI,CAACU,SAN1B;AAAA,MAOIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,KAA5B,GAAoCA,cAPpD;AAAA,MAQIE,kBAAkB,GAAGX,IAAI,CAACY,SAR9B;AAAA,MASIC,QAAQ,GAAGb,IAAI,CAACa,QATpB;AAAA,MAUIC,IAAI,GAAGtB,wBAAwB,CAACQ,IAAD,EAAOP,SAAP,CAVnC;;AAYA,MAAIsB,MAAM,GAAGlB,SAAS,EAAtB;AACA,MAAIe,SAAS,GAAGlB,EAAE,CAACiB,kBAAD,GAAsBV,GAAG,GAAG,EAAN,EAAUV,eAAe,CAACU,GAAD,EAAM,GAAGe,MAAH,CAAUD,MAAV,EAAkB,QAAlB,CAAN,EAAmC,IAAnC,CAAzB,EAAmExB,eAAe,CAACU,GAAD,EAAM,GAAGe,MAAH,CAAUD,MAAV,EAAkB,mBAAlB,CAAN,EAA8CT,SAA9C,CAAlF,EAA4If,eAAe,CAACU,GAAD,EAAM,GAAGe,MAAH,CAAUD,MAAV,EAAkB,gBAAlB,CAAN,EAA2CP,MAA3C,CAA3J,EAA+MjB,eAAe,CAACU,GAAD,EAAM,GAAGe,MAAH,CAAUD,MAAV,EAAkB,oBAAlB,CAAN,EAA+CL,SAA/C,CAA9N,EAAyRT,GAA/S,EAAlB;AACA,SAAO,aAAaL,KAAK,CAACqB,aAAN,CAAoBnB,YAApB,EAAkC;AACpDoB,IAAAA,IAAI,EAAE,SAD8C;AAEpDC,IAAAA,OAAO,EAAE;AAF2C,GAAlC,EAGjB,aAAavB,KAAK,CAACqB,aAAN,CAAoBb,aAApB,EAAmCd,QAAQ,CAAC;AAC1DsB,IAAAA,SAAS,EAAEA;AAD+C,GAAD,EAExDE,IAFwD,CAA3C,EAEND,QAFM,CAHI,CAApB;AAMD;;AAEDd,QAAQ,CAACqB,SAAT,GAAqB;AACnB;AACF;AACA;AACEjB,EAAAA,EAAE,EAAER,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAAC2B,MAAX,EAAmB3B,SAAS,CAAC4B,WAA7B,CAApB,CAJe;;AAMnB;AACF;AACA;AACEV,EAAAA,QAAQ,EAAElB,SAAS,CAAC6B,IATD;;AAWnB;AACF;AACA;AACEZ,EAAAA,SAAS,EAAEjB,SAAS,CAAC2B,MAdF;;AAgBnB;AACF;AACA;AACA;AACEhB,EAAAA,SAAS,EAAEX,SAAS,CAAC8B,IApBF;;AAsBnB;AACF;AACA;AACEf,EAAAA,SAAS,EAAEf,SAAS,CAAC8B,IAzBF;;AA2BnB;AACF;AACA;AACA;AACEjB,EAAAA,MAAM,EAAEb,SAAS,CAAC8B;AA/BC,CAArB;AAiCA,SAAS1B,QAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"condensed\", \"narrow\", \"fullWidth\", \"className\", \"children\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nimport { GridSettings } from './GridContext';\n\nfunction FlexGrid(_ref) {\n  var _cx;\n\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      _ref$condensed = _ref.condensed,\n      condensed = _ref$condensed === void 0 ? false : _ref$condensed,\n      _ref$narrow = _ref.narrow,\n      narrow = _ref$narrow === void 0 ? false : _ref$narrow,\n      _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,\n      containerClassName = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx(containerClassName, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--grid\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--grid--condensed\"), condensed), _defineProperty(_cx, \"\".concat(prefix, \"--grid--narrow\"), narrow), _defineProperty(_cx, \"\".concat(prefix, \"--grid--full-width\"), fullWidth), _cx));\n  return /*#__PURE__*/React.createElement(GridSettings, {\n    mode: \"flexbox\",\n    subgrid: false\n  }, /*#__PURE__*/React.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children));\n}\n\nFlexGrid.propTypes = {\n  /**\n   * Provide a custom element to render instead of the default <div>\n   */\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n\n  /**\n   * Pass in content that will be rendered within the `FlexGrid`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom className to be applied to the `FlexGrid`\n   */\n  className: PropTypes.string,\n\n  /**\n   * Collapse the gutter to 1px. Useful for fluid layouts.\n   * Rows have 1px of margin between them to match gutter.\n   */\n  condensed: PropTypes.bool,\n\n  /**\n   * Remove the default max width that the grid has set\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Container hangs 16px into the gutter. Useful for\n   * typographic alignment with and without containers.\n   */\n  narrow: PropTypes.bool\n};\nexport { FlexGrid };"]},"metadata":{},"sourceType":"module"}