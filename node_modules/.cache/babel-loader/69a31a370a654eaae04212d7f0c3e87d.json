{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"disabled\", \"helperText\", \"hideLabel\", \"hidePasswordLabel\", \"id\", \"inline\", \"invalid\", \"invalidText\", \"labelText\", \"light\", \"onChange\", \"onClick\", \"onTogglePasswordVisibility\", \"placeholder\", \"size\", \"showPasswordLabel\", \"tooltipPosition\", \"tooltipAlignment\", \"type\", \"warn\", \"warnText\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { View16, ViewOff16 } from '@carbon/icons-react';\nimport { useNormalizedInputProps } from '../../internal/useNormalizedInputProps';\nimport { textInputProps } from './util';\nimport { FormContext } from '../FluidForm';\nimport * as FeatureFlags from '@carbon/feature-flags';\nimport { usePrefix } from '../../internal/usePrefix';\nvar PasswordInput = /*#__PURE__*/React.forwardRef(function PasswordInput(_ref, ref) {\n  var _classNames, _classNames2, _classNames3, _classNames4, _classNames7, _classNames8;\n\n  var className = _ref.className,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      helperText = _ref.helperText,\n      hideLabel = _ref.hideLabel,\n      _ref$hidePasswordLabe = _ref.hidePasswordLabel,\n      hidePasswordLabel = _ref$hidePasswordLabe === void 0 ? 'Hide password' : _ref$hidePasswordLabe,\n      id = _ref.id,\n      inline = _ref.inline,\n      _ref$invalid = _ref.invalid,\n      invalid = _ref$invalid === void 0 ? false : _ref$invalid,\n      invalidText = _ref.invalidText,\n      labelText = _ref.labelText,\n      _ref$light = _ref.light,\n      light = _ref$light === void 0 ? false : _ref$light,\n      _ref$onChange = _ref.onChange,\n      _onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$onClick = _ref.onClick,\n      _onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      onTogglePasswordVisibility = _ref.onTogglePasswordVisibility,\n      placeholder = _ref.placeholder,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size,\n      _ref$showPasswordLabe = _ref.showPasswordLabel,\n      showPasswordLabel = _ref$showPasswordLabe === void 0 ? 'Show password' : _ref$showPasswordLabe,\n      _ref$tooltipPosition = _ref.tooltipPosition,\n      tooltipPosition = _ref$tooltipPosition === void 0 ? 'bottom' : _ref$tooltipPosition,\n      _ref$tooltipAlignment = _ref.tooltipAlignment,\n      tooltipAlignment = _ref$tooltipAlignment === void 0 ? 'center' : _ref$tooltipAlignment,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'password' : _ref$type,\n      warn = _ref.warn,\n      warnText = _ref.warnText,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(type),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputType = _useState2[0],\n      setInputType = _useState2[1];\n\n  var prefix = usePrefix();\n  var normalizedProps = useNormalizedInputProps({\n    id: id,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText\n  });\n\n  var handleTogglePasswordVisibility = function handleTogglePasswordVisibility(event) {\n    setInputType(inputType === 'password' ? 'text' : 'password');\n    onTogglePasswordVisibility && onTogglePasswordVisibility(event);\n  };\n\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), normalizedProps.invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--warning\"), normalizedProps.warn), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--\").concat(size), size), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: inputType,\n    className: textInputClasses,\n    ref: ref\n  }, rest);\n\n  var inputWrapperClasses = classNames(\"\".concat(prefix, \"--form-item\"), \"\".concat(prefix, \"--text-input-wrapper\"), \"\".concat(prefix, \"--password-input-wrapper\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--light\"), light), _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--inline\"), inline), _classNames2));\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--disabled\"), disabled), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline\"), inline), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline--\").concat(size), inline && !!size), _classNames3));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled), _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--inline\"), inline), _classNames4));\n  var fieldOuterWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-outer-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-outer-wrapper--inline\"), inline));\n  var fieldWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-wrapper--warning\"), normalizedProps.warn));\n  var iconClasses = classNames((_classNames7 = {}, _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon\"), normalizedProps.invalid || normalizedProps.warn), _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon--warning\"), normalizedProps.warn), _classNames7));\n  var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  var passwordIsVisible = inputType === 'text';\n  var passwordVisibilityIcon = passwordIsVisible ? /*#__PURE__*/React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : /*#__PURE__*/React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var passwordVisibilityToggleClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility__toggle\"), \"\".concat(prefix, \"--btn\"), \"\".concat(prefix, \"--btn--icon-only\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--a11y\"), (_classNames8 = {}, _defineProperty(_classNames8, \"\".concat(prefix, \"--btn--disabled\"), disabled), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--\").concat(tooltipPosition), tooltipPosition), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), tooltipAlignment), _classNames8));\n  var input = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, textInputProps({\n    sharedTextInputProps: sharedTextInputProps,\n    invalid: normalizedProps.invalid,\n    invalidId: normalizedProps.invalidId,\n    warn: normalizedProps.warn,\n    warnId: normalizedProps.warnId\n  }), {\n    disabled: disabled,\n    \"data-toggle-password-visibility\": inputType === 'password'\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: passwordVisibilityToggleClasses,\n    disabled: disabled,\n    onClick: handleTogglePasswordVisibility\n  }, !disabled && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, passwordIsVisible ? hidePasswordLabel : showPasswordLabel), passwordVisibilityIcon));\n\n  var _useContext = useContext(FormContext),\n      isFluid = _useContext.isFluid;\n\n  useEffect(function () {\n    setInputType(type);\n  }, [type]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputWrapperClasses\n  }, !inline ? label : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__label-helper-wrapper\")\n  }, label, !isFluid && helper), /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldOuterWrapperClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldWrapperClasses,\n    \"data-invalid\": normalizedProps.invalid || null\n  }, normalizedProps.icon && /*#__PURE__*/React.createElement(normalizedProps.icon, {\n    className: iconClasses\n  }), input, isFluid && !inline && normalizedProps.validation), !isFluid && !inline && (normalizedProps.validation || helper)));\n});\nPasswordInput.displayName = 'PasswordInput';\nPasswordInput.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<input>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  hidePasswordLabel: PropTypes.string,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * `true` to use the inline version.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function that is called whenever the toggle password visibility\n   * button is clicked\n   */\n  onTogglePasswordVisibility: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  showPasswordLabel: PropTypes.string,\n\n  /**\n   * Specify the size of the Text Input. Supports `sm`, `md`, or `lg`.\n   */\n  size: FeatureFlags.enabled('enable-v11-release') ? PropTypes.oneOf(['sm', 'md', 'lg']) : PropTypes.string,\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The input type, either password or text\n   */\n  type: PropTypes.oneOf(['password', 'text']),\n\n  /**\n   * Provide the current value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nexport default PasswordInput;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/TextInput/PasswordInput.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","useContext","useEffect","useState","classNames","PropTypes","View16","ViewOff16","useNormalizedInputProps","textInputProps","FormContext","FeatureFlags","usePrefix","PasswordInput","forwardRef","_ref","ref","_classNames","_classNames2","_classNames3","_classNames4","_classNames7","_classNames8","className","_ref$disabled","disabled","helperText","hideLabel","_ref$hidePasswordLabe","hidePasswordLabel","id","inline","_ref$invalid","invalid","invalidText","labelText","_ref$light","light","_ref$onChange","onChange","_onChange","_ref$onClick","onClick","_onClick","onTogglePasswordVisibility","placeholder","_ref$size","size","_ref$showPasswordLabe","showPasswordLabel","_ref$tooltipPosition","tooltipPosition","_ref$tooltipAlignment","tooltipAlignment","_ref$type","type","warn","warnText","rest","_useState","_useState2","inputType","setInputType","prefix","normalizedProps","handleTogglePasswordVisibility","event","textInputClasses","concat","sharedTextInputProps","evt","inputWrapperClasses","labelClasses","helperTextClasses","fieldOuterWrapperClasses","fieldWrapperClasses","iconClasses","label","createElement","htmlFor","helper","passwordIsVisible","passwordVisibilityIcon","passwordVisibilityToggleClasses","input","Fragment","invalidId","warnId","_useContext","isFluid","icon","validation","displayName","propTypes","string","defaultValue","oneOfType","number","bool","node","isRequired","func","enabled","oneOf","value"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"disabled\", \"helperText\", \"hideLabel\", \"hidePasswordLabel\", \"id\", \"inline\", \"invalid\", \"invalidText\", \"labelText\", \"light\", \"onChange\", \"onClick\", \"onTogglePasswordVisibility\", \"placeholder\", \"size\", \"showPasswordLabel\", \"tooltipPosition\", \"tooltipAlignment\", \"type\", \"warn\", \"warnText\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { View16, ViewOff16 } from '@carbon/icons-react';\nimport { useNormalizedInputProps } from '../../internal/useNormalizedInputProps';\nimport { textInputProps } from './util';\nimport { FormContext } from '../FluidForm';\nimport * as FeatureFlags from '@carbon/feature-flags';\nimport { usePrefix } from '../../internal/usePrefix';\nvar PasswordInput = /*#__PURE__*/React.forwardRef(function PasswordInput(_ref, ref) {\n  var _classNames, _classNames2, _classNames3, _classNames4, _classNames7, _classNames8;\n\n  var className = _ref.className,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      helperText = _ref.helperText,\n      hideLabel = _ref.hideLabel,\n      _ref$hidePasswordLabe = _ref.hidePasswordLabel,\n      hidePasswordLabel = _ref$hidePasswordLabe === void 0 ? 'Hide password' : _ref$hidePasswordLabe,\n      id = _ref.id,\n      inline = _ref.inline,\n      _ref$invalid = _ref.invalid,\n      invalid = _ref$invalid === void 0 ? false : _ref$invalid,\n      invalidText = _ref.invalidText,\n      labelText = _ref.labelText,\n      _ref$light = _ref.light,\n      light = _ref$light === void 0 ? false : _ref$light,\n      _ref$onChange = _ref.onChange,\n      _onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$onClick = _ref.onClick,\n      _onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      onTogglePasswordVisibility = _ref.onTogglePasswordVisibility,\n      placeholder = _ref.placeholder,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'md' : _ref$size,\n      _ref$showPasswordLabe = _ref.showPasswordLabel,\n      showPasswordLabel = _ref$showPasswordLabe === void 0 ? 'Show password' : _ref$showPasswordLabe,\n      _ref$tooltipPosition = _ref.tooltipPosition,\n      tooltipPosition = _ref$tooltipPosition === void 0 ? 'bottom' : _ref$tooltipPosition,\n      _ref$tooltipAlignment = _ref.tooltipAlignment,\n      tooltipAlignment = _ref$tooltipAlignment === void 0 ? 'center' : _ref$tooltipAlignment,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'password' : _ref$type,\n      warn = _ref.warn,\n      warnText = _ref.warnText,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(type),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputType = _useState2[0],\n      setInputType = _useState2[1];\n\n  var prefix = usePrefix();\n  var normalizedProps = useNormalizedInputProps({\n    id: id,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText\n  });\n\n  var handleTogglePasswordVisibility = function handleTogglePasswordVisibility(event) {\n    setInputType(inputType === 'password' ? 'text' : 'password');\n    onTogglePasswordVisibility && onTogglePasswordVisibility(event);\n  };\n\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), normalizedProps.invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--warning\"), normalizedProps.warn), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--\").concat(size), size), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: inputType,\n    className: textInputClasses,\n    ref: ref\n  }, rest);\n\n  var inputWrapperClasses = classNames(\"\".concat(prefix, \"--form-item\"), \"\".concat(prefix, \"--text-input-wrapper\"), \"\".concat(prefix, \"--password-input-wrapper\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--light\"), light), _defineProperty(_classNames2, \"\".concat(prefix, \"--text-input-wrapper--inline\"), inline), _classNames2));\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--disabled\"), disabled), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline\"), inline), _defineProperty(_classNames3, \"\".concat(prefix, \"--label--inline--\").concat(size), inline && !!size), _classNames3));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--disabled\"), disabled), _defineProperty(_classNames4, \"\".concat(prefix, \"--form__helper-text--inline\"), inline), _classNames4));\n  var fieldOuterWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-outer-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-outer-wrapper--inline\"), inline));\n  var fieldWrapperClasses = classNames(\"\".concat(prefix, \"--text-input__field-wrapper\"), _defineProperty({}, \"\".concat(prefix, \"--text-input__field-wrapper--warning\"), normalizedProps.warn));\n  var iconClasses = classNames((_classNames7 = {}, _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon\"), normalizedProps.invalid || normalizedProps.warn), _defineProperty(_classNames7, \"\".concat(prefix, \"--text-input__invalid-icon--warning\"), normalizedProps.warn), _classNames7));\n  var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  var passwordIsVisible = inputType === 'text';\n  var passwordVisibilityIcon = passwordIsVisible ? /*#__PURE__*/React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : /*#__PURE__*/React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var passwordVisibilityToggleClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility__toggle\"), \"\".concat(prefix, \"--btn\"), \"\".concat(prefix, \"--btn--icon-only\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--a11y\"), (_classNames8 = {}, _defineProperty(_classNames8, \"\".concat(prefix, \"--btn--disabled\"), disabled), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--\").concat(tooltipPosition), tooltipPosition), _defineProperty(_classNames8, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), tooltipAlignment), _classNames8));\n  var input = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, textInputProps({\n    sharedTextInputProps: sharedTextInputProps,\n    invalid: normalizedProps.invalid,\n    invalidId: normalizedProps.invalidId,\n    warn: normalizedProps.warn,\n    warnId: normalizedProps.warnId\n  }), {\n    disabled: disabled,\n    \"data-toggle-password-visibility\": inputType === 'password'\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: passwordVisibilityToggleClasses,\n    disabled: disabled,\n    onClick: handleTogglePasswordVisibility\n  }, !disabled && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, passwordIsVisible ? hidePasswordLabel : showPasswordLabel), passwordVisibilityIcon));\n\n  var _useContext = useContext(FormContext),\n      isFluid = _useContext.isFluid;\n\n  useEffect(function () {\n    setInputType(type);\n  }, [type]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputWrapperClasses\n  }, !inline ? label : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__label-helper-wrapper\")\n  }, label, !isFluid && helper), /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldOuterWrapperClasses\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: fieldWrapperClasses,\n    \"data-invalid\": normalizedProps.invalid || null\n  }, normalizedProps.icon && /*#__PURE__*/React.createElement(normalizedProps.icon, {\n    className: iconClasses\n  }), input, isFluid && !inline && normalizedProps.validation), !isFluid && !inline && (normalizedProps.validation || helper)));\n});\nPasswordInput.displayName = 'PasswordInput';\nPasswordInput.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<input>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  hidePasswordLabel: PropTypes.string,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * `true` to use the inline version.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<input>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<input>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function that is called whenever the toggle password visibility\n   * button is clicked\n   */\n  onTogglePasswordVisibility: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<input>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  showPasswordLabel: PropTypes.string,\n\n  /**\n   * Specify the size of the Text Input. Supports `sm`, `md`, or `lg`.\n   */\n  size: FeatureFlags.enabled('enable-v11-release') ? PropTypes.oneOf(['sm', 'md', 'lg']) : PropTypes.string,\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * The input type, either password or text\n   */\n  type: PropTypes.oneOf(['password', 'text']),\n\n  /**\n   * Provide the current value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nexport default PasswordInput;"]},"metadata":{},"sourceType":"module"}