{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport CTALogic from './CTALogic';\nimport { LinkWithIcon } from '../LinkWithIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * Link subcomponent for CTA.\n */\n\nvar TextCTA = function TextCTA(_ref) {\n  var _otherProps$cta;\n\n  var type = _ref.type,\n      openLightBox = _ref.openLightBox,\n      renderLightBox = _ref.renderLightBox,\n      videoTitle = _ref.videoTitle,\n      formatCTAcopy = _ref.formatCTAcopy,\n      iconPlacement = _ref.iconPlacement,\n      otherProps = _objectWithoutProperties(_ref, [\"type\", \"openLightBox\", \"renderLightBox\", \"videoTitle\", \"formatCTAcopy\", \"iconPlacement\"]);\n\n  var Icon = CTALogic.iconSelector(type, iconPlacement);\n  var href = type !== 'video' ? otherProps.href ? otherProps.href : (_otherProps$cta = otherProps.cta) === null || _otherProps$cta === void 0 ? void 0 : _otherProps$cta.href : null;\n  return type === 'video' ? /*#__PURE__*/React.createElement(React.Fragment, null, CTALogic.launchLightBox(renderLightBox, openLightBox, otherProps.media), !renderLightBox && /*#__PURE__*/React.createElement(LinkWithIcon, _extends({\n    href: \"#\",\n    onClick: function onClick(e) {\n      return CTALogic.setLightBox(e, openLightBox);\n    },\n    iconInline: otherProps.iconInline\n  }, iconPlacement && {\n    iconPlacement: iconPlacement\n  }), /*#__PURE__*/React.createElement(\"span\", null, formatCTAcopy({\n    title: videoTitle[0].title,\n    duration: videoTitle[0].duration\n  })), /*#__PURE__*/React.createElement(Icon, null))) : /*#__PURE__*/React.createElement(LinkWithIcon, _extends({\n    href: href,\n    target: CTALogic.external(type),\n    onClick: function onClick(e) {\n      return CTALogic.jump(e, type);\n    },\n    iconInline: otherProps.iconInline\n  }, iconPlacement && {\n    iconPlacement: iconPlacement\n  }), /*#__PURE__*/React.createElement(\"span\", null, otherProps.copy), type !== 'default' && /*#__PURE__*/React.createElement(Icon, null));\n};\n\nTextCTA.propTypes = {\n  /**\n   * CTA type. Choose from:\n   *\n   * | Type       | SVG element Name | Description                                                      |\n   * | ---------- | ---------------- | ---------------------------------------------------------------- |\n   * | `local`    | ArrowRight20     | Describes right arrow onClick which loads in self page.          |\n   * | `jump`     | ArrowDown20      | Describes down arrow onClick which scrollToView of target.       |\n   * | `external` | Launch20         | Describes launch arrow onClick which loads in new tab.           |\n   * | `download` | Download20       | Describes download arrow onClick for downloading files.          |\n   * | `video`    | PlayOutline20    | Describes play icon onClick which loads the video in a lightbox. |\n   * | `default`  | None             | Describes the default CTA - without icon                         |\n   *\n   * For more details of icons, refer to:\n   *\n   * - [Icons library](https://www.carbondesignsystem.com/guidelines/icons/library/)!ðŸ‘€\n   * - [@carbon/icons-react](https://github.com/carbon-design-system/carbon/tree/main/packages/icons-react)!ðŸ‘€\n   * - [carbon-icons](https://www.npmjs.com/package/carbon-icons)!ðŸ‘€\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']))]),\n\n  /**\n   * Icon placement.\n   */\n  iconPlacement: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * Func to set renderLightBox state.\n   */\n  openLightBox: PropTypes.func,\n\n  /**\n   * Bool to determine whether to open lightbox.\n   */\n  renderLightBox: PropTypes.bool,\n\n  /**\n   * Array of video titles.\n   */\n  videoTitle: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    duration: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  })),\n\n  /**\n   * Func to format the cta copy\n   */\n  formatCTAcopy: PropTypes.func\n};\nTextCTA.defaultProps = {\n  type: 'default',\n  formatCTAcopy: function formatCTAcopy(_ref2) {\n    var title = _ref2.title,\n        duration = _ref2.duration;\n    return \"\".concat(title, \" \").concat(duration);\n  },\n  iconPlacement: 'right'\n};\nexport default TextCTA;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/CTA/TextCTA.js"],"names":["_extends","_objectWithoutProperties","CTALogic","LinkWithIcon","PropTypes","React","TextCTA","_ref","_otherProps$cta","type","openLightBox","renderLightBox","videoTitle","formatCTAcopy","iconPlacement","otherProps","Icon","iconSelector","href","cta","createElement","Fragment","launchLightBox","media","onClick","e","setLightBox","iconInline","title","duration","target","external","jump","copy","propTypes","oneOfType","oneOf","arrayOf","func","bool","shape","string","key","number","defaultProps","_ref2","concat"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport CTALogic from './CTALogic';\nimport { LinkWithIcon } from '../LinkWithIcon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * Link subcomponent for CTA.\n */\n\nvar TextCTA = function TextCTA(_ref) {\n  var _otherProps$cta;\n\n  var type = _ref.type,\n      openLightBox = _ref.openLightBox,\n      renderLightBox = _ref.renderLightBox,\n      videoTitle = _ref.videoTitle,\n      formatCTAcopy = _ref.formatCTAcopy,\n      iconPlacement = _ref.iconPlacement,\n      otherProps = _objectWithoutProperties(_ref, [\"type\", \"openLightBox\", \"renderLightBox\", \"videoTitle\", \"formatCTAcopy\", \"iconPlacement\"]);\n\n  var Icon = CTALogic.iconSelector(type, iconPlacement);\n  var href = type !== 'video' ? otherProps.href ? otherProps.href : (_otherProps$cta = otherProps.cta) === null || _otherProps$cta === void 0 ? void 0 : _otherProps$cta.href : null;\n  return type === 'video' ? /*#__PURE__*/React.createElement(React.Fragment, null, CTALogic.launchLightBox(renderLightBox, openLightBox, otherProps.media), !renderLightBox && /*#__PURE__*/React.createElement(LinkWithIcon, _extends({\n    href: \"#\",\n    onClick: function onClick(e) {\n      return CTALogic.setLightBox(e, openLightBox);\n    },\n    iconInline: otherProps.iconInline\n  }, iconPlacement && {\n    iconPlacement: iconPlacement\n  }), /*#__PURE__*/React.createElement(\"span\", null, formatCTAcopy({\n    title: videoTitle[0].title,\n    duration: videoTitle[0].duration\n  })), /*#__PURE__*/React.createElement(Icon, null))) : /*#__PURE__*/React.createElement(LinkWithIcon, _extends({\n    href: href,\n    target: CTALogic.external(type),\n    onClick: function onClick(e) {\n      return CTALogic.jump(e, type);\n    },\n    iconInline: otherProps.iconInline\n  }, iconPlacement && {\n    iconPlacement: iconPlacement\n  }), /*#__PURE__*/React.createElement(\"span\", null, otherProps.copy), type !== 'default' && /*#__PURE__*/React.createElement(Icon, null));\n};\n\nTextCTA.propTypes = {\n  /**\n   * CTA type. Choose from:\n   *\n   * | Type       | SVG element Name | Description                                                      |\n   * | ---------- | ---------------- | ---------------------------------------------------------------- |\n   * | `local`    | ArrowRight20     | Describes right arrow onClick which loads in self page.          |\n   * | `jump`     | ArrowDown20      | Describes down arrow onClick which scrollToView of target.       |\n   * | `external` | Launch20         | Describes launch arrow onClick which loads in new tab.           |\n   * | `download` | Download20       | Describes download arrow onClick for downloading files.          |\n   * | `video`    | PlayOutline20    | Describes play icon onClick which loads the video in a lightbox. |\n   * | `default`  | None             | Describes the default CTA - without icon                         |\n   *\n   * For more details of icons, refer to:\n   *\n   * - [Icons library](https://www.carbondesignsystem.com/guidelines/icons/library/)!ðŸ‘€\n   * - [@carbon/icons-react](https://github.com/carbon-design-system/carbon/tree/main/packages/icons-react)!ðŸ‘€\n   * - [carbon-icons](https://www.npmjs.com/package/carbon-icons)!ðŸ‘€\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']))]),\n\n  /**\n   * Icon placement.\n   */\n  iconPlacement: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * Func to set renderLightBox state.\n   */\n  openLightBox: PropTypes.func,\n\n  /**\n   * Bool to determine whether to open lightbox.\n   */\n  renderLightBox: PropTypes.bool,\n\n  /**\n   * Array of video titles.\n   */\n  videoTitle: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    duration: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  })),\n\n  /**\n   * Func to format the cta copy\n   */\n  formatCTAcopy: PropTypes.func\n};\nTextCTA.defaultProps = {\n  type: 'default',\n  formatCTAcopy: function formatCTAcopy(_ref2) {\n    var title = _ref2.title,\n        duration = _ref2.duration;\n    return \"\".concat(title, \" \").concat(duration);\n  },\n  iconPlacement: 'right'\n};\nexport default TextCTA;"]},"metadata":{},"sourceType":"module"}