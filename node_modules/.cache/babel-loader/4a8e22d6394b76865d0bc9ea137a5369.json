{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ContentGroup from '../ContentGroup/ContentGroup';\nimport ContentItem from '../ContentItem/ContentItem';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ImageWithCaption } from '../ImageWithCaption';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { VideoPlayer } from '../VideoPlayer';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Content Block - Segmented pattern.\n */\n\nvar ContentBlockSegmented = function ContentBlockSegmented(_ref) {\n  var copy = _ref.copy,\n      cta = _ref.cta,\n      heading = _ref.heading,\n      mediaType = _ref.mediaType,\n      mediaData = _ref.mediaData,\n      items = _ref.items,\n      aside = _ref.aside,\n      border = _ref.border;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented\"),\n    className: cx(\"\".concat(prefix, \"--content-block-segmented\"), _defineProperty({}, \"\".concat(prefix, \"--content-block-segmented-border\"), border || aside && aside.border))\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    copy: copy,\n    cta: cta,\n    aside: aside,\n    border: border\n  }, _renderMedia(mediaType, mediaData), _renderGroup(items)));\n};\n/**\n * renders either video or image content\n *\n * @param {string} type cta type ( external | jump | local)\n * @param {object} data cta type ( external | jump | local)\n * @private\n * @returns {*} media component\n */\n\n\nvar _renderMedia = function _renderMedia(type, data) {\n  if (data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented__media\")\n    }, type === 'image' && /*#__PURE__*/React.createElement(ImageWithCaption, data), type === 'video' && /*#__PURE__*/React.createElement(VideoPlayer, data));\n  }\n};\n/**\n *\n * @param {object} items content item data\n * @returns {*} JSX Component with the media\n */\n\n\nvar _renderGroup = function _renderGroup(items) {\n  return items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ContentGroup, {\n      heading: item.heading,\n      key: index,\n      cta: item.cta && (item.cta.type === 'jump' || item.cta.type === 'local') ? _objectSpread({\n        style: 'text'\n      }, item.cta) : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented__content-group\")\n    }, /*#__PURE__*/React.createElement(ContentItem, {\n      copy: item.copy,\n      key: index\n    }), (item.image || item.video) && /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented__media\")\n    }, item.image && /*#__PURE__*/React.createElement(ImageWithCaption, item.image), item.video && /*#__PURE__*/React.createElement(VideoPlayer, item.video))));\n  });\n};\n\nContentBlockSegmented.propTypes = {\n  /**\n   * Main title of pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Short copy to suppport title.\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Supports `text` and `card` styles.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['text', 'card']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    heading: PropTypes.string,\n    href: PropTypes.string,\n    customClassName: PropTypes.string\n  }),\n\n  /**\n   * Determines media type (image or video).\n   */\n  mediaType: PropTypes.oneOf(['image', 'video']),\n\n  /**\n   * Media Data for either image or video.\n   * See the following components' README for more details:\n   *\n   * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n   * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n   */\n  mediaData: PropTypes.oneOfType([PropTypes.shape({\n    inverse: PropTypes.bool,\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }).isRequired,\n    lightbox: PropTypes.bool,\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  }), PropTypes.shape({\n    customClassName: PropTypes.string,\n    videoId: PropTypes.string.isRequired,\n    showCaption: PropTypes.bool,\n    inverse: PropTypes.bool\n  })]),\n\n  /**\n   * Array of content items to render. Has the following structure for each items:\n   *\n   * | Name      | Required | Data Type | Description                                                                                                                                                                                                             |\n   * | --------- | -------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n   * | `heading` | YES      | String    | Short copy describing content item.                                                                                                                                                                                     |\n   * | `image`   | NO       | Object    | See the [`Image`](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/react/src/components/Image) component for full usage details.                                                         |\n   * | `cta`     | NO       | Object    | `jump` and `local` types are allowed, for more information, see the [`CTA`](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/react/src/components/CTA) component for full usage details. |\n   * | `copy`    | YES      | String    | Item content.                                                                                                                                                                                                           |\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    image: PropTypes.shape({\n      inverse: PropTypes.bool,\n      image: PropTypes.shape({\n        classname: PropTypes.string,\n        sources: PropTypes.arrayOf(PropTypes.shape({\n          src: PropTypes.string,\n          breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        })),\n        defaultSrc: PropTypes.string.isRequired,\n        alt: PropTypes.string.isRequired,\n        longDescription: PropTypes.string\n      }).isRequired,\n      lightbox: PropTypes.bool,\n      heading: PropTypes.string,\n      copy: PropTypes.string,\n      customClassName: PropTypes.string\n    }),\n    cta: PropTypes.shape({\n      style: PropTypes.oneOf(['card']),\n      type: PropTypes.oneOf(['local']),\n      heading: PropTypes.string,\n      customClassName: PropTypes.string\n    }),\n    video: PropTypes.shape({\n      customClassName: PropTypes.string,\n      videoId: PropTypes.string.isRequired,\n      showCaption: PropTypes.bool,\n      inverse: PropTypes.bool\n    })\n  })).isRequired,\n\n  /**\n   * Object containing elements to be rendered within <aside> html element on right panel.\n   * The structure is:\n   *\n   * | Name     | Data Type | Description                                                |\n   * | -------- | --------- | ---------------------------------------------------------- |\n   * | `items`  | Element   | Elements/Components to be rendered on the right panel.     |\n   * | `border` | Boolean   | Determines whether bottom border of `ContentBlock` is set. |\n   */\n  aside: PropTypes.shape({\n    items: PropTypes.element,\n    border: PropTypes.bool\n  }),\n\n  /**\n   * Boolean to show border without aside elements.\n   */\n  border: PropTypes.bool\n};\nexport default ContentBlockSegmented;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ContentBlockSegmented/ContentBlockSegmented.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ContentBlock","ContentGroup","ContentItem","cx","ddsSettings","ImageWithCaption","PropTypes","React","settings","VideoPlayer","stablePrefix","prefix","ContentBlockSegmented","_ref","copy","cta","heading","mediaType","mediaData","items","aside","border","createElement","concat","className","_renderMedia","_renderGroup","type","data","map","item","index","style","undefined","image","video","propTypes","string","isRequired","shape","oneOf","oneOfType","arrayOf","href","customClassName","inverse","bool","classname","sources","src","breakpoint","number","defaultSrc","alt","longDescription","lightbox","videoId","showCaption","element"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ContentGroup from '../ContentGroup/ContentGroup';\nimport ContentItem from '../ContentItem/ContentItem';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { ImageWithCaption } from '../ImageWithCaption';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { VideoPlayer } from '../VideoPlayer';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Content Block - Segmented pattern.\n */\n\nvar ContentBlockSegmented = function ContentBlockSegmented(_ref) {\n  var copy = _ref.copy,\n      cta = _ref.cta,\n      heading = _ref.heading,\n      mediaType = _ref.mediaType,\n      mediaData = _ref.mediaData,\n      items = _ref.items,\n      aside = _ref.aside,\n      border = _ref.border;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented\"),\n    className: cx(\"\".concat(prefix, \"--content-block-segmented\"), _defineProperty({}, \"\".concat(prefix, \"--content-block-segmented-border\"), border || aside && aside.border))\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    copy: copy,\n    cta: cta,\n    aside: aside,\n    border: border\n  }, _renderMedia(mediaType, mediaData), _renderGroup(items)));\n};\n/**\n * renders either video or image content\n *\n * @param {string} type cta type ( external | jump | local)\n * @param {object} data cta type ( external | jump | local)\n * @private\n * @returns {*} media component\n */\n\n\nvar _renderMedia = function _renderMedia(type, data) {\n  if (data) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented__media\")\n    }, type === 'image' && /*#__PURE__*/React.createElement(ImageWithCaption, data), type === 'video' && /*#__PURE__*/React.createElement(VideoPlayer, data));\n  }\n};\n/**\n *\n * @param {object} items content item data\n * @returns {*} JSX Component with the media\n */\n\n\nvar _renderGroup = function _renderGroup(items) {\n  return items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ContentGroup, {\n      heading: item.heading,\n      key: index,\n      cta: item.cta && (item.cta.type === 'jump' || item.cta.type === 'local') ? _objectSpread({\n        style: 'text'\n      }, item.cta) : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented__content-group\")\n    }, /*#__PURE__*/React.createElement(ContentItem, {\n      copy: item.copy,\n      key: index\n    }), (item.image || item.video) && /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-segmented__media\")\n    }, item.image && /*#__PURE__*/React.createElement(ImageWithCaption, item.image), item.video && /*#__PURE__*/React.createElement(VideoPlayer, item.video))));\n  });\n};\n\nContentBlockSegmented.propTypes = {\n  /**\n   * Main title of pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Short copy to suppport title.\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Supports `text` and `card` styles.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['text', 'card']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    heading: PropTypes.string,\n    href: PropTypes.string,\n    customClassName: PropTypes.string\n  }),\n\n  /**\n   * Determines media type (image or video).\n   */\n  mediaType: PropTypes.oneOf(['image', 'video']),\n\n  /**\n   * Media Data for either image or video.\n   * See the following components' README for more details:\n   *\n   * * `mediaType=\"image\"`: [`<ImageWithCaption>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-imagewithcaption--default#props)\n   * * `mediaType=\"video\"`: [`<VideoPlayer>`](http://www.ibm.com/standards/carbon/react/?path=/docs/components-videoplayer--default#props)\n   */\n  mediaData: PropTypes.oneOfType([PropTypes.shape({\n    inverse: PropTypes.bool,\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }).isRequired,\n    lightbox: PropTypes.bool,\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  }), PropTypes.shape({\n    customClassName: PropTypes.string,\n    videoId: PropTypes.string.isRequired,\n    showCaption: PropTypes.bool,\n    inverse: PropTypes.bool\n  })]),\n\n  /**\n   * Array of content items to render. Has the following structure for each items:\n   *\n   * | Name      | Required | Data Type | Description                                                                                                                                                                                                             |\n   * | --------- | -------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n   * | `heading` | YES      | String    | Short copy describing content item.                                                                                                                                                                                     |\n   * | `image`   | NO       | Object    | See the [`Image`](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/react/src/components/Image) component for full usage details.                                                         |\n   * | `cta`     | NO       | Object    | `jump` and `local` types are allowed, for more information, see the [`CTA`](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/react/src/components/CTA) component for full usage details. |\n   * | `copy`    | YES      | String    | Item content.                                                                                                                                                                                                           |\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    heading: PropTypes.string,\n    copy: PropTypes.string,\n    image: PropTypes.shape({\n      inverse: PropTypes.bool,\n      image: PropTypes.shape({\n        classname: PropTypes.string,\n        sources: PropTypes.arrayOf(PropTypes.shape({\n          src: PropTypes.string,\n          breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        })),\n        defaultSrc: PropTypes.string.isRequired,\n        alt: PropTypes.string.isRequired,\n        longDescription: PropTypes.string\n      }).isRequired,\n      lightbox: PropTypes.bool,\n      heading: PropTypes.string,\n      copy: PropTypes.string,\n      customClassName: PropTypes.string\n    }),\n    cta: PropTypes.shape({\n      style: PropTypes.oneOf(['card']),\n      type: PropTypes.oneOf(['local']),\n      heading: PropTypes.string,\n      customClassName: PropTypes.string\n    }),\n    video: PropTypes.shape({\n      customClassName: PropTypes.string,\n      videoId: PropTypes.string.isRequired,\n      showCaption: PropTypes.bool,\n      inverse: PropTypes.bool\n    })\n  })).isRequired,\n\n  /**\n   * Object containing elements to be rendered within <aside> html element on right panel.\n   * The structure is:\n   *\n   * | Name     | Data Type | Description                                                |\n   * | -------- | --------- | ---------------------------------------------------------- |\n   * | `items`  | Element   | Elements/Components to be rendered on the right panel.     |\n   * | `border` | Boolean   | Determines whether bottom border of `ContentBlock` is set. |\n   */\n  aside: PropTypes.shape({\n    items: PropTypes.element,\n    border: PropTypes.bool\n  }),\n\n  /**\n   * Boolean to show border without aside elements.\n   */\n  border: PropTypes.bool\n};\nexport default ContentBlockSegmented;"]},"metadata":{},"sourceType":"module"}