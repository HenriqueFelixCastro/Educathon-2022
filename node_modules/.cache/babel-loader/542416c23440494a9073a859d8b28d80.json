{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"className\", \"children\", \"definition\", \"defaultOpen\", \"id\", \"tooltipText\", \"triggerClassName\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Popover, PopoverContent } from '../../Popover';\nimport { match, keys } from '../../../internal/keyboard';\nimport { useFallbackId } from '../../../internal/useId';\nimport { usePrefix } from '../../../internal/usePrefix';\nimport deprecate from '../../../prop-types/deprecate';\n\nfunction DefinitionTooltip(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'bottom-left' : _ref$align,\n      className = _ref.className,\n      children = _ref.children,\n      definition = _ref.definition,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      id = _ref.id,\n      tooltipText = _ref.tooltipText,\n      triggerClassName = _ref.triggerClassName,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(defaultOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var prefix = usePrefix();\n  var tooltipId = useFallbackId(id);\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, keys.Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Popover, {\n    align: align,\n    className: className,\n    dropShadow: false,\n    highContrast: true,\n    onMouseLeave: function onMouseLeave() {\n      setOpen(false);\n    },\n    open: isOpen\n  }, /*#__PURE__*/React.createElement(\"button\", _extends({}, rest, {\n    className: cx(\"\".concat(prefix, \"--definition-term\"), triggerClassName),\n    \"aria-controls\": tooltipId,\n    \"aria-expanded\": isOpen,\n    onBlur: function onBlur() {\n      setOpen(false);\n    },\n    onClick: function onClick() {\n      setOpen(!isOpen);\n    },\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }), children), /*#__PURE__*/React.createElement(PopoverContent, {\n    className: \"\".concat(prefix, \"--definition-tooltip\"),\n    id: tooltipId\n  }, tooltipText !== null && tooltipText !== void 0 ? tooltipText : definition));\n}\n\nDefinitionTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right']),\n\n  /**\n   * The `children` prop will be used as the value that is being defined\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * The `definition` prop is used as the content inside of the tooltip that\n   * appears when a user interacts with the element rendered by the `children`\n   * prop\n   */\n  definition: PropTypes.node.isRequired,\n\n  /**\n   * Provide a value that will be assigned as the id of the tooltip\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Deprecated] Please use the `definition` prop instead.\n   *\n   * Provide the text that will be displayed in the tooltip when it is rendered.\n   */\n  tooltipText: deprecate(PropTypes.node, 'The tooltipText prop has been deprecated. Please use the `definition` prop instead.'),\n\n  /**\n   * The CSS class name of the trigger element\n   */\n  triggerClassName: PropTypes.string\n};\nexport { DefinitionTooltip };","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/Tooltip/next/DefinitionTooltip.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","cx","PropTypes","React","useState","Popover","PopoverContent","match","keys","useFallbackId","usePrefix","deprecate","DefinitionTooltip","_ref","_ref$align","align","className","children","definition","_ref$defaultOpen","defaultOpen","id","tooltipText","triggerClassName","rest","_useState","_useState2","isOpen","setOpen","prefix","tooltipId","onKeyDown","event","Escape","stopPropagation","createElement","dropShadow","highContrast","onMouseLeave","open","concat","onBlur","onClick","type","propTypes","oneOf","node","isRequired","string","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"className\", \"children\", \"definition\", \"defaultOpen\", \"id\", \"tooltipText\", \"triggerClassName\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Popover, PopoverContent } from '../../Popover';\nimport { match, keys } from '../../../internal/keyboard';\nimport { useFallbackId } from '../../../internal/useId';\nimport { usePrefix } from '../../../internal/usePrefix';\nimport deprecate from '../../../prop-types/deprecate';\n\nfunction DefinitionTooltip(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'bottom-left' : _ref$align,\n      className = _ref.className,\n      children = _ref.children,\n      definition = _ref.definition,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      id = _ref.id,\n      tooltipText = _ref.tooltipText,\n      triggerClassName = _ref.triggerClassName,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(defaultOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var prefix = usePrefix();\n  var tooltipId = useFallbackId(id);\n\n  function onKeyDown(event) {\n    if (isOpen && match(event, keys.Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Popover, {\n    align: align,\n    className: className,\n    dropShadow: false,\n    highContrast: true,\n    onMouseLeave: function onMouseLeave() {\n      setOpen(false);\n    },\n    open: isOpen\n  }, /*#__PURE__*/React.createElement(\"button\", _extends({}, rest, {\n    className: cx(\"\".concat(prefix, \"--definition-term\"), triggerClassName),\n    \"aria-controls\": tooltipId,\n    \"aria-expanded\": isOpen,\n    onBlur: function onBlur() {\n      setOpen(false);\n    },\n    onClick: function onClick() {\n      setOpen(!isOpen);\n    },\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }), children), /*#__PURE__*/React.createElement(PopoverContent, {\n    className: \"\".concat(prefix, \"--definition-tooltip\"),\n    id: tooltipId\n  }, tooltipText !== null && tooltipText !== void 0 ? tooltipText : definition));\n}\n\nDefinitionTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right']),\n\n  /**\n   * The `children` prop will be used as the value that is being defined\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * The `definition` prop is used as the content inside of the tooltip that\n   * appears when a user interacts with the element rendered by the `children`\n   * prop\n   */\n  definition: PropTypes.node.isRequired,\n\n  /**\n   * Provide a value that will be assigned as the id of the tooltip\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Deprecated] Please use the `definition` prop instead.\n   *\n   * Provide the text that will be displayed in the tooltip when it is rendered.\n   */\n  tooltipText: deprecate(PropTypes.node, 'The tooltipText prop has been deprecated. Please use the `definition` prop instead.'),\n\n  /**\n   * The CSS class name of the trigger element\n   */\n  triggerClassName: PropTypes.string\n};\nexport { DefinitionTooltip };"]},"metadata":{},"sourceType":"module"}