{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"children\", \"colSpan\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport TableCell from './TableCell';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar TableExpandedRow = function TableExpandedRow(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      colSpan = _ref.colSpan,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var rowRef = useRef(null);\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--expandable-row\"), customClassName);\n\n  var toggleParentHoverClass = function toggleParentHoverClass(eventType) {\n    if (rowRef && rowRef.current && rowRef.current.previousElementSibling) {\n      var parentNode = rowRef.current.previousElementSibling;\n\n      if (eventType === 'enter') {\n        parentNode.classList.add(\"\".concat(prefix, \"--expandable-row--hover\"));\n      } else {\n        parentNode.classList.remove(\"\".concat(prefix, \"--expandable-row--hover\"));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", _extends({\n    ref: rowRef,\n    onMouseEnter: function onMouseEnter() {\n      return toggleParentHoverClass('enter');\n    },\n    onMouseLeave: function onMouseLeave() {\n      return toggleParentHoverClass('leave');\n    }\n  }, rest, {\n    className: className,\n    \"data-child-row\": true\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: colSpan\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--child-row-inner-container\")\n  }, children)));\n};\n\nTableExpandedRow.propTypes = {\n  /**\n   * Pass in the contents for your TableExpandedRow\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the expanded row's internal cell\n   */\n  colSpan: PropTypes.number.isRequired\n};\nexport default TableExpandedRow;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/DataTable/TableExpandedRow.js"],"names":["_extends","_objectWithoutProperties","_excluded","cx","PropTypes","React","useRef","TableCell","usePrefix","TableExpandedRow","_ref","customClassName","className","children","colSpan","rest","rowRef","prefix","concat","toggleParentHoverClass","eventType","current","previousElementSibling","parentNode","classList","add","remove","createElement","ref","onMouseEnter","onMouseLeave","propTypes","node","string","number","isRequired"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,wBAAP,MAAqC,gDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIC,eAAe,GAAGD,IAAI,CAACE,SAA3B;AAAA,MACIC,QAAQ,GAAGH,IAAI,CAACG,QADpB;AAAA,MAEIC,OAAO,GAAGJ,IAAI,CAACI,OAFnB;AAAA,MAGIC,IAAI,GAAGd,wBAAwB,CAACS,IAAD,EAAOR,SAAP,CAHnC;;AAKA,MAAIc,MAAM,GAAGV,MAAM,CAAC,IAAD,CAAnB;AACA,MAAIW,MAAM,GAAGT,SAAS,EAAtB;AACA,MAAII,SAAS,GAAGT,EAAE,CAAC,GAAGe,MAAH,CAAUD,MAAV,EAAkB,kBAAlB,CAAD,EAAwCN,eAAxC,CAAlB;;AAEA,MAAIQ,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,SAAhC,EAA2C;AACtE,QAAIJ,MAAM,IAAIA,MAAM,CAACK,OAAjB,IAA4BL,MAAM,CAACK,OAAP,CAAeC,sBAA/C,EAAuE;AACrE,UAAIC,UAAU,GAAGP,MAAM,CAACK,OAAP,CAAeC,sBAAhC;;AAEA,UAAIF,SAAS,KAAK,OAAlB,EAA2B;AACzBG,QAAAA,UAAU,CAACC,SAAX,CAAqBC,GAArB,CAAyB,GAAGP,MAAH,CAAUD,MAAV,EAAkB,yBAAlB,CAAzB;AACD,OAFD,MAEO;AACLM,QAAAA,UAAU,CAACC,SAAX,CAAqBE,MAArB,CAA4B,GAAGR,MAAH,CAAUD,MAAV,EAAkB,yBAAlB,CAA5B;AACD;AACF;AACF,GAVD;;AAYA,SAAO,aAAaZ,KAAK,CAACsB,aAAN,CAAoB,IAApB,EAA0B3B,QAAQ,CAAC;AACrD4B,IAAAA,GAAG,EAAEZ,MADgD;AAErDa,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,aAAOV,sBAAsB,CAAC,OAAD,CAA7B;AACD,KAJoD;AAKrDW,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,aAAOX,sBAAsB,CAAC,OAAD,CAA7B;AACD;AAPoD,GAAD,EAQnDJ,IARmD,EAQ7C;AACPH,IAAAA,SAAS,EAAEA,SADJ;AAEP,sBAAkB;AAFX,GAR6C,CAAlC,EAWhB,aAAaP,KAAK,CAACsB,aAAN,CAAoBpB,SAApB,EAA+B;AAC9CO,IAAAA,OAAO,EAAEA;AADqC,GAA/B,EAEd,aAAaT,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AACzCf,IAAAA,SAAS,EAAE,GAAGM,MAAH,CAAUD,MAAV,EAAkB,6BAAlB;AAD8B,GAA3B,EAEbJ,QAFa,CAFC,CAXG,CAApB;AAgBD,CAtCD;;AAwCAJ,gBAAgB,CAACsB,SAAjB,GAA6B;AAC3B;AACF;AACA;AACElB,EAAAA,QAAQ,EAAET,SAAS,CAAC4B,IAJO;;AAM3B;AACF;AACA;AACEpB,EAAAA,SAAS,EAAER,SAAS,CAAC6B,MATM;;AAW3B;AACF;AACA;AACEnB,EAAAA,OAAO,EAAEV,SAAS,CAAC8B,MAAV,CAAiBC;AAdC,CAA7B;AAgBA,eAAe1B,gBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"children\", \"colSpan\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport TableCell from './TableCell';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar TableExpandedRow = function TableExpandedRow(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      colSpan = _ref.colSpan,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var rowRef = useRef(null);\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--expandable-row\"), customClassName);\n\n  var toggleParentHoverClass = function toggleParentHoverClass(eventType) {\n    if (rowRef && rowRef.current && rowRef.current.previousElementSibling) {\n      var parentNode = rowRef.current.previousElementSibling;\n\n      if (eventType === 'enter') {\n        parentNode.classList.add(\"\".concat(prefix, \"--expandable-row--hover\"));\n      } else {\n        parentNode.classList.remove(\"\".concat(prefix, \"--expandable-row--hover\"));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", _extends({\n    ref: rowRef,\n    onMouseEnter: function onMouseEnter() {\n      return toggleParentHoverClass('enter');\n    },\n    onMouseLeave: function onMouseLeave() {\n      return toggleParentHoverClass('leave');\n    }\n  }, rest, {\n    className: className,\n    \"data-child-row\": true\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: colSpan\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--child-row-inner-container\")\n  }, children)));\n};\n\nTableExpandedRow.propTypes = {\n  /**\n   * Pass in the contents for your TableExpandedRow\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the expanded row's internal cell\n   */\n  colSpan: PropTypes.number.isRequired\n};\nexport default TableExpandedRow;"]},"metadata":{},"sourceType":"module"}