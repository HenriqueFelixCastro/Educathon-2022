{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport CTALogic from './CTALogic';\nimport { FeatureCard } from '../FeatureCard';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * FeatureCard subcomponent for CTA.\n */\n\nvar FeatureCTA = function FeatureCTA(_ref) {\n  var size = _ref.size,\n      type = _ref.type,\n      openLightBox = _ref.openLightBox,\n      renderLightBox = _ref.renderLightBox,\n      videoTitle = _ref.videoTitle,\n      formatCTAcopy = _ref.formatCTAcopy,\n      otherProps = _objectWithoutProperties(_ref, [\"size\", \"type\", \"openLightBox\", \"renderLightBox\", \"videoTitle\", \"formatCTAcopy\"]);\n\n  return type === 'video' ? /*#__PURE__*/React.createElement(\"div\", null, CTALogic.launchLightBox(renderLightBox, openLightBox, otherProps.card.cta.media), !renderLightBox && /*#__PURE__*/React.createElement(FeatureCard, {\n    card: _renderFeatureCard({\n      card: _objectSpread(_objectSpread({}, otherProps.card), {}, {\n        heading: formatCTAcopy({\n          title: videoTitle[0].title,\n          duration: videoTitle[0].duration\n        })\n      })\n    }),\n    size: size,\n    onClick: function onClick(e) {\n      return CTALogic.setLightBox(e, openLightBox);\n    }\n  })) : /*#__PURE__*/React.createElement(FeatureCard, {\n    card: _renderFeatureCard({\n      card: _objectSpread({}, otherProps.card)\n    }),\n    size: size\n  });\n};\n/**\n * sets featureCard\n *\n * @param {object} param param object\n * @param {object} param.card card object\n *\n * @private\n * @returns {*} object\n */\n\n\nvar _renderFeatureCard = function _renderFeatureCard(_ref2) {\n  var card = _ref2.card;\n  if (card.type === 'jump') card.cta.type = 'jump';else if (card.type === 'video') card.cta.href = '#';\n  card.cta = _objectSpread(_objectSpread({}, card.cta), {}, {\n    icon: {\n      src: CTALogic.iconSelector(card.cta.type)\n    }\n  });\n  card.type = 'link';\n  return card;\n};\n\nFeatureCTA.propTypes = {\n  /**\n   * Size of Feature Card. Choose from:\n   *\n   * | Name    | Description                                                  |\n   * | ------- | -------------------------------------------------------------|\n   * | `medium`| Default Feature Card variant                                 |\n   * | `large` | Large Feature Card variant that contains eyebrow and heading |\n   */\n  size: PropTypes.oneOf(['medium', 'large']),\n\n  /**\n   * CTA type. Choose from:\n   *\n   * | Type       | SVG element Name | Description                                                      |\n   * | ---------- | ---------------- | ---------------------------------------------------------------- |\n   * | `local`    | ArrowRight20     | Describes right arrow onClick which loads in self page.          |\n   * | `jump`     | ArrowDown20      | Describes down arrow onClick which scrollToView of target.       |\n   * | `external` | Launch20         | Describes launch arrow onClick which loads in new tab.           |\n   * | `download` | Download20       | Describes download arrow onClick for downloading files.          |\n   * | `video`    | PlayOutline20    | Describes play icon onClick which loads the video in a lightbox. |\n   * | `default`  | None             | Describes the default CTA - without icon                         |\n   *\n   * For more details of icons, refer to:\n   *\n   * - [Icons library](https://www.carbondesignsystem.com/guidelines/icons/library/)!ðŸ‘€\n   * - [@carbon/icons-react](https://github.com/carbon-design-system/carbon/tree/main/packages/icons-react)!ðŸ‘€\n   * - [carbon-icons](https://www.npmjs.com/package/carbon-icons)!ðŸ‘€\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']))]),\n\n  /**\n   * Func to set renderLightBox state.\n   */\n  openLightBox: PropTypes.func,\n\n  /**\n   * Bool to determine whether to open lightbox.\n   */\n  renderLightBox: PropTypes.bool,\n\n  /**\n   * Array of video titles.\n   */\n  videoTitle: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    duration: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  })),\n\n  /**\n   * Func to format the cta copy\n   */\n  formatCTAcopy: PropTypes.func\n};\nFeatureCTA.defaultProps = {\n  type: 'default',\n  formatCTAcopy: function formatCTAcopy(_ref3) {\n    var title = _ref3.title,\n        duration = _ref3.duration;\n    return \"\".concat(title, \" \").concat(duration);\n  }\n};\nexport default FeatureCTA;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/CTA/FeatureCTA.js"],"names":["_defineProperty","_objectWithoutProperties","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","CTALogic","FeatureCard","PropTypes","React","FeatureCTA","_ref","size","type","openLightBox","renderLightBox","videoTitle","formatCTAcopy","otherProps","createElement","launchLightBox","card","cta","media","_renderFeatureCard","heading","title","duration","onClick","e","setLightBox","_ref2","href","icon","src","iconSelector","propTypes","oneOf","oneOfType","arrayOf","func","bool","shape","string","number","defaultProps","_ref3","concat"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport CTALogic from './CTALogic';\nimport { FeatureCard } from '../FeatureCard';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * FeatureCard subcomponent for CTA.\n */\n\nvar FeatureCTA = function FeatureCTA(_ref) {\n  var size = _ref.size,\n      type = _ref.type,\n      openLightBox = _ref.openLightBox,\n      renderLightBox = _ref.renderLightBox,\n      videoTitle = _ref.videoTitle,\n      formatCTAcopy = _ref.formatCTAcopy,\n      otherProps = _objectWithoutProperties(_ref, [\"size\", \"type\", \"openLightBox\", \"renderLightBox\", \"videoTitle\", \"formatCTAcopy\"]);\n\n  return type === 'video' ? /*#__PURE__*/React.createElement(\"div\", null, CTALogic.launchLightBox(renderLightBox, openLightBox, otherProps.card.cta.media), !renderLightBox && /*#__PURE__*/React.createElement(FeatureCard, {\n    card: _renderFeatureCard({\n      card: _objectSpread(_objectSpread({}, otherProps.card), {}, {\n        heading: formatCTAcopy({\n          title: videoTitle[0].title,\n          duration: videoTitle[0].duration\n        })\n      })\n    }),\n    size: size,\n    onClick: function onClick(e) {\n      return CTALogic.setLightBox(e, openLightBox);\n    }\n  })) : /*#__PURE__*/React.createElement(FeatureCard, {\n    card: _renderFeatureCard({\n      card: _objectSpread({}, otherProps.card)\n    }),\n    size: size\n  });\n};\n/**\n * sets featureCard\n *\n * @param {object} param param object\n * @param {object} param.card card object\n *\n * @private\n * @returns {*} object\n */\n\n\nvar _renderFeatureCard = function _renderFeatureCard(_ref2) {\n  var card = _ref2.card;\n  if (card.type === 'jump') card.cta.type = 'jump';else if (card.type === 'video') card.cta.href = '#';\n  card.cta = _objectSpread(_objectSpread({}, card.cta), {}, {\n    icon: {\n      src: CTALogic.iconSelector(card.cta.type)\n    }\n  });\n  card.type = 'link';\n  return card;\n};\n\nFeatureCTA.propTypes = {\n  /**\n   * Size of Feature Card. Choose from:\n   *\n   * | Name    | Description                                                  |\n   * | ------- | -------------------------------------------------------------|\n   * | `medium`| Default Feature Card variant                                 |\n   * | `large` | Large Feature Card variant that contains eyebrow and heading |\n   */\n  size: PropTypes.oneOf(['medium', 'large']),\n\n  /**\n   * CTA type. Choose from:\n   *\n   * | Type       | SVG element Name | Description                                                      |\n   * | ---------- | ---------------- | ---------------------------------------------------------------- |\n   * | `local`    | ArrowRight20     | Describes right arrow onClick which loads in self page.          |\n   * | `jump`     | ArrowDown20      | Describes down arrow onClick which scrollToView of target.       |\n   * | `external` | Launch20         | Describes launch arrow onClick which loads in new tab.           |\n   * | `download` | Download20       | Describes download arrow onClick for downloading files.          |\n   * | `video`    | PlayOutline20    | Describes play icon onClick which loads the video in a lightbox. |\n   * | `default`  | None             | Describes the default CTA - without icon                         |\n   *\n   * For more details of icons, refer to:\n   *\n   * - [Icons library](https://www.carbondesignsystem.com/guidelines/icons/library/)!ðŸ‘€\n   * - [@carbon/icons-react](https://github.com/carbon-design-system/carbon/tree/main/packages/icons-react)!ðŸ‘€\n   * - [carbon-icons](https://www.npmjs.com/package/carbon-icons)!ðŸ‘€\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video', 'default']))]),\n\n  /**\n   * Func to set renderLightBox state.\n   */\n  openLightBox: PropTypes.func,\n\n  /**\n   * Bool to determine whether to open lightbox.\n   */\n  renderLightBox: PropTypes.bool,\n\n  /**\n   * Array of video titles.\n   */\n  videoTitle: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    duration: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  })),\n\n  /**\n   * Func to format the cta copy\n   */\n  formatCTAcopy: PropTypes.func\n};\nFeatureCTA.defaultProps = {\n  type: 'default',\n  formatCTAcopy: function formatCTAcopy(_ref3) {\n    var title = _ref3.title,\n        duration = _ref3.duration;\n    return \"\".concat(title, \" \").concat(duration);\n  }\n};\nexport default FeatureCTA;"]},"metadata":{},"sourceType":"module"}