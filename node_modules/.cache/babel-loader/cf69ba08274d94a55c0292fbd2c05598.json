{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useMatchMedia = useMatchMedia;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _environment = require(\"./environment\");\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction useMatchMedia(mediaQueryString) {\n  var _useState = (0, _react.useState)(function () {\n    if (_environment.canUseDOM) {\n      var mediaQueryList = window.matchMedia(mediaQueryString);\n      return mediaQueryList.matches;\n    }\n\n    return false;\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      matches = _useState2[0],\n      setMatches = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    function listener(event) {\n      setMatches(event.matches);\n    }\n\n    var mediaQueryList = window.matchMedia(mediaQueryString); // Support fallback to `addListener` for broader browser support\n\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    } // Make sure the media query list is in sync with the matches state\n\n\n    setMatches(mediaQueryList.matches);\n    return function () {\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [mediaQueryString]);\n  return matches;\n}","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/lib/internal/useMatchMedia.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useMatchMedia","_slicedToArray2","_react","_environment","mediaQueryString","_useState","useState","canUseDOM","mediaQueryList","window","matchMedia","matches","_useState2","default","setMatches","useEffect","listener","event","addEventListener","addListener","removeEventListener","removeListener"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIO,MAAM,GAAGP,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIQ,YAAY,GAAGR,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,aAAT,CAAuBI,gBAAvB,EAAyC;AACvC,MAAIC,SAAS,GAAG,CAAC,GAAGH,MAAM,CAACI,QAAX,EAAqB,YAAY;AAC/C,QAAIH,YAAY,CAACI,SAAjB,EAA4B;AAC1B,UAAIC,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBN,gBAAlB,CAArB;AACA,aAAOI,cAAc,CAACG,OAAtB;AACD;;AAED,WAAO,KAAP;AACD,GAPe,CAAhB;AAAA,MAQIC,UAAU,GAAG,CAAC,GAAGX,eAAe,CAACY,OAApB,EAA6BR,SAA7B,EAAwC,CAAxC,CARjB;AAAA,MASIM,OAAO,GAAGC,UAAU,CAAC,CAAD,CATxB;AAAA,MAUIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAV3B;;AAYA,GAAC,GAAGV,MAAM,CAACa,SAAX,EAAsB,YAAY;AAChC,aAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBH,MAAAA,UAAU,CAACG,KAAK,CAACN,OAAP,CAAV;AACD;;AAED,QAAIH,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkBN,gBAAlB,CAArB,CALgC,CAK0B;;AAE1D,QAAII,cAAc,CAACU,gBAAnB,EAAqC;AACnCV,MAAAA,cAAc,CAACU,gBAAf,CAAgC,QAAhC,EAA0CF,QAA1C;AACD,KAFD,MAEO;AACLR,MAAAA,cAAc,CAACW,WAAf,CAA2BH,QAA3B;AACD,KAX+B,CAW9B;;;AAGFF,IAAAA,UAAU,CAACN,cAAc,CAACG,OAAhB,CAAV;AACA,WAAO,YAAY;AACjB,UAAIH,cAAc,CAACU,gBAAnB,EAAqC;AACnCV,QAAAA,cAAc,CAACY,mBAAf,CAAmC,QAAnC,EAA6CJ,QAA7C;AACD,OAFD,MAEO;AACLR,QAAAA,cAAc,CAACa,cAAf,CAA8BL,QAA9B;AACD;AACF,KAND;AAOD,GAtBD,EAsBG,CAACZ,gBAAD,CAtBH;AAuBA,SAAOO,OAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useMatchMedia = useMatchMedia;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _environment = require(\"./environment\");\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction useMatchMedia(mediaQueryString) {\n  var _useState = (0, _react.useState)(function () {\n    if (_environment.canUseDOM) {\n      var mediaQueryList = window.matchMedia(mediaQueryString);\n      return mediaQueryList.matches;\n    }\n\n    return false;\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      matches = _useState2[0],\n      setMatches = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    function listener(event) {\n      setMatches(event.matches);\n    }\n\n    var mediaQueryList = window.matchMedia(mediaQueryString); // Support fallback to `addListener` for broader browser support\n\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    } // Make sure the media query list is in sync with the matches state\n\n\n    setMatches(mediaQueryList.matches);\n    return function () {\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [mediaQueryString]);\n  return matches;\n}"]},"metadata":{},"sourceType":"script"}