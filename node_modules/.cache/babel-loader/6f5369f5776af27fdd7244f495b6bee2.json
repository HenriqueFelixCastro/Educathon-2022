{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * Provide a stable reference for a callback that is passed as a prop to a\n * component. This is helpful when you want access to the latest version of a\n * callback prop but don't want it to be added to the dependency array of an\n * effect.\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nexport function useSavedCallback(callback) {\n  var savedCallback = useRef(callback);\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  return useCallback(function () {\n    if (savedCallback.current) {\n      return savedCallback.current();\n    }\n  }, []);\n}","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/internal/useSavedCallback.js"],"names":["useCallback","useEffect","useRef","useSavedCallback","callback","savedCallback","current"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,MAAIC,aAAa,GAAGH,MAAM,CAACE,QAAD,CAA1B;AACAH,EAAAA,SAAS,CAAC,YAAY;AACpBI,IAAAA,aAAa,CAACC,OAAd,GAAwBF,QAAxB;AACD,GAFQ,CAAT;AAGA,SAAOJ,WAAW,CAAC,YAAY;AAC7B,QAAIK,aAAa,CAACC,OAAlB,EAA2B;AACzB,aAAOD,aAAa,CAACC,OAAd,EAAP;AACD;AACF,GAJiB,EAIf,EAJe,CAAlB;AAKD","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * Provide a stable reference for a callback that is passed as a prop to a\n * component. This is helpful when you want access to the latest version of a\n * callback prop but don't want it to be added to the dependency array of an\n * effect.\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nexport function useSavedCallback(callback) {\n  var savedCallback = useRef(callback);\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  return useCallback(function () {\n    if (savedCallback.current) {\n      return savedCallback.current();\n    }\n  }, []);\n}"]},"metadata":{},"sourceType":"module"}