{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"id\", \"labelText\", \"hideLabel\", \"onChange\", \"onClick\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"placeholder\", \"enableCounter\", \"maxCount\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { WarningFilled16 } from '@carbon/icons-react';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport { usePrefix } from '../../internal/usePrefix';\nvar TextArea = /*#__PURE__*/React.forwardRef(function TextArea(_ref, ref) {\n  var _classNames, _classNames4;\n\n  var className = _ref.className,\n      id = _ref.id,\n      labelText = _ref.labelText,\n      hideLabel = _ref.hideLabel,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      placeholder = _ref.placeholder,\n      enableCounter = _ref.enableCounter,\n      maxCount = _ref.maxCount,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var enabled = useFeatureFlag('enable-v11-release');\n  var defaultValue = other.defaultValue,\n      value = other.value,\n      disabled = other.disabled;\n\n  var _useState = useState((defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length) || (value === null || value === void 0 ? void 0 : value.length) || 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      textCount = _useState2[0],\n      setTextCount = _useState2[1];\n\n  var textareaProps = {\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled) {\n        var _evt$target$value;\n\n        setTextCount((_evt$target$value = evt.target.value) === null || _evt$target$value === void 0 ? void 0 : _evt$target$value.length);\n\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled) {\n        _onClick(evt);\n      }\n    },\n    ref: ref\n  };\n\n  if (enableCounter) {\n    textareaProps.maxLength = maxCount;\n  }\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames, \"\".concat(prefix, \"--label--disabled\"), disabled), _classNames));\n  var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var counterClasses = classNames(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var counter = enableCounter && maxCount ? /*#__PURE__*/React.createElement(\"div\", {\n    className: counterClasses\n  }, \"\".concat(textCount, \"/\").concat(maxCount)) : null;\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  var errorId = id + '-error-msg';\n  var error = invalid ? /*#__PURE__*/React.createElement(\"div\", {\n    role: \"alert\",\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText) : null;\n  var textareaClasses = classNames(\"\".concat(prefix, \"--text-area\"), [enabled ? null : className], (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--text-area--light\"), light), _defineProperty(_classNames4, \"\".concat(prefix, \"--text-area--invalid\"), invalid), _classNames4));\n  var input = /*#__PURE__*/React.createElement(\"textarea\", _extends({}, other, textareaProps, {\n    placeholder: placeholder || null,\n    className: textareaClasses,\n    \"aria-invalid\": invalid || null,\n    \"aria-describedby\": invalid ? errorId : null,\n    disabled: other.disabled\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: enabled ? classNames(\"\".concat(prefix, \"--form-item\"), className) : \"\".concat(prefix, \"--form-item\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-area__label-wrapper\")\n  }, label, counter), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-area__wrapper\"),\n    \"data-invalid\": invalid || null\n  }, invalid && /*#__PURE__*/React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--text-area__invalid-icon\")\n  }), input), invalid ? error : helper);\n});\nTextArea.displayName = 'TextArea';\nTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTextArea.defaultProps = {\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  placeholder: '',\n  rows: 4,\n  cols: 50,\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false,\n  enableCounter: false,\n  maxCount: undefined\n};\nexport default TextArea;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/TextArea/TextArea.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","PropTypes","React","useState","classNames","WarningFilled16","useFeatureFlag","usePrefix","TextArea","forwardRef","_ref","ref","_classNames","_classNames4","className","id","labelText","hideLabel","_onChange","onChange","_onClick","onClick","invalid","invalidText","helperText","light","placeholder","enableCounter","maxCount","other","prefix","enabled","defaultValue","value","disabled","_useState","length","_useState2","textCount","setTextCount","textareaProps","evt","_evt$target$value","target","maxLength","labelClasses","concat","label","createElement","htmlFor","counterClasses","counter","helperTextClasses","helper","errorId","error","role","textareaClasses","input","displayName","propTypes","string","cols","number","oneOfType","bool","node","isRequired","func","rows","defaultProps","undefined"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"id\", \"labelText\", \"hideLabel\", \"onChange\", \"onClick\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"placeholder\", \"enableCounter\", \"maxCount\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { WarningFilled16 } from '@carbon/icons-react';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport { usePrefix } from '../../internal/usePrefix';\nvar TextArea = /*#__PURE__*/React.forwardRef(function TextArea(_ref, ref) {\n  var _classNames, _classNames4;\n\n  var className = _ref.className,\n      id = _ref.id,\n      labelText = _ref.labelText,\n      hideLabel = _ref.hideLabel,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      placeholder = _ref.placeholder,\n      enableCounter = _ref.enableCounter,\n      maxCount = _ref.maxCount,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var enabled = useFeatureFlag('enable-v11-release');\n  var defaultValue = other.defaultValue,\n      value = other.value,\n      disabled = other.disabled;\n\n  var _useState = useState((defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length) || (value === null || value === void 0 ? void 0 : value.length) || 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      textCount = _useState2[0],\n      setTextCount = _useState2[1];\n\n  var textareaProps = {\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled) {\n        var _evt$target$value;\n\n        setTextCount((_evt$target$value = evt.target.value) === null || _evt$target$value === void 0 ? void 0 : _evt$target$value.length);\n\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled) {\n        _onClick(evt);\n      }\n    },\n    ref: ref\n  };\n\n  if (enableCounter) {\n    textareaProps.maxLength = maxCount;\n  }\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames, \"\".concat(prefix, \"--label--disabled\"), disabled), _classNames));\n  var label = labelText ? /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var counterClasses = classNames(\"\".concat(prefix, \"--label\"), _defineProperty({}, \"\".concat(prefix, \"--label--disabled\"), disabled));\n  var counter = enableCounter && maxCount ? /*#__PURE__*/React.createElement(\"div\", {\n    className: counterClasses\n  }, \"\".concat(textCount, \"/\").concat(maxCount)) : null;\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var helper = helperText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  var errorId = id + '-error-msg';\n  var error = invalid ? /*#__PURE__*/React.createElement(\"div\", {\n    role: \"alert\",\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText) : null;\n  var textareaClasses = classNames(\"\".concat(prefix, \"--text-area\"), [enabled ? null : className], (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--text-area--light\"), light), _defineProperty(_classNames4, \"\".concat(prefix, \"--text-area--invalid\"), invalid), _classNames4));\n  var input = /*#__PURE__*/React.createElement(\"textarea\", _extends({}, other, textareaProps, {\n    placeholder: placeholder || null,\n    className: textareaClasses,\n    \"aria-invalid\": invalid || null,\n    \"aria-describedby\": invalid ? errorId : null,\n    disabled: other.disabled\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: enabled ? classNames(\"\".concat(prefix, \"--form-item\"), className) : \"\".concat(prefix, \"--form-item\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-area__label-wrapper\")\n  }, label, counter), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-area__wrapper\"),\n    \"data-invalid\": invalid || null\n  }, invalid && /*#__PURE__*/React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--text-area__invalid-icon\")\n  }), input), invalid ? error : helper);\n});\nTextArea.displayName = 'TextArea';\nTextArea.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * `<textarea>` node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the `cols` attribute for the underlying `<textarea>` node\n   */\n  cols: PropTypes.number,\n\n  /**\n   * Optionally provide the default value of the `<textarea>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether to display the character counter\n   */\n  enableCounter: PropTypes.bool,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the control\n   */\n  id: PropTypes.string,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.node,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Max character count allowed for the textarea. This is needed in order for enableCounter to display\n   */\n  maxCount: PropTypes.number,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever `<textarea>`\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * `<textarea>` is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the `<textarea>`\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Specify the rows attribute for the `<textarea>`\n   */\n  rows: PropTypes.number,\n\n  /**\n   * Provide the current value of the `<textarea>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTextArea.defaultProps = {\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  placeholder: '',\n  rows: 4,\n  cols: 50,\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false,\n  enableCounter: false,\n  maxCount: undefined\n};\nexport default TextArea;"]},"metadata":{},"sourceType":"module"}