{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useState } from 'react';\nimport CTALogic from '../CTA/CTALogic';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { Image } from '../Image';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport ZoomIn20 from '@carbon/icons-react/es/zoom--in/20';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Picture element.\n */\n\nvar ImageWithCaption = function ImageWithCaption(_ref) {\n  var image = _ref.image,\n      lightbox = _ref.lightbox,\n      heading = _ref.heading,\n      copy = _ref.copy,\n      customClassName = _ref.customClassName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      renderLightBox = _useState2[0],\n      openLightBox = _useState2[1];\n\n  if (!image) {\n    return null;\n  }\n\n  var classnames = cx(\"\".concat(prefix, \"--image-with-caption\"), customClassName);\n  var media = {\n    type: 'image',\n    src: image.defaultSrc,\n    title: heading,\n    alt: image.alt,\n    description: copy\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--image-with-caption\")\n  }, CTALogic.launchLightBox(renderLightBox, openLightBox, media), lightbox ? /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"launch light box media viewer\",\n    className: \"\".concat(prefix, \"--image-with-caption__image\"),\n    onClick: function onClick(e) {\n      return CTALogic.setLightBox(e, openLightBox);\n    }\n  }, /*#__PURE__*/React.createElement(Image, image), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--image-with-caption__zoom-button\")\n  }, /*#__PURE__*/React.createElement(ZoomIn20, {\n    \"aria-label\": \"Zoom In Icon\"\n  }))) : /*#__PURE__*/React.createElement(Image, image), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--image__caption\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--image__caption\")\n  }, heading));\n};\n\nImageWithCaption.propTypes = {\n  /**\n   * Image object needed for ImageWithCaption component.\n   * Visit the [Image storybook](https://www.ibm.com/standards/carbon/react/?path=/story/components-image--default)\n   * for more details on the Image component.\n   */\n  image: PropTypes.shape({\n    classname: PropTypes.string,\n    sources: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string,\n      breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    })),\n    defaultSrc: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    longDescription: PropTypes.string\n  }).isRequired,\n\n  /**\n   * `true` to enable lightbox functionality, allowing user to see enlarged image.\n   */\n  lightbox: PropTypes.bool,\n\n  /**\n   * Caption text.\n   */\n  heading: PropTypes.string,\n\n  /**\n   * More detailed description of the image.\n   */\n  copy: PropTypes.string,\n\n  /**\n   * The CSS class name to apply.\n   */\n  customClassName: PropTypes.string\n};\nImageWithCaption.defaultProps = {\n  copy: '',\n  lightbox: false\n};\nexport default ImageWithCaption;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ImageWithCaption/ImageWithCaption.js"],"names":["_slicedToArray","React","useState","CTALogic","cx","ddsSettings","Image","PropTypes","settings","ZoomIn20","stablePrefix","prefix","ImageWithCaption","_ref","image","lightbox","heading","copy","customClassName","_useState","_useState2","renderLightBox","openLightBox","classnames","concat","media","type","src","defaultSrc","title","alt","description","createElement","className","launchLightBox","onClick","e","setLightBox","propTypes","shape","classname","string","sources","arrayOf","breakpoint","oneOfType","number","isRequired","longDescription","bool","defaultProps"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport CTALogic from '../CTA/CTALogic';\nimport cx from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport { Image } from '../Image';\nimport PropTypes from 'prop-types';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport ZoomIn20 from '@carbon/icons-react/es/zoom--in/20';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Picture element.\n */\n\nvar ImageWithCaption = function ImageWithCaption(_ref) {\n  var image = _ref.image,\n      lightbox = _ref.lightbox,\n      heading = _ref.heading,\n      copy = _ref.copy,\n      customClassName = _ref.customClassName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      renderLightBox = _useState2[0],\n      openLightBox = _useState2[1];\n\n  if (!image) {\n    return null;\n  }\n\n  var classnames = cx(\"\".concat(prefix, \"--image-with-caption\"), customClassName);\n  var media = {\n    type: 'image',\n    src: image.defaultSrc,\n    title: heading,\n    alt: image.alt,\n    description: copy\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames,\n    \"data-autoid\": \"\".concat(stablePrefix, \"--image-with-caption\")\n  }, CTALogic.launchLightBox(renderLightBox, openLightBox, media), lightbox ? /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"launch light box media viewer\",\n    className: \"\".concat(prefix, \"--image-with-caption__image\"),\n    onClick: function onClick(e) {\n      return CTALogic.setLightBox(e, openLightBox);\n    }\n  }, /*#__PURE__*/React.createElement(Image, image), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--image-with-caption__zoom-button\")\n  }, /*#__PURE__*/React.createElement(ZoomIn20, {\n    \"aria-label\": \"Zoom In Icon\"\n  }))) : /*#__PURE__*/React.createElement(Image, image), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\".concat(prefix, \"--image__caption\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--image__caption\")\n  }, heading));\n};\n\nImageWithCaption.propTypes = {\n  /**\n   * Image object needed for ImageWithCaption component.\n   * Visit the [Image storybook](https://www.ibm.com/standards/carbon/react/?path=/story/components-image--default)\n   * for more details on the Image component.\n   */\n  image: PropTypes.shape({\n    classname: PropTypes.string,\n    sources: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string,\n      breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    })),\n    defaultSrc: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    longDescription: PropTypes.string\n  }).isRequired,\n\n  /**\n   * `true` to enable lightbox functionality, allowing user to see enlarged image.\n   */\n  lightbox: PropTypes.bool,\n\n  /**\n   * Caption text.\n   */\n  heading: PropTypes.string,\n\n  /**\n   * More detailed description of the image.\n   */\n  copy: PropTypes.string,\n\n  /**\n   * The CSS class name to apply.\n   */\n  customClassName: PropTypes.string\n};\nImageWithCaption.defaultProps = {\n  copy: '',\n  lightbox: false\n};\nexport default ImageWithCaption;"]},"metadata":{},"sourceType":"module"}