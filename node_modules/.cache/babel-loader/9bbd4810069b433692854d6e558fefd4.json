{"ast":null,"code":"/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CDN host for plex fonts\n *\n * @type {string}\n * @private\n */\nvar _host = 'https://1.www.s81c.com/common/carbon/plex';\n/**\n * Non-Latin font keys and corresponding entry file/font-family\n *\n * @type {{ar: {entry: string, family: string}, jp: {entry: string, family: string}, kr: {entry: string, family: string}}}\n * @private\n */\n\nvar _fonts = {\n  ar: {\n    entry: 'sans-arabic',\n    family: 'IBM Plex Sans Arabic'\n  },\n  ja: {\n    entry: 'sans-jp',\n    family: 'IBM Plex Sans JP'\n  },\n  ko: {\n    entry: 'sans-kr',\n    family: 'IBM Plex Sans KR'\n  }\n};\n/**\n * Non-Latin font-weights and corresponding names\n *\n * @type {{'100': string, '200': string, '300': string, '400': string, '500': string, '600': string, '700': string, '450': string}}\n * @private\n */\n\nvar _weights = {\n  100: 'thin',\n  200: 'extralight',\n  300: 'light',\n  400: 'regular',\n  450: 'text',\n  500: 'medium',\n  600: 'semibold',\n  700: 'bold'\n};\n/**\n * Injects the corresponding CSS entry point to the page\n *\n * @param {string} language two-character language code\n * @param {Array} [weights=[]] Array of specific weights to load\n * @private\n */\n\nfunction _injectCSS(language) {\n  var weights = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (weights.length === 0) {\n    var link = document.createElement('link');\n    link.href = \"\".concat(_host, \"/\").concat(_fonts[language].entry, \".css\");\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.media = 'screen,print';\n    document.getElementsByTagName('head')[0].appendChild(link);\n  } else {\n    weights.forEach(function (weight) {\n      var linkWeight = document.createElement('link');\n      linkWeight.href = \"\".concat(_host, \"/\").concat(_fonts[language].entry, \"-\").concat(_weights[weight], \".css\");\n      linkWeight.type = 'text/css';\n      linkWeight.rel = 'stylesheet';\n      linkWeight.media = 'screen,print';\n      document.getElementsByTagName('head')[0].appendChild(linkWeight);\n    });\n  }\n}\n/**\n * Sets the language's font-family to the page\n *\n * @param {string} language two-character language code\n * @private\n */\n\n\nfunction _setFontFamily(language) {\n  document.body.style.fontFamily = \"\".concat(_fonts[language].family, \",IBM Plex Sans,Helvetica Neue,Arial,sans-serif\");\n}\n/**\n * Utility to load in the corresponding non-Latin Plex font if necessary\n *\n * @example\n * import { loadNonLatinPlex } from '@carbon/ibmdotcom-utilities';\n *\n * loadNonLatinPlex('ar');\n *\n * // Load specific weights only\n * loadNonLatinPlex('ar', [400,600]);\n *\n * @param {string} language two-character language code\n * @param {Array} [weights=[]] Array of specific weights to load (100-700)\n */\n\n\nfunction loadNonLatinPlex(language) {\n  var weights = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (_fonts[language]) {\n    _injectCSS(language, weights);\n\n    _setFontFamily(language);\n  }\n}\n\nexport default loadNonLatinPlex;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/internal/vendor/@carbon/ibmdotcom-services/internal/vendor/@carbon/ibmdotcom-utilities/utilities/loadNonLatinPlex/loadNonLatinPlex.js"],"names":["_host","_fonts","ar","entry","family","ja","ko","_weights","_injectCSS","language","weights","arguments","length","undefined","link","document","createElement","href","concat","type","rel","media","getElementsByTagName","appendChild","forEach","weight","linkWeight","_setFontFamily","body","style","fontFamily","loadNonLatinPlex"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CDN host for plex fonts\n *\n * @type {string}\n * @private\n */\nvar _host = 'https://1.www.s81c.com/common/carbon/plex';\n/**\n * Non-Latin font keys and corresponding entry file/font-family\n *\n * @type {{ar: {entry: string, family: string}, jp: {entry: string, family: string}, kr: {entry: string, family: string}}}\n * @private\n */\n\nvar _fonts = {\n  ar: {\n    entry: 'sans-arabic',\n    family: 'IBM Plex Sans Arabic'\n  },\n  ja: {\n    entry: 'sans-jp',\n    family: 'IBM Plex Sans JP'\n  },\n  ko: {\n    entry: 'sans-kr',\n    family: 'IBM Plex Sans KR'\n  }\n};\n/**\n * Non-Latin font-weights and corresponding names\n *\n * @type {{'100': string, '200': string, '300': string, '400': string, '500': string, '600': string, '700': string, '450': string}}\n * @private\n */\n\nvar _weights = {\n  100: 'thin',\n  200: 'extralight',\n  300: 'light',\n  400: 'regular',\n  450: 'text',\n  500: 'medium',\n  600: 'semibold',\n  700: 'bold'\n};\n/**\n * Injects the corresponding CSS entry point to the page\n *\n * @param {string} language two-character language code\n * @param {Array} [weights=[]] Array of specific weights to load\n * @private\n */\n\nfunction _injectCSS(language) {\n  var weights = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (weights.length === 0) {\n    var link = document.createElement('link');\n    link.href = \"\".concat(_host, \"/\").concat(_fonts[language].entry, \".css\");\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.media = 'screen,print';\n    document.getElementsByTagName('head')[0].appendChild(link);\n  } else {\n    weights.forEach(function (weight) {\n      var linkWeight = document.createElement('link');\n      linkWeight.href = \"\".concat(_host, \"/\").concat(_fonts[language].entry, \"-\").concat(_weights[weight], \".css\");\n      linkWeight.type = 'text/css';\n      linkWeight.rel = 'stylesheet';\n      linkWeight.media = 'screen,print';\n      document.getElementsByTagName('head')[0].appendChild(linkWeight);\n    });\n  }\n}\n/**\n * Sets the language's font-family to the page\n *\n * @param {string} language two-character language code\n * @private\n */\n\n\nfunction _setFontFamily(language) {\n  document.body.style.fontFamily = \"\".concat(_fonts[language].family, \",IBM Plex Sans,Helvetica Neue,Arial,sans-serif\");\n}\n/**\n * Utility to load in the corresponding non-Latin Plex font if necessary\n *\n * @example\n * import { loadNonLatinPlex } from '@carbon/ibmdotcom-utilities';\n *\n * loadNonLatinPlex('ar');\n *\n * // Load specific weights only\n * loadNonLatinPlex('ar', [400,600]);\n *\n * @param {string} language two-character language code\n * @param {Array} [weights=[]] Array of specific weights to load (100-700)\n */\n\n\nfunction loadNonLatinPlex(language) {\n  var weights = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (_fonts[language]) {\n    _injectCSS(language, weights);\n\n    _setFontFamily(language);\n  }\n}\n\nexport default loadNonLatinPlex;"]},"metadata":{},"sourceType":"module"}