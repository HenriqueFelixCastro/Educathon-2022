{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2016, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport Button from '../../internal/vendor/carbon-components-react/components/Button/Button';\nimport cx from 'classnames';\nimport { DDS_AUDIO_PLAYER } from '../../internal/FeatureFlags';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport root from 'window-or-global';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport Slider from '../../internal/vendor/carbon-components-react/components/Slider/Slider';\nimport VolumeDown32 from '@carbon/icons-react/es/volume--down/32';\nimport VolumeMute32 from '@carbon/icons-react/es/volume--mute/32';\nimport VolumeUp32 from '@carbon/icons-react/es/volume--up/32';\nvar prefix = settings.prefix;\n\nvar AudioPlayerVolumeControl = function AudioPlayerVolumeControl(_ref) {\n  var kalturaDigitalPlayer = _ref.kalturaDigitalPlayer,\n      audioVolume = _ref.audioVolume,\n      setAudioVolume = _ref.setAudioVolume,\n      displayVolumeControl = _ref.displayVolumeControl,\n      setDisplayVolumeControl = _ref.setDisplayVolumeControl;\n\n  var handleAudioVolumeChange = function handleAudioVolumeChange(volume) {\n    volume = root.Number.parseFloat(volume.toString().substring(0, 3));\n\n    if (kalturaDigitalPlayer) {\n      kalturaDigitalPlayer.sendNotification('changeVolume', volume);\n      setAudioVolume(volume);\n    }\n  };\n\n  var renderVolumeButtonIcon = function renderVolumeButtonIcon() {\n    if (audioVolume === 0) {\n      return VolumeMute32;\n    } else if (audioVolume > 0 && audioVolume < 0.8) {\n      return VolumeDown32;\n    }\n\n    return VolumeUp32;\n  };\n\n  var buttonClasses = cx(_defineProperty({}, \"\".concat(prefix, \"--force-tooltip-hidden \").concat(prefix, \"--menu--open\"), displayVolumeControl));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__volume-control\")\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: buttonClasses,\n    renderIcon: renderVolumeButtonIcon(),\n    iconDescription: \"Volume\",\n    hasIconOnly: true,\n    kind: \"ghost\",\n    onClick: function onClick() {\n      return setDisplayVolumeControl(function (prev) {\n        return !prev;\n      });\n    },\n    tooltipPosition: \"top\",\n    disabled: !kalturaDigitalPlayer\n  }), displayVolumeControl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__volume-control-menu \").concat(prefix, \"--audio-player__shadow\")\n  }, /*#__PURE__*/React.createElement(Slider, {\n    max: 1,\n    min: 0,\n    step: 0.1,\n    value: audioVolume,\n    onChange: function onChange(_ref2) {\n      var value = _ref2.value;\n      return handleAudioVolumeChange(value);\n    },\n    hideTextInput: true,\n    formatLabel: function formatLabel() {\n      return '';\n    }\n  })));\n};\n\nAudioPlayerVolumeControl.propTypes = {\n  /**\n   * The kaltura digital player (KDP) object\n   * It starts as false and gets morphed into the html element\n   *  of the target player id reference during the kaltura player\n   *  embeding process as soon as the kaltura ready callback triggers\n   */\n  kalturaDigitalPlayer: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]).isRequired,\n\n  /**\n   * The state getter for the current volume of the player\n   * 0 to 1, stepping by 0.1\n   */\n  audioVolume: PropTypes.number.isRequired,\n\n  /**\n   * The state setter for the current volume of the player\n   * 0 to 1, stepping by 0.1\n   */\n  setAudioVolume: PropTypes.func.isRequired,\n\n  /**\n   * The state getter that show/hide the custom volume menu\n   */\n  displayVolumeControl: PropTypes.bool.isRequired,\n\n  /**\n   * The state setter that show/hide the custom volume menu\n   */\n  setDisplayVolumeControl: PropTypes.func.isRequired\n};\nAudioPlayerVolumeControl.defaultProps = {\n  kalturaDigitalPlayer: false,\n  audioVolume: 1,\n  displayVolumeControl: false\n};\nexport default !DDS_AUDIO_PLAYER ? undefined : AudioPlayerVolumeControl;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/AudioPlayer/AudioPlayerVolumeControl.js"],"names":["_defineProperty","Button","cx","DDS_AUDIO_PLAYER","PropTypes","React","root","settings","Slider","VolumeDown32","VolumeMute32","VolumeUp32","prefix","AudioPlayerVolumeControl","_ref","kalturaDigitalPlayer","audioVolume","setAudioVolume","displayVolumeControl","setDisplayVolumeControl","handleAudioVolumeChange","volume","Number","parseFloat","toString","substring","sendNotification","renderVolumeButtonIcon","buttonClasses","concat","createElement","className","renderIcon","iconDescription","hasIconOnly","kind","onClick","prev","tooltipPosition","disabled","max","min","step","value","onChange","_ref2","hideTextInput","formatLabel","propTypes","oneOfType","object","bool","isRequired","number","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2016, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Button from '../../internal/vendor/carbon-components-react/components/Button/Button';\nimport cx from 'classnames';\nimport { DDS_AUDIO_PLAYER } from '../../internal/FeatureFlags';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport root from 'window-or-global';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport Slider from '../../internal/vendor/carbon-components-react/components/Slider/Slider';\nimport VolumeDown32 from '@carbon/icons-react/es/volume--down/32';\nimport VolumeMute32 from '@carbon/icons-react/es/volume--mute/32';\nimport VolumeUp32 from '@carbon/icons-react/es/volume--up/32';\nvar prefix = settings.prefix;\n\nvar AudioPlayerVolumeControl = function AudioPlayerVolumeControl(_ref) {\n  var kalturaDigitalPlayer = _ref.kalturaDigitalPlayer,\n      audioVolume = _ref.audioVolume,\n      setAudioVolume = _ref.setAudioVolume,\n      displayVolumeControl = _ref.displayVolumeControl,\n      setDisplayVolumeControl = _ref.setDisplayVolumeControl;\n\n  var handleAudioVolumeChange = function handleAudioVolumeChange(volume) {\n    volume = root.Number.parseFloat(volume.toString().substring(0, 3));\n\n    if (kalturaDigitalPlayer) {\n      kalturaDigitalPlayer.sendNotification('changeVolume', volume);\n      setAudioVolume(volume);\n    }\n  };\n\n  var renderVolumeButtonIcon = function renderVolumeButtonIcon() {\n    if (audioVolume === 0) {\n      return VolumeMute32;\n    } else if (audioVolume > 0 && audioVolume < 0.8) {\n      return VolumeDown32;\n    }\n\n    return VolumeUp32;\n  };\n\n  var buttonClasses = cx(_defineProperty({}, \"\".concat(prefix, \"--force-tooltip-hidden \").concat(prefix, \"--menu--open\"), displayVolumeControl));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__volume-control\")\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: buttonClasses,\n    renderIcon: renderVolumeButtonIcon(),\n    iconDescription: \"Volume\",\n    hasIconOnly: true,\n    kind: \"ghost\",\n    onClick: function onClick() {\n      return setDisplayVolumeControl(function (prev) {\n        return !prev;\n      });\n    },\n    tooltipPosition: \"top\",\n    disabled: !kalturaDigitalPlayer\n  }), displayVolumeControl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--audio-player__volume-control-menu \").concat(prefix, \"--audio-player__shadow\")\n  }, /*#__PURE__*/React.createElement(Slider, {\n    max: 1,\n    min: 0,\n    step: 0.1,\n    value: audioVolume,\n    onChange: function onChange(_ref2) {\n      var value = _ref2.value;\n      return handleAudioVolumeChange(value);\n    },\n    hideTextInput: true,\n    formatLabel: function formatLabel() {\n      return '';\n    }\n  })));\n};\n\nAudioPlayerVolumeControl.propTypes = {\n  /**\n   * The kaltura digital player (KDP) object\n   * It starts as false and gets morphed into the html element\n   *  of the target player id reference during the kaltura player\n   *  embeding process as soon as the kaltura ready callback triggers\n   */\n  kalturaDigitalPlayer: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]).isRequired,\n\n  /**\n   * The state getter for the current volume of the player\n   * 0 to 1, stepping by 0.1\n   */\n  audioVolume: PropTypes.number.isRequired,\n\n  /**\n   * The state setter for the current volume of the player\n   * 0 to 1, stepping by 0.1\n   */\n  setAudioVolume: PropTypes.func.isRequired,\n\n  /**\n   * The state getter that show/hide the custom volume menu\n   */\n  displayVolumeControl: PropTypes.bool.isRequired,\n\n  /**\n   * The state setter that show/hide the custom volume menu\n   */\n  setDisplayVolumeControl: PropTypes.func.isRequired\n};\nAudioPlayerVolumeControl.defaultProps = {\n  kalturaDigitalPlayer: false,\n  audioVolume: 1,\n  displayVolumeControl: false\n};\nexport default !DDS_AUDIO_PLAYER ? undefined : AudioPlayerVolumeControl;"]},"metadata":{},"sourceType":"module"}