{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { baseFontSize, breakpoints } from '@carbon/layout';\nimport classnames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport uniqueid from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/uniqueid/uniqueid';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n *  sorts media query min-widths order to ensure the\n * browser returns the proper sources and the specified widths\n *\n * @param {Array} sources image sources and min-widths\n *\n * @returns {Array} sorted array of sources\n */\n\nvar sortSources = function sortSources(sources) {\n  var images = sources.map(function (elem) {\n    if (typeof elem.breakpoint == 'number') {\n      return elem;\n    }\n\n    return {\n      breakpoint: parseFloat(breakpoints[elem.breakpoint].width) * baseFontSize,\n      src: elem.src\n    };\n  });\n  return images.sort(function (a, b) {\n    return a.breakpoint > b.breakpoint ? -1 : 1;\n  });\n};\n/**\n * Picture element.\n */\n\n\nvar Image = function Image(_ref) {\n  var classname = _ref.classname,\n      sources = _ref.sources,\n      defaultSrc = _ref.defaultSrc,\n      alt = _ref.alt,\n      longDescription = _ref.longDescription,\n      Icon = _ref.icon,\n      border = _ref.border,\n      refImage = _ref.refImage;\n\n  if (!defaultSrc || !alt) {\n    return null;\n  }\n\n  var sortedImages = sources ? sortSources(sources) : [];\n  var id = uniqueid(\"\".concat(prefix, \"--image-\"));\n  var imageClasses = classnames(\"\".concat(prefix, \"--image__img\"), classname, _defineProperty({}, \"\".concat(prefix, \"--image__img--border\"), border));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--image\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--image__longdescription\")\n  }, /*#__PURE__*/React.createElement(\"picture\", {\n    ref: refImage\n  }, sortedImages.map(function (imgSrc, key) {\n    return /*#__PURE__*/React.createElement(\"source\", {\n      media: \"(min-width: \".concat(imgSrc.breakpoint, \"px)\"),\n      key: key,\n      srcSet: imgSrc.src\n    });\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: imageClasses,\n    src: defaultSrc,\n    alt: alt,\n    \"aria-describedby\": longDescription ? \"\".concat(id) : undefined\n  })), longDescription ? /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--image__longdescription\")\n  }, longDescription) : null, Icon && /*#__PURE__*/React.createElement(Icon, {\n    className: \"\".concat(prefix, \"--image__icon\")\n  }));\n};\n\nImage.propTypes = {\n  /**\n   * The CSS class names.\n   */\n  classname: PropTypes.string,\n\n  /**\n   * Array of image objects. Use below object structure for each items:\n   *\n   * | Name         | Data Type     | Description                                  |\n   * | ------------ | ------------- | -------------------------------------------- |\n   * | `src`        | String        | Url of Image.                                |\n   * | `breakpoint` | Num OR String | min-width breakpoint to render the image src |\n   */\n  sources: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  })),\n\n  /**\n   * Default image (usually image for largest breakpoint).\n   */\n  defaultSrc: PropTypes.string.isRequired,\n\n  /**\n   * Alternate text for image component.\n   */\n  alt: PropTypes.string.isRequired,\n\n  /**\n   * Visible to screen readers, hidden from users.\n   */\n  longDescription: PropTypes.string,\n\n  /**\n   * Icon that overlays the image\n   */\n  icon: PropTypes.func,\n\n  /**\n   * Option to apply a solid border around the image\n   */\n  border: PropTypes.bool,\n\n  /**\n   * Callback ref to get proper thumbnail sizing on Kaltura videos\n   */\n  refImage: PropTypes.func\n};\nexport default Image;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/Image/Image.js"],"names":["_defineProperty","baseFontSize","breakpoints","classnames","ddsSettings","PropTypes","React","settings","uniqueid","stablePrefix","prefix","sortSources","sources","images","map","elem","breakpoint","parseFloat","width","src","sort","a","b","Image","_ref","classname","defaultSrc","alt","longDescription","Icon","icon","border","refImage","sortedImages","id","concat","imageClasses","createElement","className","ref","imgSrc","key","media","srcSet","undefined","propTypes","string","arrayOf","shape","oneOfType","number","isRequired","func","bool"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { baseFontSize, breakpoints } from '@carbon/layout';\nimport classnames from 'classnames';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport uniqueid from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/uniqueid/uniqueid';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n *  sorts media query min-widths order to ensure the\n * browser returns the proper sources and the specified widths\n *\n * @param {Array} sources image sources and min-widths\n *\n * @returns {Array} sorted array of sources\n */\n\nvar sortSources = function sortSources(sources) {\n  var images = sources.map(function (elem) {\n    if (typeof elem.breakpoint == 'number') {\n      return elem;\n    }\n\n    return {\n      breakpoint: parseFloat(breakpoints[elem.breakpoint].width) * baseFontSize,\n      src: elem.src\n    };\n  });\n  return images.sort(function (a, b) {\n    return a.breakpoint > b.breakpoint ? -1 : 1;\n  });\n};\n/**\n * Picture element.\n */\n\n\nvar Image = function Image(_ref) {\n  var classname = _ref.classname,\n      sources = _ref.sources,\n      defaultSrc = _ref.defaultSrc,\n      alt = _ref.alt,\n      longDescription = _ref.longDescription,\n      Icon = _ref.icon,\n      border = _ref.border,\n      refImage = _ref.refImage;\n\n  if (!defaultSrc || !alt) {\n    return null;\n  }\n\n  var sortedImages = sources ? sortSources(sources) : [];\n  var id = uniqueid(\"\".concat(prefix, \"--image-\"));\n  var imageClasses = classnames(\"\".concat(prefix, \"--image__img\"), classname, _defineProperty({}, \"\".concat(prefix, \"--image__img--border\"), border));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--image\"),\n    \"data-autoid\": \"\".concat(stablePrefix, \"--image__longdescription\")\n  }, /*#__PURE__*/React.createElement(\"picture\", {\n    ref: refImage\n  }, sortedImages.map(function (imgSrc, key) {\n    return /*#__PURE__*/React.createElement(\"source\", {\n      media: \"(min-width: \".concat(imgSrc.breakpoint, \"px)\"),\n      key: key,\n      srcSet: imgSrc.src\n    });\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: imageClasses,\n    src: defaultSrc,\n    alt: alt,\n    \"aria-describedby\": longDescription ? \"\".concat(id) : undefined\n  })), longDescription ? /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"\".concat(prefix, \"--image__longdescription\")\n  }, longDescription) : null, Icon && /*#__PURE__*/React.createElement(Icon, {\n    className: \"\".concat(prefix, \"--image__icon\")\n  }));\n};\n\nImage.propTypes = {\n  /**\n   * The CSS class names.\n   */\n  classname: PropTypes.string,\n\n  /**\n   * Array of image objects. Use below object structure for each items:\n   *\n   * | Name         | Data Type     | Description                                  |\n   * | ------------ | ------------- | -------------------------------------------- |\n   * | `src`        | String        | Url of Image.                                |\n   * | `breakpoint` | Num OR String | min-width breakpoint to render the image src |\n   */\n  sources: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  })),\n\n  /**\n   * Default image (usually image for largest breakpoint).\n   */\n  defaultSrc: PropTypes.string.isRequired,\n\n  /**\n   * Alternate text for image component.\n   */\n  alt: PropTypes.string.isRequired,\n\n  /**\n   * Visible to screen readers, hidden from users.\n   */\n  longDescription: PropTypes.string,\n\n  /**\n   * Icon that overlays the image\n   */\n  icon: PropTypes.func,\n\n  /**\n   * Option to apply a solid border around the image\n   */\n  border: PropTypes.bool,\n\n  /**\n   * Callback ref to get proper thumbnail sizing on Kaltura videos\n   */\n  refImage: PropTypes.func\n};\nexport default Image;"]},"metadata":{},"sourceType":"module"}