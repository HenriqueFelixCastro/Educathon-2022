{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * Copyright IBM Corp. 2016, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar MastheadLogoAPI = /*#__PURE__*/function () {\n  function MastheadLogoAPI() {\n    _classCallCheck(this, MastheadLogoAPI);\n  }\n\n  _createClass(MastheadLogoAPI, null, [{\n    key: \"setMastheadLogo\",\n\n    /**\n     * Determines whether to return custom or default IBM logo\n     *\n     * @returns {boolean} Use alternate logo or not\n     *\n     * @example\n     * import { MastheadLogoAPI } from '@carbon/ibmdotcom-services';\n     *\n     * const useAlternateLogo = MastheadLogoAPI.setMastheadLogo(logoData);\n     */\n    value: function setMastheadLogo(logoData) {\n      if (logoData === undefined) return false;\n      var currentTime = new Date().getTime();\n      var expireTime = logoData.end ? Date.parse(logoData.end) : null;\n      var isExpired = expireTime && currentTime > expireTime ? true : false;\n\n      if (logoData.svg === null || isExpired || logoData.denylist && logoData.denylist.indexOf(location.pathname) !== -1) {\n        return false;\n      } else if (logoData.allowlist && (logoData.allowlist.length == 0 || logoData.allowlist.indexOf(location.pathname) !== -1) && logoData.svg) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return MastheadLogoAPI;\n}();\n\nexport default MastheadLogoAPI;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-services/es/services/MastheadLogo/MastheadLogo.js"],"names":["_classCallCheck","_createClass","MastheadLogoAPI","key","value","setMastheadLogo","logoData","undefined","currentTime","Date","getTime","expireTime","end","parse","isExpired","svg","denylist","indexOf","location","pathname","allowlist","length"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG,aAAa,YAAY;AAC7C,WAASA,eAAT,GAA2B;AACzBF,IAAAA,eAAe,CAAC,IAAD,EAAOE,eAAP,CAAf;AACD;;AAEDD,EAAAA,YAAY,CAACC,eAAD,EAAkB,IAAlB,EAAwB,CAAC;AACnCC,IAAAA,GAAG,EAAE,iBAD8B;;AAGnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,IAAAA,KAAK,EAAE,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,UAAIA,QAAQ,KAAKC,SAAjB,EAA4B,OAAO,KAAP;AAC5B,UAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,UAAIC,UAAU,GAAGL,QAAQ,CAACM,GAAT,GAAeH,IAAI,CAACI,KAAL,CAAWP,QAAQ,CAACM,GAApB,CAAf,GAA0C,IAA3D;AACA,UAAIE,SAAS,GAAGH,UAAU,IAAIH,WAAW,GAAGG,UAA5B,GAAyC,IAAzC,GAAgD,KAAhE;;AAEA,UAAIL,QAAQ,CAACS,GAAT,KAAiB,IAAjB,IAAyBD,SAAzB,IAAsCR,QAAQ,CAACU,QAAT,IAAqBV,QAAQ,CAACU,QAAT,CAAkBC,OAAlB,CAA0BC,QAAQ,CAACC,QAAnC,MAAiD,CAAC,CAAjH,EAAoH;AAClH,eAAO,KAAP;AACD,OAFD,MAEO,IAAIb,QAAQ,CAACc,SAAT,KAAuBd,QAAQ,CAACc,SAAT,CAAmBC,MAAnB,IAA6B,CAA7B,IAAkCf,QAAQ,CAACc,SAAT,CAAmBH,OAAnB,CAA2BC,QAAQ,CAACC,QAApC,MAAkD,CAAC,CAA5G,KAAkHb,QAAQ,CAACS,GAA/H,EAAoI;AACzI,eAAO,IAAP;AACD,OAFM,MAEA;AACL,eAAO,KAAP;AACD;AACF;AA1BkC,GAAD,CAAxB,CAAZ;;AA6BA,SAAOb,eAAP;AACD,CAnCkC,EAAnC;;AAqCA,eAAeA,eAAf","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Copyright IBM Corp. 2016, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar MastheadLogoAPI = /*#__PURE__*/function () {\n  function MastheadLogoAPI() {\n    _classCallCheck(this, MastheadLogoAPI);\n  }\n\n  _createClass(MastheadLogoAPI, null, [{\n    key: \"setMastheadLogo\",\n\n    /**\n     * Determines whether to return custom or default IBM logo\n     *\n     * @returns {boolean} Use alternate logo or not\n     *\n     * @example\n     * import { MastheadLogoAPI } from '@carbon/ibmdotcom-services';\n     *\n     * const useAlternateLogo = MastheadLogoAPI.setMastheadLogo(logoData);\n     */\n    value: function setMastheadLogo(logoData) {\n      if (logoData === undefined) return false;\n      var currentTime = new Date().getTime();\n      var expireTime = logoData.end ? Date.parse(logoData.end) : null;\n      var isExpired = expireTime && currentTime > expireTime ? true : false;\n\n      if (logoData.svg === null || isExpired || logoData.denylist && logoData.denylist.indexOf(location.pathname) !== -1) {\n        return false;\n      } else if (logoData.allowlist && (logoData.allowlist.length == 0 || logoData.allowlist.indexOf(location.pathname) !== -1) && logoData.svg) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return MastheadLogoAPI;\n}();\n\nexport default MastheadLogoAPI;"]},"metadata":{},"sourceType":"module"}