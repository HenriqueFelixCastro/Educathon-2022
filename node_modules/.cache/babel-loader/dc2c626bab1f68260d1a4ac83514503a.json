{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"children\", \"defaultOpen\", \"enterDelayMs\", \"kind\", \"label\", \"leaveDelayMs\", \"size\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '../Button';\nimport { Tooltip } from '../Tooltip/next';\nimport { usePrefix } from '../../internal/usePrefix';\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var align = props.align,\n      children = props.children,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      enterDelayMs = props.enterDelayMs,\n      kind = props.kind,\n      label = props.label,\n      leaveDelayMs = props.leaveDelayMs,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'md' : _props$size,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    align: align,\n    className: \"\".concat(prefix, \"--icon-tooltip\"),\n    defaultOpen: defaultOpen,\n    enterDelayMs: enterDelayMs,\n    label: label,\n    leaveDelayMs: leaveDelayMs\n  }, /*#__PURE__*/React.createElement(Button, _extends({}, rest, {\n    hasIconOnly: true,\n    kind: kind,\n    ref: ref,\n    size: size\n  }), children));\n});\nIconButton.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'right']),\n\n  /**\n   * Provide an icon or asset to be rendered inside of the IconButton\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip\n   */\n  enterDelayMs: PropTypes.number,\n\n  /**\n   * Specify the type of button to be used as the base for the IconButton\n   */\n  kind: PropTypes.oneOf(['primary', 'secondary', 'ghost', 'tertiary']),\n\n  /**\n   * Provide the label to be rendered inside of the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node it will not be\n   * announced to the screen reader.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number,\n\n  /**\n   * Specify the size of the Button. Defaults to `md`.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\nexport { IconButton };","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/IconButton/index.js"],"names":["_extends","_objectWithoutProperties","_excluded","PropTypes","React","Button","Tooltip","usePrefix","IconButton","forwardRef","props","ref","align","children","_props$defaultOpen","defaultOpen","enterDelayMs","kind","label","leaveDelayMs","_props$size","size","rest","prefix","createElement","className","concat","hasIconOnly","propTypes","oneOf","node","bool","number","isRequired"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"align\", \"children\", \"defaultOpen\", \"enterDelayMs\", \"kind\", \"label\", \"leaveDelayMs\", \"size\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '../Button';\nimport { Tooltip } from '../Tooltip/next';\nimport { usePrefix } from '../../internal/usePrefix';\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var align = props.align,\n      children = props.children,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      enterDelayMs = props.enterDelayMs,\n      kind = props.kind,\n      label = props.label,\n      leaveDelayMs = props.leaveDelayMs,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'md' : _props$size,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var prefix = usePrefix();\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    align: align,\n    className: \"\".concat(prefix, \"--icon-tooltip\"),\n    defaultOpen: defaultOpen,\n    enterDelayMs: enterDelayMs,\n    label: label,\n    leaveDelayMs: leaveDelayMs\n  }, /*#__PURE__*/React.createElement(Button, _extends({}, rest, {\n    hasIconOnly: true,\n    kind: kind,\n    ref: ref,\n    size: size\n  }), children));\n});\nIconButton.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'right']),\n\n  /**\n   * Provide an icon or asset to be rendered inside of the IconButton\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify the duration in milliseconds to delay before displaying the tooltip\n   */\n  enterDelayMs: PropTypes.number,\n\n  /**\n   * Specify the type of button to be used as the base for the IconButton\n   */\n  kind: PropTypes.oneOf(['primary', 'secondary', 'ghost', 'tertiary']),\n\n  /**\n   * Provide the label to be rendered inside of the Tooltip. The label will use\n   * `aria-labelledby` and will fully describe the child node that is provided.\n   * This means that if you have text in the child node it will not be\n   * announced to the screen reader.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Specify the duration in milliseconds to delay before hiding the tooltip\n   */\n  leaveDelayMs: PropTypes.number,\n\n  /**\n   * Specify the size of the Button. Defaults to `md`.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\nexport { IconButton };"]},"metadata":{},"sourceType":"module"}