{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ariaLabel\", \"className\", \"children\", \"isExpanded\", \"onExpand\", \"expandIconDescription\", \"isSelected\", \"expandHeader\"];\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport TableCell from './TableCell';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar TableExpandRow = function TableExpandRow(_ref) {\n  var _cx;\n\n  var ariaLabel = _ref.ariaLabel,\n      rowClassName = _ref.className,\n      children = _ref.children,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      isSelected = _ref.isSelected,\n      expandHeader = _ref.expandHeader,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--parent-row\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--expandable-row\"), isExpanded), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--selected\"), isSelected), _cx), rowClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React.createElement(\"tr\", _extends({}, rest, {\n    className: className,\n    \"data-parent-row\": true\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"\".concat(prefix, \"--table-expand\"),\n    \"data-previous-value\": previousValue,\n    headers: expandHeader\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  }))), children);\n};\n\nTableExpandRow.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * The id of the matching th node in the table head. Addresses a11y concerns outlined here: https://www.ibm.com/able/guidelines/ci162/info_and_relationships.html and https://www.w3.org/TR/WCAG20-TECHS/H43\n   */\n  expandHeader: PropTypes.string,\n\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: PropTypes.bool.isRequired,\n\n  /**\n   * Specify if the row is selected\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.func.isRequired\n};\nTableExpandRow.defaultProps = {\n  expandHeader: 'expand'\n};\nexport default TableExpandRow;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/DataTable/TableExpandRow.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","cx","PropTypes","React","ChevronRight16","TableCell","usePrefix","TableExpandRow","_ref","_cx","ariaLabel","rowClassName","className","children","isExpanded","onExpand","expandIconDescription","isSelected","expandHeader","rest","prefix","concat","previousValue","undefined","createElement","headers","type","onClick","title","propTypes","string","isRequired","node","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"ariaLabel\", \"className\", \"children\", \"isExpanded\", \"onExpand\", \"expandIconDescription\", \"isSelected\", \"expandHeader\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport TableCell from './TableCell';\nimport { usePrefix } from '../../internal/usePrefix';\n\nvar TableExpandRow = function TableExpandRow(_ref) {\n  var _cx;\n\n  var ariaLabel = _ref.ariaLabel,\n      rowClassName = _ref.className,\n      children = _ref.children,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      isSelected = _ref.isSelected,\n      expandHeader = _ref.expandHeader,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--parent-row\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--expandable-row\"), isExpanded), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--selected\"), isSelected), _cx), rowClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React.createElement(\"tr\", _extends({}, rest, {\n    className: className,\n    \"data-parent-row\": true\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"\".concat(prefix, \"--table-expand\"),\n    \"data-previous-value\": previousValue,\n    headers: expandHeader\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  }))), children);\n};\n\nTableExpandRow.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * The id of the matching th node in the table head. Addresses a11y concerns outlined here: https://www.ibm.com/able/guidelines/ci162/info_and_relationships.html and https://www.w3.org/TR/WCAG20-TECHS/H43\n   */\n  expandHeader: PropTypes.string,\n\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: PropTypes.bool.isRequired,\n\n  /**\n   * Specify if the row is selected\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.func.isRequired\n};\nTableExpandRow.defaultProps = {\n  expandHeader: 'expand'\n};\nexport default TableExpandRow;"]},"metadata":{},"sourceType":"module"}