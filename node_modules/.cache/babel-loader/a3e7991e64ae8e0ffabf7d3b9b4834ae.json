{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ArrowRight20 from '@carbon/icons-react/es/arrow--right/20';\nimport { Card } from '../Card';\nimport ContentGroup from '../ContentGroup/ContentGroup';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar prefix = settings.prefix;\nvar stablePrefix = ddsSettings.stablePrefix;\n/**\n * Card Array Component.\n */\n\nvar ContentGroupCards = function ContentGroupCards(_ref) {\n  var heading = _ref.heading,\n      items = _ref.items,\n      copy = _ref.copy;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-cards\"),\n    className: \"\".concat(prefix, \"--content-group-cards\")\n  }, /*#__PURE__*/React.createElement(ContentGroup, {\n    heading: heading,\n    copy: copy\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-cards-group\"),\n    className: \"\".concat(prefix, \"--content-group-cards-group \").concat(prefix, \"--grid--condensed\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--content-group-cards__row\")\n  }, _renderCards(items)))));\n};\n/**\n * Renders the cards based on the ContentArray entries\n *\n * @param {Array} items Content object array\n * @returns {*} CardArrayItem JSX objects\n */\n\n\nvar _renderCards = function _renderCards(items) {\n  return items.map(function (elem, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-cards-item\"),\n      className: \"\".concat(prefix, \"--content-group-cards-item__col\"),\n      key: index,\n      role: \"region\"\n    }, /*#__PURE__*/React.createElement(Card, {\n      customClassName: \"\".concat(prefix, \"--content-group-cards-item\"),\n      heading: elem.heading,\n      copy: elem.copy,\n      cta: {\n        href: elem.cta.href,\n        icon: {\n          src: ArrowRight20\n        }\n      },\n      \"aria-label\": elem.heading\n    }));\n  });\n};\n\nContentGroupCards.propTypes = {\n  /**\n   * Main heading of the pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Copy text (enabled for the `markdownToHtml` utility)\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Array of content group objects. Has the following structure:\n   *\n   * | Name      | Data Type | Description                                                |\n   * | --------- | --------- | ---------------------------------------------------------- |\n   * | `heading` | String    | Title for the Card.                                        |\n   * | `copy`    | String    | Copy for the Card.                                         |\n   * | `cta`     | Object    | Object containing target and href of cta. See `cta` below. |\n   *\n   * `cta`:\n   *\n   * | Name   | Data Type | Description                       |\n   * | ------ | --------- | --------------------------------- |\n   * | `href` | String    | Url of the Content Card item cta. |\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    heading: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  }))\n};\nexport default ContentGroupCards;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ContentGroupCards/ContentGroupCards.js"],"names":["ArrowRight20","Card","ContentGroup","ddsSettings","PropTypes","React","settings","prefix","stablePrefix","ContentGroupCards","_ref","heading","items","copy","createElement","concat","className","_renderCards","map","elem","index","key","role","customClassName","cta","href","icon","src","propTypes","string","isRequired","arrayOf","shape","title"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,+EAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,IAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AACA,IAAIC,YAAY,GAAGL,WAAW,CAACK,YAA/B;AACA;AACA;AACA;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACvD,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,IAAI,GAAGH,IAAI,CAACG,IAFhB;AAGA,SAAO,aAAaR,KAAK,CAACS,aAAN,CAAoB,SAApB,EAA+B;AACjD,mBAAe,GAAGC,MAAH,CAAUP,YAAV,EAAwB,uBAAxB,CADkC;AAEjDQ,IAAAA,SAAS,EAAE,GAAGD,MAAH,CAAUR,MAAV,EAAkB,uBAAlB;AAFsC,GAA/B,EAGjB,aAAaF,KAAK,CAACS,aAAN,CAAoBZ,YAApB,EAAkC;AAChDS,IAAAA,OAAO,EAAEA,OADuC;AAEhDE,IAAAA,IAAI,EAAEA;AAF0C,GAAlC,EAGb,aAAaR,KAAK,CAACS,aAAN,CAAoB,KAApB,EAA2B;AACzC,mBAAe,GAAGC,MAAH,CAAUP,YAAV,EAAwB,6BAAxB,CAD0B;AAEzCQ,IAAAA,SAAS,EAAE,GAAGD,MAAH,CAAUR,MAAV,EAAkB,8BAAlB,EAAkDQ,MAAlD,CAAyDR,MAAzD,EAAiE,mBAAjE;AAF8B,GAA3B,EAGb,aAAaF,KAAK,CAACS,aAAN,CAAoB,KAApB,EAA2B;AACzCE,IAAAA,SAAS,EAAE,GAAGD,MAAH,CAAUR,MAAV,EAAkB,4BAAlB;AAD8B,GAA3B,EAEbU,YAAY,CAACL,KAAD,CAFC,CAHA,CAHA,CAHI,CAApB;AAYD,CAhBD;AAiBA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIK,YAAY,GAAG,SAASA,YAAT,CAAsBL,KAAtB,EAA6B;AAC9C,SAAOA,KAAK,CAACM,GAAN,CAAU,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACtC,WAAO,aAAaf,KAAK,CAACS,aAAN,CAAoB,KAApB,EAA2B;AAC7C,qBAAe,GAAGC,MAAH,CAAUP,YAAV,EAAwB,4BAAxB,CAD8B;AAE7CQ,MAAAA,SAAS,EAAE,GAAGD,MAAH,CAAUR,MAAV,EAAkB,iCAAlB,CAFkC;AAG7Cc,MAAAA,GAAG,EAAED,KAHwC;AAI7CE,MAAAA,IAAI,EAAE;AAJuC,KAA3B,EAKjB,aAAajB,KAAK,CAACS,aAAN,CAAoBb,IAApB,EAA0B;AACxCsB,MAAAA,eAAe,EAAE,GAAGR,MAAH,CAAUR,MAAV,EAAkB,4BAAlB,CADuB;AAExCI,MAAAA,OAAO,EAAEQ,IAAI,CAACR,OAF0B;AAGxCE,MAAAA,IAAI,EAAEM,IAAI,CAACN,IAH6B;AAIxCW,MAAAA,GAAG,EAAE;AACHC,QAAAA,IAAI,EAAEN,IAAI,CAACK,GAAL,CAASC,IADZ;AAEHC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE3B;AADD;AAFH,OAJmC;AAUxC,oBAAcmB,IAAI,CAACR;AAVqB,KAA1B,CALI,CAApB;AAiBD,GAlBM,CAAP;AAmBD,CApBD;;AAsBAF,iBAAiB,CAACmB,SAAlB,GAA8B;AAC5B;AACF;AACA;AACEjB,EAAAA,OAAO,EAAEP,SAAS,CAACyB,MAAV,CAAiBC,UAJE;;AAM5B;AACF;AACA;AACEjB,EAAAA,IAAI,EAAET,SAAS,CAACyB,MATY;;AAW5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEjB,EAAAA,KAAK,EAAER,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,KAAV,CAAgB;AACvCC,IAAAA,KAAK,EAAE7B,SAAS,CAACyB,MADsB;AAEvClB,IAAAA,OAAO,EAAEP,SAAS,CAACyB,MAFoB;AAGvCL,IAAAA,GAAG,EAAEpB,SAAS,CAAC4B,KAAV,CAAgB;AACnBP,MAAAA,IAAI,EAAErB,SAAS,CAACyB;AADG,KAAhB;AAHkC,GAAhB,CAAlB;AA1BqB,CAA9B;AAkCA,eAAepB,iBAAf","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ArrowRight20 from '@carbon/icons-react/es/arrow--right/20';\nimport { Card } from '../Card';\nimport ContentGroup from '../ContentGroup/ContentGroup';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar prefix = settings.prefix;\nvar stablePrefix = ddsSettings.stablePrefix;\n/**\n * Card Array Component.\n */\n\nvar ContentGroupCards = function ContentGroupCards(_ref) {\n  var heading = _ref.heading,\n      items = _ref.items,\n      copy = _ref.copy;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-cards\"),\n    className: \"\".concat(prefix, \"--content-group-cards\")\n  }, /*#__PURE__*/React.createElement(ContentGroup, {\n    heading: heading,\n    copy: copy\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-cards-group\"),\n    className: \"\".concat(prefix, \"--content-group-cards-group \").concat(prefix, \"--grid--condensed\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--content-group-cards__row\")\n  }, _renderCards(items)))));\n};\n/**\n * Renders the cards based on the ContentArray entries\n *\n * @param {Array} items Content object array\n * @returns {*} CardArrayItem JSX objects\n */\n\n\nvar _renderCards = function _renderCards(items) {\n  return items.map(function (elem, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-autoid\": \"\".concat(stablePrefix, \"--content-group-cards-item\"),\n      className: \"\".concat(prefix, \"--content-group-cards-item__col\"),\n      key: index,\n      role: \"region\"\n    }, /*#__PURE__*/React.createElement(Card, {\n      customClassName: \"\".concat(prefix, \"--content-group-cards-item\"),\n      heading: elem.heading,\n      copy: elem.copy,\n      cta: {\n        href: elem.cta.href,\n        icon: {\n          src: ArrowRight20\n        }\n      },\n      \"aria-label\": elem.heading\n    }));\n  });\n};\n\nContentGroupCards.propTypes = {\n  /**\n   * Main heading of the pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Copy text (enabled for the `markdownToHtml` utility)\n   */\n  copy: PropTypes.string,\n\n  /**\n   * Array of content group objects. Has the following structure:\n   *\n   * | Name      | Data Type | Description                                                |\n   * | --------- | --------- | ---------------------------------------------------------- |\n   * | `heading` | String    | Title for the Card.                                        |\n   * | `copy`    | String    | Copy for the Card.                                         |\n   * | `cta`     | Object    | Object containing target and href of cta. See `cta` below. |\n   *\n   * `cta`:\n   *\n   * | Name   | Data Type | Description                       |\n   * | ------ | --------- | --------------------------------- |\n   * | `href` | String    | Url of the Content Card item cta. |\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    heading: PropTypes.string,\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  }))\n};\nexport default ContentGroupCards;"]},"metadata":{},"sourceType":"module"}