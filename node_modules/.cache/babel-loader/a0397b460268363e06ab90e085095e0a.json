{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { CardGroup } from '../CardGroup';\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Content Block - Cards pattern.\n */\n\nvar ContentBlockCards = function ContentBlockCards(_ref) {\n  var heading = _ref.heading,\n      cards = _ref.cards,\n      cta = _ref.cta;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-cards\"),\n    className: \"\".concat(prefix, \"--content-block-cards\")\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    cta: cta\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--content-block-cards__content\")\n  }, /*#__PURE__*/React.createElement(CardGroup, {\n    cards: cards\n  }))));\n};\n\nContentBlockCards.propTypes = {\n  /**\n   * Main title of ContentBlockCards pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Array of card objects.\n   * Uses a sub-scheme of `<Card>`'s props for each items, like below, depending on what type of card is used:\n   *\n   * Simple:\n   *\n   * | Name       | Required | Data Type | Description                            |\n   * | ---------- | -------- | --------- | -------------------------------------- |\n   * | `copy`     | YES      | String    | Copy of the card.                      |\n   * | `heading`  | YES      | String    | Heading of the card.                   |\n   * | `cta.href` | YES      | String    | URI for internal or external resource. |\n   *\n   * Image:\n   *\n   * | Name       | Required | Data Type | Description                              |\n   * | ---------- | -------- | --------- | ---------------------------------------- |\n   * | `image`    | YES      | Object    | Contains source and alt text properties. |\n   * | `eyebrow`  | YES      | String    | Eyebrow of the card.                     |\n   * | `heading`  | YES      | String    | Heading of the card.                     |\n   * | `cta.href` | YES      | String    | URI for internal or external resource.   |\n   *\n   * See [`<CardGroup>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cardgroup--default#props) for full usage details.\n   */\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    heading: PropTypes.string,\n    eyebrow: PropTypes.string,\n    copy: PropTypes.string,\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      media: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        type: PropTypes.string\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }),\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })).isRequired,\n\n  /**\n   * CTA used at the end of content body. `Card` style supported.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['card']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  })\n};\nexport default ContentBlockCards;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-react/es/components/ContentBlockCards/ContentBlockCards.js"],"names":["CardGroup","ContentBlock","ddsSettings","PropTypes","React","settings","stablePrefix","prefix","ContentBlockCards","_ref","heading","cards","cta","createElement","concat","className","propTypes","string","isRequired","arrayOf","shape","eyebrow","copy","image","classname","sources","src","breakpoint","oneOfType","number","media","type","defaultSrc","alt","longDescription","href","style","oneOf","customClassName"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { CardGroup } from '../CardGroup';\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport settings from 'carbon-components/es/globals/js/settings';\nvar stablePrefix = ddsSettings.stablePrefix;\nvar prefix = settings.prefix;\n/**\n * Content Block - Cards pattern.\n */\n\nvar ContentBlockCards = function ContentBlockCards(_ref) {\n  var heading = _ref.heading,\n      cards = _ref.cards,\n      cta = _ref.cta;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-autoid\": \"\".concat(stablePrefix, \"--content-block-cards\"),\n    className: \"\".concat(prefix, \"--content-block-cards\")\n  }, /*#__PURE__*/React.createElement(ContentBlock, {\n    heading: heading,\n    cta: cta\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--content-block-cards__content\")\n  }, /*#__PURE__*/React.createElement(CardGroup, {\n    cards: cards\n  }))));\n};\n\nContentBlockCards.propTypes = {\n  /**\n   * Main title of ContentBlockCards pattern.\n   */\n  heading: PropTypes.string.isRequired,\n\n  /**\n   * Array of card objects.\n   * Uses a sub-scheme of `<Card>`'s props for each items, like below, depending on what type of card is used:\n   *\n   * Simple:\n   *\n   * | Name       | Required | Data Type | Description                            |\n   * | ---------- | -------- | --------- | -------------------------------------- |\n   * | `copy`     | YES      | String    | Copy of the card.                      |\n   * | `heading`  | YES      | String    | Heading of the card.                   |\n   * | `cta.href` | YES      | String    | URI for internal or external resource. |\n   *\n   * Image:\n   *\n   * | Name       | Required | Data Type | Description                              |\n   * | ---------- | -------- | --------- | ---------------------------------------- |\n   * | `image`    | YES      | Object    | Contains source and alt text properties. |\n   * | `eyebrow`  | YES      | String    | Eyebrow of the card.                     |\n   * | `heading`  | YES      | String    | Heading of the card.                     |\n   * | `cta.href` | YES      | String    | URI for internal or external resource.   |\n   *\n   * See [`<CardGroup>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cardgroup--default#props) for full usage details.\n   */\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    heading: PropTypes.string,\n    eyebrow: PropTypes.string,\n    copy: PropTypes.string,\n    image: PropTypes.shape({\n      classname: PropTypes.string,\n      sources: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      })),\n      media: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n        type: PropTypes.string\n      })),\n      defaultSrc: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n      longDescription: PropTypes.string\n    }),\n    cta: PropTypes.shape({\n      href: PropTypes.string\n    })\n  })).isRequired,\n\n  /**\n   * CTA used at the end of content body. `Card` style supported.\n   * See the [`<CTA>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#props) for full usage details.\n   */\n  cta: PropTypes.shape({\n    style: PropTypes.oneOf(['card']),\n    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))]),\n    copy: PropTypes.string,\n    customClassName: PropTypes.string\n  })\n};\nexport default ContentBlockCards;"]},"metadata":{},"sourceType":"module"}