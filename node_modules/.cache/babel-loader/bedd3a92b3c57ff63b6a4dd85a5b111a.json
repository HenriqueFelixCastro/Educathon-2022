{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport root from 'window-or-global';\n/**\n * Returns boolean if the isDataLayerReady flag is true\n *\n * @returns {*} boolean flag if data layer is ready in the digitalData object\n * @private\n */\n\nfunction _checkFlag() {\n  return root.digitalData && root.digitalData.page && root.digitalData.page.isDataLayerReady;\n}\n/**\n * Number of times to retry the datalayer ready loop before failing\n *\n * @type {number}\n * @private\n */\n\n\nvar _timeoutRetries = 50;\n\nvar _dataLayerReadyPromise;\n/**\n * Timeout loop to check if the digitalData object is ready.\n * This is the only way to achieve this without jQuery, as the event trigger\n * is fired from jQuery's custom event layer as\n * $(document).trigger('datalayer_ready').\n *\n * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`, that eliminates the polling.\n *\n * @private\n */\n\n\nfunction _datalayerReady() {\n  if (!_dataLayerReadyPromise) {\n    _dataLayerReadyPromise = new Promise(function (resolve, reject) {\n      /**\n       * Tracks the number of attempts for the datalayer ready loop\n       *\n       * @type {number}\n       * @private\n       */\n      var _attempt = 0;\n\n      function _dataLayerReadyImpl() {\n        if (_checkFlag()) {\n          resolve();\n        } else {\n          _attempt++;\n\n          if (_attempt < _timeoutRetries) {\n            setTimeout(function () {\n              _dataLayerReadyImpl(resolve, reject);\n            }, 100);\n          } else {\n            reject(new Error('Timeout polling for digital data object.'));\n          }\n        }\n      }\n\n      _dataLayerReadyImpl();\n    });\n  }\n\n  return _dataLayerReadyPromise;\n}\n/**\n * DDO API class with methods of fetching search results for\n * ibm.com\n */\n\n\nvar DDOAPI = /*#__PURE__*/function () {\n  function DDOAPI() {\n    _classCallCheck(this, DDOAPI);\n  }\n\n  _createClass(DDOAPI, null, [{\n    key: \"isReady\",\n\n    /**\n     * Promise function that determines when the digital data object is ready\n     *\n     * @returns {Promise} Resolved data layer ready signal\n     */\n    value: function isReady() {\n      return _datalayerReady();\n    }\n    /**\n     * Gets the full digitalData (DDO) object.\n     * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`.\n     * For quick developerment purpose, what `ibm-common.js` automatically populates can be used.\n     *\n     * @returns {Promise<*>} Promise object\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function () {\n      var _getAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.isReady().then(function () {\n                  return root.digitalData;\n                }).catch(function () {\n                  return null;\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAll() {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n    /**\n     * Sets the version of the library to the DDO.\n     * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`.\n     * For quick developerment purpose, what `ibm-common.js` automatically populates can be used.\n     *\n     * @returns {Promise<any>} Promise object\n     */\n\n  }, {\n    key: \"setVersion\",\n    value: function () {\n      var _setVersion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.isReady().then(function () {\n                  root.digitalData.page.pageInfo.version = ddsSettings.version;\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setVersion() {\n        return _setVersion.apply(this, arguments);\n      }\n\n      return setVersion;\n    }()\n    /**\n     * Gets the locale for the current page based on the language set as metadata.\n     * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`.\n     * For quick developerment purpose, what `ibm-common.js` automatically populates can be used.\n     *\n     * @returns {Promise<*>} Promise object\n     */\n\n  }, {\n    key: \"getLanguage\",\n    value: function () {\n      var _getLanguage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.isReady().then(function () {\n                  return root.digitalData.page.pageInfo.language;\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getLanguage() {\n        return _getLanguage.apply(this, arguments);\n      }\n\n      return getLanguage;\n    }()\n  }]);\n\n  return DDOAPI;\n}();\n\nexport default DDOAPI;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/@carbon/ibmdotcom-services/es/services/DDO/DDO.js"],"names":["_asyncToGenerator","_classCallCheck","_createClass","_regeneratorRuntime","ddsSettings","root","_checkFlag","digitalData","page","isDataLayerReady","_timeoutRetries","_dataLayerReadyPromise","_datalayerReady","Promise","resolve","reject","_attempt","_dataLayerReadyImpl","setTimeout","Error","DDOAPI","key","value","isReady","_getAll","mark","_callee","wrap","_callee$","_context","prev","next","then","catch","abrupt","sent","stop","getAll","apply","arguments","_setVersion","_callee2","_callee2$","_context2","pageInfo","version","setVersion","_getLanguage","_callee3","_callee3$","_context3","language","getLanguage"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,+EAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAOD,IAAI,CAACE,WAAL,IAAoBF,IAAI,CAACE,WAAL,CAAiBC,IAArC,IAA6CH,IAAI,CAACE,WAAL,CAAiBC,IAAjB,CAAsBC,gBAA1E;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,eAAe,GAAG,EAAtB;;AAEA,IAAIC,sBAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,eAAT,GAA2B;AACzB,MAAI,CAACD,sBAAL,EAA6B;AAC3BA,IAAAA,sBAAsB,GAAG,IAAIE,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC9D;AACN;AACA;AACA;AACA;AACA;AACM,UAAIC,QAAQ,GAAG,CAAf;;AAEA,eAASC,mBAAT,GAA+B;AAC7B,YAAIX,UAAU,EAAd,EAAkB;AAChBQ,UAAAA,OAAO;AACR,SAFD,MAEO;AACLE,UAAAA,QAAQ;;AAER,cAAIA,QAAQ,GAAGN,eAAf,EAAgC;AAC9BQ,YAAAA,UAAU,CAAC,YAAY;AACrBD,cAAAA,mBAAmB,CAACH,OAAD,EAAUC,MAAV,CAAnB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD,WAJD,MAIO;AACLA,YAAAA,MAAM,CAAC,IAAII,KAAJ,CAAU,0CAAV,CAAD,CAAN;AACD;AACF;AACF;;AAEDF,MAAAA,mBAAmB;AACpB,KA1BwB,CAAzB;AA2BD;;AAED,SAAON,sBAAP;AACD;AACD;AACA;AACA;AACA;;;AAGA,IAAIS,MAAM,GAAG,aAAa,YAAY;AACpC,WAASA,MAAT,GAAkB;AAChBnB,IAAAA,eAAe,CAAC,IAAD,EAAOmB,MAAP,CAAf;AACD;;AAEDlB,EAAAA,YAAY,CAACkB,MAAD,EAAS,IAAT,EAAe,CAAC;AAC1BC,IAAAA,GAAG,EAAE,SADqB;;AAG1B;AACJ;AACA;AACA;AACA;AACIC,IAAAA,KAAK,EAAE,SAASC,OAAT,GAAmB;AACxB,aAAOX,eAAe,EAAtB;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAjB8B,GAAD,EAmBxB;AACDS,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,YAAY;AACjB,UAAIE,OAAO,GAAGxB,iBAAiB,EAAE,aAAaG,mBAAmB,CAACsB,IAApB,CAAyB,SAASC,OAAT,GAAmB;AACxF,eAAOvB,mBAAmB,CAACwB,IAApB,CAAyB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1D,iBAAO,CAAP,EAAU;AACR,oBAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACE,mBAAK,CAAL;AACEF,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA,uBAAO,KAAKR,OAAL,GAAeS,IAAf,CAAoB,YAAY;AACrC,yBAAO3B,IAAI,CAACE,WAAZ;AACD,iBAFM,EAEJ0B,KAFI,CAEE,YAAY;AACnB,yBAAO,IAAP;AACD,iBAJM,CAAP;;AAMF,mBAAK,CAAL;AACE,uBAAOJ,QAAQ,CAACK,MAAT,CAAgB,QAAhB,EAA0BL,QAAQ,CAACM,IAAnC,CAAP;;AAEF,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAON,QAAQ,CAACO,IAAT,EAAP;AAdJ;AAgBD;AACF,SAnBM,EAmBJV,OAnBI,EAmBK,IAnBL,CAAP;AAoBD,OArB6C,CAAf,CAA/B;;AAuBA,eAASW,MAAT,GAAkB;AAChB,eAAOb,OAAO,CAACc,KAAR,CAAc,IAAd,EAAoBC,SAApB,CAAP;AACD;;AAED,aAAOF,MAAP;AACD,KA7BM;AA8BP;AACJ;AACA;AACA;AACA;AACA;AACA;;AAtCK,GAnBwB,EA2DxB;AACDhB,IAAAA,GAAG,EAAE,YADJ;AAEDC,IAAAA,KAAK,EAAE,YAAY;AACjB,UAAIkB,WAAW,GAAGxC,iBAAiB,EAAE,aAAaG,mBAAmB,CAACsB,IAApB,CAAyB,SAASgB,QAAT,GAAoB;AAC7F,eAAOtC,mBAAmB,CAACwB,IAApB,CAAyB,SAASe,SAAT,CAAmBC,SAAnB,EAA8B;AAC5D,iBAAO,CAAP,EAAU;AACR,oBAAQA,SAAS,CAACb,IAAV,GAAiBa,SAAS,CAACZ,IAAnC;AACE,mBAAK,CAAL;AACEY,gBAAAA,SAAS,CAACZ,IAAV,GAAiB,CAAjB;AACA,uBAAO,KAAKR,OAAL,GAAeS,IAAf,CAAoB,YAAY;AACrC3B,kBAAAA,IAAI,CAACE,WAAL,CAAiBC,IAAjB,CAAsBoC,QAAtB,CAA+BC,OAA/B,GAAyCzC,WAAW,CAACyC,OAArD;AACD,iBAFM,CAAP;;AAIF,mBAAK,CAAL;AACE,uBAAOF,SAAS,CAACT,MAAV,CAAiB,QAAjB,EAA2BS,SAAS,CAACR,IAArC,CAAP;;AAEF,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAOQ,SAAS,CAACP,IAAV,EAAP;AAZJ;AAcD;AACF,SAjBM,EAiBJK,QAjBI,EAiBM,IAjBN,CAAP;AAkBD,OAnBiD,CAAf,CAAnC;;AAqBA,eAASK,UAAT,GAAsB;AACpB,eAAON,WAAW,CAACF,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAP;AACD;;AAED,aAAOO,UAAP;AACD,KA3BM;AA4BP;AACJ;AACA;AACA;AACA;AACA;AACA;;AApCK,GA3DwB,EAiGxB;AACDzB,IAAAA,GAAG,EAAE,aADJ;AAEDC,IAAAA,KAAK,EAAE,YAAY;AACjB,UAAIyB,YAAY,GAAG/C,iBAAiB,EAAE,aAAaG,mBAAmB,CAACsB,IAApB,CAAyB,SAASuB,QAAT,GAAoB;AAC9F,eAAO7C,mBAAmB,CAACwB,IAApB,CAAyB,SAASsB,SAAT,CAAmBC,SAAnB,EAA8B;AAC5D,iBAAO,CAAP,EAAU;AACR,oBAAQA,SAAS,CAACpB,IAAV,GAAiBoB,SAAS,CAACnB,IAAnC;AACE,mBAAK,CAAL;AACEmB,gBAAAA,SAAS,CAACnB,IAAV,GAAiB,CAAjB;AACA,uBAAO,KAAKR,OAAL,GAAeS,IAAf,CAAoB,YAAY;AACrC,yBAAO3B,IAAI,CAACE,WAAL,CAAiBC,IAAjB,CAAsBoC,QAAtB,CAA+BO,QAAtC;AACD,iBAFM,CAAP;;AAIF,mBAAK,CAAL;AACE,uBAAOD,SAAS,CAAChB,MAAV,CAAiB,QAAjB,EAA2BgB,SAAS,CAACf,IAArC,CAAP;;AAEF,mBAAK,CAAL;AACA,mBAAK,KAAL;AACE,uBAAOe,SAAS,CAACd,IAAV,EAAP;AAZJ;AAcD;AACF,SAjBM,EAiBJY,QAjBI,EAiBM,IAjBN,CAAP;AAkBD,OAnBkD,CAAf,CAApC;;AAqBA,eAASI,WAAT,GAAuB;AACrB,eAAOL,YAAY,CAACT,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAP;AACD;;AAED,aAAOa,WAAP;AACD,KA3BM;AAFN,GAjGwB,CAAf,CAAZ;;AAiIA,SAAOhC,MAAP;AACD,CAvIyB,EAA1B;;AAyIA,eAAeA,MAAf","sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n/**\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';\nimport root from 'window-or-global';\n/**\n * Returns boolean if the isDataLayerReady flag is true\n *\n * @returns {*} boolean flag if data layer is ready in the digitalData object\n * @private\n */\n\nfunction _checkFlag() {\n  return root.digitalData && root.digitalData.page && root.digitalData.page.isDataLayerReady;\n}\n/**\n * Number of times to retry the datalayer ready loop before failing\n *\n * @type {number}\n * @private\n */\n\n\nvar _timeoutRetries = 50;\n\nvar _dataLayerReadyPromise;\n/**\n * Timeout loop to check if the digitalData object is ready.\n * This is the only way to achieve this without jQuery, as the event trigger\n * is fired from jQuery's custom event layer as\n * $(document).trigger('datalayer_ready').\n *\n * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`, that eliminates the polling.\n *\n * @private\n */\n\n\nfunction _datalayerReady() {\n  if (!_dataLayerReadyPromise) {\n    _dataLayerReadyPromise = new Promise(function (resolve, reject) {\n      /**\n       * Tracks the number of attempts for the datalayer ready loop\n       *\n       * @type {number}\n       * @private\n       */\n      var _attempt = 0;\n\n      function _dataLayerReadyImpl() {\n        if (_checkFlag()) {\n          resolve();\n        } else {\n          _attempt++;\n\n          if (_attempt < _timeoutRetries) {\n            setTimeout(function () {\n              _dataLayerReadyImpl(resolve, reject);\n            }, 100);\n          } else {\n            reject(new Error('Timeout polling for digital data object.'));\n          }\n        }\n      }\n\n      _dataLayerReadyImpl();\n    });\n  }\n\n  return _dataLayerReadyPromise;\n}\n/**\n * DDO API class with methods of fetching search results for\n * ibm.com\n */\n\n\nvar DDOAPI = /*#__PURE__*/function () {\n  function DDOAPI() {\n    _classCallCheck(this, DDOAPI);\n  }\n\n  _createClass(DDOAPI, null, [{\n    key: \"isReady\",\n\n    /**\n     * Promise function that determines when the digital data object is ready\n     *\n     * @returns {Promise} Resolved data layer ready signal\n     */\n    value: function isReady() {\n      return _datalayerReady();\n    }\n    /**\n     * Gets the full digitalData (DDO) object.\n     * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`.\n     * For quick developerment purpose, what `ibm-common.js` automatically populates can be used.\n     *\n     * @returns {Promise<*>} Promise object\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function () {\n      var _getAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.isReady().then(function () {\n                  return root.digitalData;\n                }).catch(function () {\n                  return null;\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAll() {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n    /**\n     * Sets the version of the library to the DDO.\n     * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`.\n     * For quick developerment purpose, what `ibm-common.js` automatically populates can be used.\n     *\n     * @returns {Promise<any>} Promise object\n     */\n\n  }, {\n    key: \"setVersion\",\n    value: function () {\n      var _setVersion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.isReady().then(function () {\n                  root.digitalData.page.pageInfo.version = ddsSettings.version;\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setVersion() {\n        return _setVersion.apply(this, arguments);\n      }\n\n      return setVersion;\n    }()\n    /**\n     * Gets the locale for the current page based on the language set as metadata.\n     * Application should `window.digitalData` up-front, e.g. in a `<script>` tag in `<head>`.\n     * For quick developerment purpose, what `ibm-common.js` automatically populates can be used.\n     *\n     * @returns {Promise<*>} Promise object\n     */\n\n  }, {\n    key: \"getLanguage\",\n    value: function () {\n      var _getLanguage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.isReady().then(function () {\n                  return root.digitalData.page.pageInfo.language;\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getLanguage() {\n        return _getLanguage.apply(this, arguments);\n      }\n\n      return getLanguage;\n    }()\n  }]);\n\n  return DDOAPI;\n}();\n\nexport default DDOAPI;"]},"metadata":{},"sourceType":"module"}