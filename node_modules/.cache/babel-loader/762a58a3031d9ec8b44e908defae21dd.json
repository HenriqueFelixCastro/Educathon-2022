{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _defaultTranslations;\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Close16 } from '@carbon/icons-react';\nimport { match, keys } from '../../internal/keyboard';\nimport { usePrefix } from '../../internal/usePrefix';\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\n\nvar ListBoxSelection = function ListBoxSelection(_ref) {\n  var _cx;\n\n  var clearSelection = _ref.clearSelection,\n      selectionCount = _ref.selectionCount,\n      t = _ref.translateWithId,\n      disabled = _ref.disabled,\n      onClearSelection = _ref.onClearSelection;\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n\n  var handleOnClick = function handleOnClick(event) {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    clearSelection(event);\n\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  };\n\n  var handleOnKeyDown = function handleOnKeyDown(event) {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    } // When a user hits ENTER, we'll clear the selection\n\n\n    if (match(event, keys.Enter)) {\n      clearSelection(event);\n\n      if (onClearSelection) {\n        onClearSelection(event);\n      }\n    }\n  };\n\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n  return selectionCount ? /*#__PURE__*/React.createElement(\"div\", {\n    className: tagClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tag__label\"),\n    title: selectionCount\n  }, selectionCount), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: disabled ? -1 : 0,\n    className: \"\".concat(prefix, \"--tag__close-icon\"),\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    disabled: disabled,\n    \"aria-label\": t('clear.all'),\n    title: description\n  }, /*#__PURE__*/React.createElement(Close16, null))) : /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    className: className,\n    tabIndex: disabled ? -1 : 0,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    \"aria-label\": description,\n    title: description\n  }, selectionCount, /*#__PURE__*/React.createElement(Close16, null));\n};\n\nexport var translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport default ListBoxSelection;","map":{"version":3,"sources":["/Users/henriquefelixcastro/Downloads/Educathon 2022/educathon-2022-website/node_modules/carbon-components-react/es/components/ListBox/ListBoxSelection.js"],"names":["_defineProperty","_defaultTranslations","cx","React","PropTypes","Close16","match","keys","usePrefix","ListBoxSelection","_ref","_cx","clearSelection","selectionCount","t","translateWithId","disabled","onClearSelection","prefix","className","concat","handleOnClick","event","stopPropagation","handleOnKeyDown","Enter","description","tagClasses","createElement","title","role","tabIndex","onClick","onKeyDown","translationIds","defaultTranslations","propTypes","func","isRequired","bool","number","defaultProps","id"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _defaultTranslations;\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Close16 } from '@carbon/icons-react';\nimport { match, keys } from '../../internal/keyboard';\nimport { usePrefix } from '../../internal/usePrefix';\n/**\n * `ListBoxSelection` is used to provide controls for clearing a selection, in\n * addition to conditionally rendering a badge if the control has more than one\n * selection.\n */\n\nvar ListBoxSelection = function ListBoxSelection(_ref) {\n  var _cx;\n\n  var clearSelection = _ref.clearSelection,\n      selectionCount = _ref.selectionCount,\n      t = _ref.translateWithId,\n      disabled = _ref.disabled,\n      onClearSelection = _ref.onClearSelection;\n  var prefix = usePrefix();\n  var className = cx(\"\".concat(prefix, \"--list-box__selection\"), (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--tag--filter\"), selectionCount), _defineProperty(_cx, \"\".concat(prefix, \"--list-box__selection--multi\"), selectionCount), _cx));\n\n  var handleOnClick = function handleOnClick(event) {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    clearSelection(event);\n\n    if (onClearSelection) {\n      onClearSelection(event);\n    }\n  };\n\n  var handleOnKeyDown = function handleOnKeyDown(event) {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    } // When a user hits ENTER, we'll clear the selection\n\n\n    if (match(event, keys.Enter)) {\n      clearSelection(event);\n\n      if (onClearSelection) {\n        onClearSelection(event);\n      }\n    }\n  };\n\n  var description = selectionCount ? t('clear.all') : t('clear.selection');\n  var tagClasses = cx(\"\".concat(prefix, \"--tag\"), \"\".concat(prefix, \"--tag--filter\"), \"\".concat(prefix, \"--tag--high-contrast\"), _defineProperty({}, \"\".concat(prefix, \"--tag--disabled\"), disabled));\n  return selectionCount ? /*#__PURE__*/React.createElement(\"div\", {\n    className: tagClasses\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tag__label\"),\n    title: selectionCount\n  }, selectionCount), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: disabled ? -1 : 0,\n    className: \"\".concat(prefix, \"--tag__close-icon\"),\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    disabled: disabled,\n    \"aria-label\": t('clear.all'),\n    title: description\n  }, /*#__PURE__*/React.createElement(Close16, null))) : /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    className: className,\n    tabIndex: disabled ? -1 : 0,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    \"aria-label\": description,\n    title: description\n  }, selectionCount, /*#__PURE__*/React.createElement(Close16, null));\n};\n\nexport var translationIds = {\n  'clear.all': 'clear.all',\n  'clear.selection': 'clear.selection'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['clear.all'], 'Clear all selected items'), _defineProperty(_defaultTranslations, translationIds['clear.selection'], 'Clear selected item'), _defaultTranslations);\nListBoxSelection.propTypes = {\n  /**\n   * Specify a function to be invoked when a user interacts with the clear\n   * selection element.\n   */\n  clearSelection: PropTypes.func.isRequired,\n\n  /**\n   * Specify whether or not the clear selection element should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify an optional `onClearSelection` handler that is called when the underlying\n   * element is cleared\n   */\n  onClearSelection: PropTypes.func,\n\n  /**\n   * Specify an optional `onClick` handler that is called when the underlying\n   * clear selection element is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify an optional `onKeyDown` handler that is called when the underlying\n   * clear selection element fires a keydown event\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Specify an optional `selectionCount` value that will be used to determine\n   * whether the selection should display a badge or a single clear icon.\n   */\n  selectionCount: PropTypes.number,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxSelection.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport default ListBoxSelection;"]},"metadata":{},"sourceType":"module"}