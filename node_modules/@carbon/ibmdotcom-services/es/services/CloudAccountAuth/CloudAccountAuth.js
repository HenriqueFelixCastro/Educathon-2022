import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _regeneratorRuntime from "@babel/runtime/regenerator";

/**
 * Copyright IBM Corp. 2021, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import axios from 'axios';
import { DDOAPI } from '../DDO';
import root from 'window-or-global';

var CloudAccountAuthAPI = /*#__PURE__*/function () {
  function CloudAccountAuthAPI() {
    _classCallCheck(this, CloudAccountAuthAPI);
  }

  _createClass(CloudAccountAuthAPI, null, [{
    key: "checkPersonalization",

    /**
     * retrieve the cloud login status via window object status
     * gets the full digitalData (DDO) object.
     *
     * @example
     * import { cloudAccountAuthentication } from '@carbon/ibmdotcom-utilities';
     *
     * const status = cloudAccountAuthentication.checkPersonalization();
     *
     * @returns {string} string determining login status
     */
    value: function () {
      var _checkPersonalization = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return DDOAPI.isReady().then(function () {
                  var _root$digitalData, _root$digitalData$use, _root$digitalData$use2;

                  var status = (_root$digitalData = root.digitalData) === null || _root$digitalData === void 0 ? void 0 : (_root$digitalData$use = _root$digitalData.user) === null || _root$digitalData$use === void 0 ? void 0 : (_root$digitalData$use2 = _root$digitalData$use.segment) === null || _root$digitalData$use2 === void 0 ? void 0 : _root$digitalData$use2.isCloudLoggedOn;
                  return {
                    user: status === true ? 'authenticated' : 'anonymous'
                  };
                });

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function checkPersonalization() {
        return _checkPersonalization.apply(this, arguments);
      }

      return checkPersonalization;
    }()
    /**
     * retrieve the cloud login status via api
     *
     * @example
     * import { cloudAccountAuthentication } from '@carbon/ibmdotcom-utilities';
     *
     * const status = cloudAccountAuthentication.checkAPI();
     *
     * @returns {string} string determining login status
     */

  }, {
    key: "checkAPI",
    value: function () {
      var _checkAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        var cloudLogin;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return axios.get('/api/v6/selected-account?profile=true', {
                  headers: {
                    Accept: 'application/json'
                  }
                }).then(function (response) {
                  return response.status === 200 ? 'authenticated' : 'anonymous';
                }).catch(function (error) {
                  console.error(error);
                  return 'anonymous';
                });

              case 2:
                cloudLogin = _context2.sent;
                return _context2.abrupt("return", {
                  user: cloudLogin
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function checkAPI() {
        return _checkAPI.apply(this, arguments);
      }

      return checkAPI;
    }()
  }]);

  return CloudAccountAuthAPI;
}();

export default CloudAccountAuthAPI;