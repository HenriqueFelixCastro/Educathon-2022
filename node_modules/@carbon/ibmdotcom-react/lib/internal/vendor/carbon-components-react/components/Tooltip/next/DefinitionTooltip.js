"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefinitionTooltip = DefinitionTooltip;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _Popover = require("../../Popover");

var _keyboard = require("../../../internal/keyboard");

var _usePrefix = require("../../../internal/usePrefix");

var _useId = require("../../../internal/useId");

var _excluded = ["children", "definition"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function DefinitionTooltip(_ref) {
  var children = _ref.children,
      definition = _ref.definition,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isOpen = _useState2[0],
      setOpen = _useState2[1];

  var prefix = (0, _usePrefix.usePrefix)();
  var id = (0, _useId.useId)();

  function handleKeyDown(event) {
    if (isOpen && (0, _keyboard.match)(event, _keyboard.keys.Escape)) {
      event.stopPropagation();
      setOpen(false);
    }
  }

  return /*#__PURE__*/_react.default.createElement(_Popover.Popover, {
    align: "bottom-left",
    dropShadow: false,
    highContrast: true,
    onMouseLeave: function onMouseLeave() {
      setOpen(false);
    },
    open: isOpen
  }, /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
    className: "".concat(prefix, "--definition-term")
  }, rest, {
    "aria-controls": id,
    "aria-expanded": isOpen,
    onBlur: function onBlur() {
      setOpen(false);
    },
    onClick: function onClick() {
      setOpen(!isOpen);
    },
    onKeyDown: handleKeyDown,
    type: "button"
  }), children), /*#__PURE__*/_react.default.createElement(_Popover.PopoverContent, {
    className: "".concat(prefix, "--definition-tooltip"),
    id: id
  }, definition));
}

DefinitionTooltip.propTypes = {
  /**
   * Provide the content being defined
   */
  children: _propTypes.default.node,

  /**
   * Provide the content being defined
   */
  definition: _propTypes.default.string.isRequired
};