"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = _interopRequireDefault(require("classnames"));

var _settings = _interopRequireDefault(require("../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings"));

var _Link = _interopRequireDefault(require("../../internal/vendor/carbon-components-react/components/Link/Link"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _settings2 = _interopRequireDefault(require("carbon-components/umd/globals/js/settings"));

/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var stablePrefix = _settings.default.stablePrefix;
var prefix = _settings2.default.prefix;
/**
 * LinkWithIcon component.
 */

var LinkWithIcon = function LinkWithIcon(_ref) {
  var _classNames2;

  var children = _ref.children,
      customClassName = _ref.className,
      href = _ref.href,
      inverse = _ref.inverse,
      iconInline = _ref.iconInline,
      iconPlacement = _ref.iconPlacement,
      props = (0, _objectWithoutProperties2.default)(_ref, ["children", "className", "href", "inverse", "iconInline", "iconPlacement"]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)("".concat(prefix, "--link-with-icon__container"), customClassName, (0, _defineProperty2.default)({}, "".concat(prefix, "--link-with-icon__container__inverse"), inverse)),
    "data-autoid": "".concat(stablePrefix, "--link-with-icon")
  }, /*#__PURE__*/_react.default.createElement(_Link.default, (0, _extends2.default)({
    size: "lg",
    href: href,
    className: (0, _classnames.default)("".concat(prefix, "--link-with-icon"), (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, "".concat(prefix, "--link-with-icon__icon-left"), iconPlacement === 'left'), (0, _defineProperty2.default)(_classNames2, "".concat(prefix, "--link-with-icon--inline-icon"), iconInline && iconPlacement === 'right'), _classNames2))
  }, props), children));
};

LinkWithIcon.propTypes = {
  /**
   * Array containing Link text and icon elements.
   */
  children: _propTypes.default.arrayOf(_propTypes.default.node),

  /**
   * Url of link.
   */
  href: _propTypes.default.string,

  /**
   * Positions the icon inline with text when `true`
   */
  iconInline: _propTypes.default.bool,

  /**
   * Icon placement.
   */
  iconPlacement: _propTypes.default.oneOf(['left', 'right']),

  /**
   * Toggles inverse theming
   */
  inverse: _propTypes.default.bool,

  /**
   * custom classname
   */
  className: _propTypes.default.string
};
LinkWithIcon.defaultProps = {
  children: [],
  href: '',
  iconInline: true,
  iconPlacement: 'right'
};
var _default = LinkWithIcon;
exports.default = _default;