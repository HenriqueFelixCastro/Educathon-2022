"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _ = _interopRequireDefault(require("@carbon/icons-react/lib/chevron--left/20"));

var _settings = _interopRequireDefault(require("carbon-components/umd/globals/js/settings"));

var _settings2 = _interopRequireDefault(require("../../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var stablePrefix = _settings2.default.stablePrefix;
var prefix = _settings.default.prefix;
/**
 * SideNavMenu BackButton component
 */

var SideNavMenuBackButton = _react.default.forwardRef(function SideNavMenuBackButton(props, ref) {
  var onBackClick = props.onBackClick,
      backButtonText = props.backButtonText,
      rest = (0, _objectWithoutProperties2.default)(props, ["onBackClick", "backButtonText"]);

  var handleBackButtonClick = function handleBackButtonClick(event) {
    event.preventDefault();
    onBackClick();
  };

  var handleBackButtonKeyPress = function handleBackButtonKeyPress(event) {
    if (event.key === 'Enter' || event.charCode === ' ') {
      event.preventDefault();
      onBackClick();
    }
  };

  return /*#__PURE__*/_react.default.createElement("li", {
    className: "".concat(prefix, "--side-nav__menu-item ").concat(prefix, "--masthead__side-nav--submemu-back")
  }, /*#__PURE__*/_react.default.createElement("button", {
    ref: ref,
    onClick: handleBackButtonClick,
    onKeyPress: handleBackButtonKeyPress,
    className: "".concat(prefix, "--side-nav__link"),
    "data-autoid": "".concat(stablePrefix, "--masthead-").concat(rest.navType, "-sidenav__l0-back"),
    isbackbutton: "true"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "".concat(prefix, "--side-nav__link-text")
  }, /*#__PURE__*/_react.default.createElement(_.default, null), backButtonText)));
});

SideNavMenuBackButton.propTypes = {
  /**
   * action on back click
   */
  onBackClick: _propTypes.default.func,

  /**
   * back button text
   */
  backButtonText: _propTypes.default.string
};
SideNavMenuBackButton.defaultProps = {
  backButtonText: 'Back',
  onBackClick: function onBackClick() {}
};
var _default = SideNavMenuBackButton;
exports.default = _default;