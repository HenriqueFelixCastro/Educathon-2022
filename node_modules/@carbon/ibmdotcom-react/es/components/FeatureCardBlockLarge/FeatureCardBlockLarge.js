import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Card } from '../Card';
import classNames from 'classnames';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import deprecate from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/deprecate/deprecate';
import PropTypes from 'prop-types';
import React from 'react';
import settings from 'carbon-components/es/globals/js/settings';
var stablePrefix = ddsSettings.stablePrefix;
var prefix = settings.prefix;
/**
 * Featured Card Block Large Component.
 * Note: Deprecated, use FeatureCard with size='large' attribute.
 */

var FeatureCardBlockLarge = function FeatureCardBlockLarge(props) {
  return props.eyebrow && props.heading && props.image && props.cta && /*#__PURE__*/React.createElement("section", {
    className: classNames("".concat(prefix, "--feature-card-block-large"), _defineProperty({}, "".concat(prefix, "--feature-card-block-large_no-copy-text"), !props.copy)),
    "data-autoid": "".concat(stablePrefix, "--feature-card-block-large")
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--feature-card-block-large__container")
  }, /*#__PURE__*/React.createElement(Card, _extends({
    customClassName: "".concat(prefix, "--feature-card-block-large__card")
  }, props))));
};

FeatureCardBlockLarge.propTypes = {
  /**
   * "Eyebrow" text above copy and CTA.
   */
  eyebrow: PropTypes.string.isRequired,

  /**
   * Title of the Card item.
   */
  heading: PropTypes.string.isRequired,

  /**
   * Body text for the card.
   */
  copy: PropTypes.string,

  /**
   * Object containing target and href of link. Has the following structure in summary:
   *
   * | Name   | Data Type | Description                                 |
   * | ------ | --------- | ------------------------------------------- |
   * | `href` | String    | Url of the FeatureCardBlockLarge component. |
   *
   * See [`<Card>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-card--static#props) for full usage details.
   */
  cta: PropTypes.shape({
    copy: PropTypes.string,
    href: PropTypes.string,
    type: PropTypes.oneOfType([PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']), PropTypes.arrayOf(PropTypes.oneOf(['jump', 'local', 'external', 'download', 'video']))])
  }).isRequired,

  /**
   * Contains source and alt text properties.
   * See [`<Image>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-image--default#props) for full usage details.
   */
  image: PropTypes.shape({
    classname: PropTypes.string,
    sources: PropTypes.arrayOf(PropTypes.shape({
      src: PropTypes.string,
      breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
    })),
    defaultSrc: PropTypes.string.isRequired,
    alt: PropTypes.string.isRequired,
    longDescription: PropTypes.string
  }).isRequired
};
export default deprecate(FeatureCardBlockLarge, "The FeatureCardBlockLarge component has been deprecated in favor of the FeatureCard component. " + "See FeatureCard's size attribute documentation for more information.");