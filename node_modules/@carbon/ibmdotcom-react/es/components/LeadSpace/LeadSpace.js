import _defineProperty from "@babel/runtime/helpers/defineProperty";

/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { ButtonGroup } from '../../components/ButtonGroup';
import classnames from 'classnames';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import deprecate from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/deprecate/deprecate.js';
import { Image } from '../Image';
import PropTypes from 'prop-types';
import React from 'react';
import settings from 'carbon-components/es/globals/js/settings';
var stablePrefix = ddsSettings.stablePrefix;
var prefix = settings.prefix;
/**
 * renders main class name
 *
 * @param {string} type switches between centered or default
 * @param {string} theme theme of the pattern
 * @returns {string} classnames
 */

var classNames = function classNames(type, theme) {
  var _classnames;

  return classnames("".concat(prefix, "--leadspace__section"), (_classnames = {}, _defineProperty(_classnames, "".concat(prefix, "--leadspace--").concat(theme), theme), _defineProperty(_classnames, "".concat(prefix, "--leadspace--centered"), type === 'centered'), _defineProperty(_classnames, "".concat(prefix, "--leadspace--productive"), type === 'small'), _classnames));
};
/**
 *
 * @param {object} image image
 * @returns {object} returns either image component or the centered image div
 */


function imageClassname(image) {
  return /*#__PURE__*/React.createElement(Image, image);
}
/**
 * Lead space component (left-aligned)
 *
 * @param {object} props props object
 * @param {Array} props.buttons array of buttons for lead space (max 2 buttons)
 * @param {string} props.copy lead space short copy to support the title
 * @param {object} props.image image object with diff source for diff breakpoints
 * @param {string} props.theme theme of the pattern (g100 or white (default))
 * @param {string} props.title lead space title
 * @param {string} props.type type of lead space
 * @returns {*} Lead space component
 */


var LeadSpace = function LeadSpace(_ref) {
  var _classnames2;

  var buttons = _ref.buttons,
      copy = _ref.copy,
      image = _ref.image,
      theme = _ref.theme,
      title = _ref.title,
      type = _ref.type,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'tall' : _ref$size;
  return /*#__PURE__*/React.createElement("div", {
    "data-autoid": "".concat(stablePrefix, "--leadspace"),
    className: classnames("".concat(prefix, "--leadspace"), (_classnames2 = {}, _defineProperty(_classnames2, "".concat(prefix, "--leadspace--medium"), size === 'medium'), _defineProperty(_classnames2, "".concat(prefix, "--leadspace--tall"), size === 'tall'), _defineProperty(_classnames2, "".concat(prefix, "--leadspace--super"), size === 'super'), _classnames2))
  }, /*#__PURE__*/React.createElement("section", {
    className: classNames(type, theme)
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--leadspace__container")
  }, /*#__PURE__*/React.createElement("div", {
    className: classnames("".concat(prefix, "--leadspace__overlay"), _defineProperty({}, "".concat(prefix, "--leadspace--gradient"), image && image.defaultSrc))
  }, image && image.defaultSrc === true ? undefined : /*#__PURE__*/React.createElement("svg", {
    className: "".concat(prefix, "--leadspace__gradient"),
    viewBox: "0 0 100 100",
    preserveAspectRatio: "none",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink"
  }, /*#__PURE__*/React.createElement("defs", null, /*#__PURE__*/React.createElement("linearGradient", {
    id: "stops",
    className: "".concat(prefix, "--leadspace__gradient__stops"),
    gradientTransform: type === 'centered' ? 'rotate(90)' : ''
  }, type === 'centered' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("stop", {
    offset: "0%"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "54%"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "77%"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "100%"
  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("stop", {
    offset: "0%"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "25%"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "50%"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "75%"
  })))), /*#__PURE__*/React.createElement("rect", {
    className: "".concat(prefix, "--leadspace__gradient__rect"),
    width: "100",
    height: "100"
  })), /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--leadspace--content__container")
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--leadspace__row")
  }, /*#__PURE__*/React.createElement("h1", {
    className: "".concat(prefix, "--leadspace__title")
  }, title)), /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--leadspace__content")
  }, copy && /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--leadspace__row")
  }, /*#__PURE__*/React.createElement("p", {
    "data-autoid": "".concat(stablePrefix, "--leadspace__desc"),
    className: "".concat(prefix, "--leadspace__desc")
  }, copy)), buttons && buttons.length > 0 && /*#__PURE__*/React.createElement(ButtonGroup, {
    buttons: buttons
  })))), image && imageClassname(image))));
};

LeadSpace.propTypes = {
  /**
   * Array of button objects to render (max 2).
   * See [`<ButtonGroup>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-buttongroup--default#button-item) for full usage details.
   */
  buttons: PropTypes.arrayOf(PropTypes.shape({
    copy: PropTypes.string.isRequired,
    href: PropTypes.string.isRequired,
    renderIcon: PropTypes.elementType
  })),

  /**
   * Short copy of LeadSpace.
   */
  copy: PropTypes.string,

  /**
   * Object with different ratio options for corresponding breakpoints.
   * See [`<Image>`'s README](http://www.ibm.com/standards/carbon/react/?path=/docs/components-image--default#props) for full usage details.
   */
  image: PropTypes.shape({
    classname: PropTypes.string,
    sources: PropTypes.arrayOf(PropTypes.shape({
      src: PropTypes.string,
      breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
    })),
    defaultSrc: PropTypes.string.isRequired,
    alt: PropTypes.string.isRequired,
    longDescription: PropTypes.string
  }),

  /**
   * Color theme of LeadSpace. Choose from:
   *
   * | Name    | Data Type | Description           |
   * | ------- | --------- | --------------------- |
   * | `white` | String    | Carbon White theme    |
   * | `g10`   | String    | Carbon Gray 10 theme  |
   * | `g90`   | String    | Carbon Gray 90 theme  |
   * | `g100`  | String    | Carbon Gray 100 theme |
   */
  theme: PropTypes.oneOf(['white', 'g10', 'g90', 'g100']),

  /**
   * Title of LeadSpace.
   */
  title: PropTypes.string.isRequired,

  /**
   * Sets the type of Leadspace layout. Choose from:
   *
   * | Name              | Data Type | Description                                         |
   * | ----------------- | --------- | --------------------------------------------------- |
   * | `default`         | String    | Left-aligned - default style of the leadspace title |
   * | `left`            | String    | Left-aligned - large style of the leadspace title   |
   * | `centered`        | String    | Centered type of the LeadSpace                      |
   */
  type: PropTypes.oneOf(['default', 'left', 'centered']),

  /**
   * | Name         | Data Type | Description                           |
   * |--------------|-----------|---------------------------------------|
   * | `tall`/empty | String/-- | Default - tall size of the leadspace  |
   * | `medium`     | String    | Medium - medium size of the leadspace |
   * | `super`      | String    | Super - super size of the leadspace   |
   */
  size: PropTypes.oneOf(['tall', 'medium', 'super'])
};
export default deprecate(LeadSpace, "\n  The Leadspace Small and Leadspace Small With Image variations are now deprecated.\n  Please refer to the Carbon for IBM.com documentation for further details.\n  https://www.ibm.com/standards/carbon/components/leadspace\n");