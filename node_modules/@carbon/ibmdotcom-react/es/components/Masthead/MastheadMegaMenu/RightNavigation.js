import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";

/**
 * Copyright IBM Corp. 2016, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import ArrowRight16 from '@carbon/icons-react/es/arrow--right/16';
import classnames from 'classnames';
import LinkWithIcon from '../../LinkWithIcon/LinkWithIcon';
import PropTypes from 'prop-types';
import React from 'react';
import settings from 'carbon-components/es/globals/js/settings';
var prefix = settings.prefix;
/**
 * Right/Main Panel Navigation of MegaMenu
 */

var RightNavigation = function RightNavigation(_ref) {
  var _classnames;

  var children = _ref.children,
      viewAllLinkHref = _ref.viewAllLinkHref,
      viewAllLinkTitle = _ref.viewAllLinkTitle,
      hasHighlights = _ref.hasHighlights,
      rest = _objectWithoutProperties(_ref, ["children", "viewAllLinkHref", "viewAllLinkTitle", "hasHighlights"]);

  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--masthead__megamenu__categories-section")
  }, /*#__PURE__*/React.createElement("div", {
    className: classnames("".concat(prefix, "--masthead__megamenu__categories"), (_classnames = {}, _defineProperty(_classnames, "".concat(prefix, "--masthead__megamenu--hasHighlights"), hasHighlights), _defineProperty(_classnames, "".concat(prefix, "--masthead__megamenu--hasViewAllLink"), viewAllLinkHref), _classnames))
  }, children), viewAllLinkHref && /*#__PURE__*/React.createElement(LinkWithIcon, {
    className: "".concat(prefix, "--masthead__megamenu__view-all-cta"),
    "data-autoid": "".concat(rest.autoid, "-view-all"),
    href: viewAllLinkHref,
    iconInline: false
  }, /*#__PURE__*/React.createElement("span", null, viewAllLinkTitle), /*#__PURE__*/React.createElement(ArrowRight16, null)));
};

RightNavigation.propTypes = {
  /**
   * Category Groups to be rendered in the Left Navigation Section
   */
  children: PropTypes.node.isRequired,

  /**
   * Determines whether to render the Highlight Section (Left Navigation)
   */
  hasHighlights: PropTypes.bool,

  /**
   * Megamenu view all cta url
   */
  viewAllLinkHref: PropTypes.string,

  /**
   * Megamenu view all cta title
   */
  viewAllLinkTitle: PropTypes.string
};
export default RightNavigation;