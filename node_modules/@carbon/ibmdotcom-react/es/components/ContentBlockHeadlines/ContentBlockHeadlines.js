import _extends from "@babel/runtime/helpers/extends";

/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import ContentBlock from '../ContentBlock/ContentBlock';
import { CTA } from '../CTA';
import { DDS_CONTENTBLOCK_HEADLINES } from '../../internal/FeatureFlags';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import featureFlag from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/featureflag/featureflag';
import PropTypes from 'prop-types';
import React from 'react';
import settings from 'carbon-components/es/globals/js/settings';
var stablePrefix = ddsSettings.stablePrefix;
var prefix = settings.prefix;
/**
 * ContentBlockHeadlines pattern
 */

var ContentBlockHeadlines = function ContentBlockHeadlines(_ref) {
  var heading = _ref.heading,
      copy = _ref.copy,
      items = _ref.items;
  return featureFlag(DDS_CONTENTBLOCK_HEADLINES, /*#__PURE__*/React.createElement("div", {
    "data-autoid": "".concat(stablePrefix, "--content-block-headlines"),
    className: "".concat(prefix, "--content-block-headlines")
  }, /*#__PURE__*/React.createElement(ContentBlock, {
    heading: heading,
    copy: copy,
    border: true
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--content-block-headlines__container")
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--content-block-headlines__row")
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefix, "--content-block-headlines__item-container")
  }, renderItems(items)))))));
};
/**
 * Renders the ContentBlockHeadlines items
 *
 * @param {Array} items array of content rows
 * @private
 * @returns {*} JSX component
 */


function renderItems(items) {
  var headlineItems = [];
  items.forEach(function (item, index) {
    headlineItems.push( /*#__PURE__*/React.createElement("div", {
      className: "".concat(prefix, "--content-block-headlines__item"),
      key: index
    }, /*#__PURE__*/React.createElement("h4", {
      className: "".concat(prefix, "--content-block-headlines__heading")
    }, item.headline), /*#__PURE__*/React.createElement("p", {
      className: "".concat(prefix, "--content-block-headlines__copy")
    }, item.copy), item.cta && /*#__PURE__*/React.createElement(CTA, _extends({
      customClassName: "".concat(prefix, "--content-block-headlines__cta-container")
    }, item.cta))));
  });
  return headlineItems;
}

ContentBlockHeadlines.propTypes = {
  /**
   * Heading of the content block.
   */
  heading: PropTypes.string.isRequired,

  /**
   * Intro copy of the content block.
   */
  copy: PropTypes.string.isRequired,

  /**
   * Array of content items.
   * See [CTA](http://www.ibm.com/standards/carbon/react/?path=/docs/components-cta--default#text-link) for full usage details.
   */
  items: PropTypes.arrayOf(PropTypes.shape({
    headline: PropTypes.string.isRequired,
    copy: PropTypes.string.isRequired,
    cta: PropTypes.shape({
      type: PropTypes.oneOfType([PropTypes.oneOf(['local', 'download', 'jump', 'external', 'video', 'default']), PropTypes.arrayOf(PropTypes.oneOf(['local', 'download', 'jump', 'external', 'video', 'default']))]),
      copy: PropTypes.string,
      href: PropTypes.string,
      customClassName: PropTypes.string
    })
  })).isRequired
};
export default ContentBlockHeadlines;